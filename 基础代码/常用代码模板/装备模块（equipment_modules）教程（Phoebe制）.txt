# 经验总结式的教程，大抵是够用的。如果有错漏，欢迎修订。


# 修改 equipment_module 的文件位于 "common/units/equipment/modules" 路径


#1 基本格式

equipment_modules = {
    #1.1 坦克模块
    equipment_modules_token = { #自定义token，用于在其他代码中进行识别，同时也是本地化键。
            abbreviation = "EMA" #缩写，自定义，无太大影响
            category = #类型，用于决定装配位置
                #tank_engine_type 引擎
                #tank_armor_type 装甲
                #tank_suspension_type 悬挂
                #tank_non_tracked_suspension_type 非履带式悬挂
                #tank_light_turret_type 轻型坦克炮塔（固定炮塔、双人炮塔那些）
                #tank_medium_turret_type 中型坦克炮塔
                #tank_heavy_turret_type 重型坦克炮塔
                #tank_super_heavy_turret_type 超重型坦克炮塔
                #tank_modern_turret_type 现代坦克炮塔
                #tank_small_main_armament 小型主炮
                #tank_flamethrower 喷火器
                #tank_medium_main_armament 中型主炮
                #tank_heavy_main_armament 重型主炮
                #tank_super_heavy_main_armament 超重型主炮
                #tank_radio_module 无线电
                #tank_special_module 特殊模块
                #tank_secondary_turret 副炮塔
                #lc_main_armament 陆巡主武器
                #lc_secondary_armament 陆巡副武器
                #lc_additional_armament 陆巡额外武器
                #lc_radio_module 陆巡无线电
                #lc_aerial_deployment 陆巡空中部署
                #lc_external_features 陆巡外部特征
                #lc_structural_features 陆巡结构特征
            sfx = #装配该模块时显示的音效
            allowed_module_categories = { #允许装备什么主武器
                main_armament_slot = {
                    #列表
                    #tank_medium_main_armament
                    #tank_heavy_main_armament
                    #tank_super_heavy_main_armament
                }
                #这个框架只用于炮塔
            }
            forbid_equipment_type_exact_match_for_category = { #禁止设备类型与类别完全匹配（机翻）
                #这个框架只用于炮塔
                #tank_medium_main_armament = armor
			    #tank_heavy_main_armament = armor
                #tank_super_heavy_main_armament = armor
            }
            allow_equipment_type = #装载该模块后允许作为什么定位
                #flame 喷火坦克支援连
                #anti_air 自行防空炮
                #artillery 自行火炮
                #anti_tank 自行反坦克炮
                #amphibious 两栖坦克
            forbid_equipment_type = { #装载该模块后禁止作为什么定位
                #flame 喷火坦克支援连
                #anti_air 自行防空炮
                #artillery 自行火炮
                #anti_tank 自行反坦克炮
            }
            forbid_equipment_type_exact_match = #装载该模块后禁止作为什么定位
                #armor 装甲单位
                #这个词条只有防空炮、火箭发射器和两栖引擎有
            parent = #前一代模块。假如本模块有前一代模块、有装备使用本模块、有装备使用本模块的前一代模块，则使用前一代模块的装备会被标记为过时
            add_stats = {
                #该模块给予装备的加算加成
            }
            multiply_stats = {
                #该模块给予装备的乘算加成
            }
            #加成列表
                #reliability = 可靠性
                #maximum_speed = 最高速度
                #soft_attack = 软攻
                #hard_attack = 硬攻
                #air_attack = 对空攻击
                #ap_attack = 穿甲深度
                #breakthrough = 突破
                #defense = 防御
                #max_strength = HP
                #armor_value = 装甲率
                #hardness = 装甲厚度
                #entrenchment = 堑壕
                #recon = 侦察
            xp_cost = #设计花费，装配该模块的陆军经验消耗
            dismantle_cost_ic = #拆除成本（机翻）
            build_cost_resources = {
                #该模块的材料消耗，例如
                #rubber = 2
                #材料列表
                    #steel = 钢铁
                    #chromium = 铬
                    #tungsten = 钨
                    #aluminium = 铝
                    #rubber = 橡胶
                    #！！！不包括oil！！！
            }
            can_convert_from = {
                #可以从什么改造过来，没有 parent 则直接按照下例中的 module_category 内模块改造，有 parent 则从 parent 改造
                #这个框架可以复制若干次，指定多种模块作为可改造模块
                #module = 装备模块
                #module_category = 装备模块类型
                #convert_cost_ic = 改造花费
            }
        }
    #1.2 飞机模块
        equipment_modules_token = { #自定义token，用于在其他代码中进行识别，同时也是本地化键。
            abbreviation = "EMA" #缩写，自定义，无太大影响
            category = #类型，用于决定装配位置
                #plane_engine_type 单发引擎
                #twin_plane_engine_type 双发引擎
                #medium_plane_engine_type 三发引擎
                #quad_large_plane_engine_type 四发引擎
                #large_plane_engine_type 六发引擎
                #plane_jet_engine_type 单发喷气引擎
                #twin_plane_jet_engine_type 双发喷气引擎
                #medium_plane_jet_engine_type 三发喷气引擎
                #quad_large_plane_jet_engine_type 四发喷气引擎
                #large_plane_jet_engine_type 六发喷气引擎
                #plane_rocket_engine_type 火箭引擎
                #fighter_weapon 战斗机主武器
                #cas_weapon 近地支援机主武器
                #tac_weapon 战术轰炸机主武器
                #strat_weapon 战略轰炸机主武器
                #nav_bomber_weapon 海军轰炸机主武器
                #recon_camera 侦察相机
                #mine_warfare_offense 布雷设备
                #mine_warfare_defense 扫雷设备
                #kamikaze_bomber_weapon 自杀式飞机主武器
                #plane_special_module_small 装甲板（小型机身）
                #plane_special_module_medium 装甲板（中型机身）
                #plane_special_module_large 装甲板（大型机身）
                #plane_special_module_bomb_sights 轰炸机瞄具
                #plane_special_module_radio_navigation 无线电导航
                #plane_special_module_air_ground_radar 空对地雷达
                #plane_special_module_air_air_radar 空空雷达
                #plane_special_module_defense_turret 防御炮塔
                #plane_special_module_defense_turret_x2 双联装防御炮塔
            gui_category = #未知，可能是装配该模块时在机体模型上改变的位置
                #仅有以下三种类型
                #nav_bomber_weapon 海军轰炸设备
                #plane_special_module_electronics 电子战设备
                #plane_special_module_defense_turret 防御炮塔
            sfx = #装配该模块时显示的音效
            add_equipment_type = {
                #equipment_modules_equipment_type_1
                #equipment_modules_equipment_type_2 #当装备装配该模块后，将改变此装备的类型（可为同时被分为若干类，学说加成是根据这些类型判断的）
            }
                #fighter 战斗机
                #heavy_fighter 重型战斗机
                #cas 近地支援机
                #tactical_bomber 战术轰炸机
                #strategic_bomber 战略轰炸机
                #naval_bomber 海军轰炸机
                #maritime_patrol_plane 海上大型巡逻机
                #scout_plane 侦察机
                #suicide 自杀式飞机
            parent = #前一代模块。假如本模块有前一代模块、有装备使用本模块、有装备使用本模块的前一代模块，则使用前一代模块的装备会被标记为过时
            add_stats = {
                #该模块给予装备的加算加成
            }
            add_average_stats = {
                #该模块给予装备的平均值加算加成
                #原版文件中只有对海瞄准一个属性使用这个格式进行加成
            }
            multiply_stats = {
                #该模块给予装备的乘算加成
            }
            mission_type_stats = {
                #在执行特定任务时，该模块给予装备的加算加成
            }
            #加成列表
                #air_attack = 对空攻击
                #air_defence = 对空防御
                #air_range = 最大航程
                #air_agility = 机动
                #air_ground_attack = 对地攻击
                #air_bombing = 战略轰炸 
                #air_superiority = 空优 
                #naval_strike_attack = 对海攻击
                #naval_strike_targetting = 对海瞄准
                #carrier_size = 搭载量
                #default_carrier_composition_weight = 默认重量
            xp_cost = #设计花费，装配该模块的空军经验消耗
            dismantle_cost_ic = #拆除成本（机翻）
            allow_mission_type = {
                #允许执行的任务
                #列表
                    #air_superiority 夺取制空权
                    #interception 拦截
                    #cas 近地支援
                    #attack_logistics 攻击后勤
                    #naval_bomber 海上轰炸
                    #port_strike 袭击港口
                    #strategic_bomber 战略轰炸
                    #naval_patrol 海上巡逻
                    #recon 侦察
                    #naval_mines_planting 海上布雷
                    #naval_kamikaze 自杀式袭击
                    #naval_mines_sweeping 海上扫雷
            }
            build_cost_resources = {
                #该模块的材料消耗，例如
                #rubber = 2
                #材料列表
                    #steel = 钢铁
                    #chromium = 铬
                    #tungsten = 钨
                    #aluminium = 铝
                    #rubber = 橡胶
                    #！！！不包括oil！！！
            }
            can_convert_from = {
                #可以从什么改造过来，没有 parent 则直接按照下例中的 module_category 内模块改造，有 parent 则从 parent 改造
                #这个框架可以复制若干次，指定多种模块作为可改造模块
                #module = 装备模块
                #module_category = 装备模块类型
                #convert_cost_ic = 改造花费
            }
        }
    #1.3 舰船模块
        equipment_modules_token = { #自定义token，用于在其他代码中进行识别，同时也是本地化键。
            abbreviation = "EMA" #缩写，自定义，无太大影响
            category = #类型，用于决定装配位置
                #ship_light_battery 轻炮
                #dp_light_battery 高平两用轻炮
                #ship_heavy_battery 重炮
                #ship_super_heavy_battery 超重炮
                #ship_medium_battery 中炮
                #ship_light_medium_battery 巡洋主炮
                #ship_secondaries 副炮
                #ship_dp_secondaries 高平两用副炮
                #ship_anti_air 防空炮
                #ship_fire_control_system 火控
                #ship_radar 雷达
                #sub_ship_engine 潜艇引擎
                #sub_ship_nuclear_engine 核潜艇引擎
                #cruiser_ship_engine 巡洋舰引擎
                #heavy_ship_engine 重型战舰引擎
                #carrier_ship_engine 航母引擎
                #ship_torpedo 水面舰艇鱼雷
                #ship_torpedo_sub 潜艇鱼雷
                #ship_mine_layer 水面舰艇布雷设备
                #ship_mine_layer_sub 潜艇布雷设备
                #ship_mine_warfare 扫雷设备
                #ship_depth_charge 深水炸弹
                #ship_sub_snorkel 潜望镜
                #ship_sub_coating 涂层
                #ship_light_battery_sub 潜艇用轻炮
                #ship_airplane_launcher 水上飞机发射器
                #ship_deck_space 飞机甲板
                #big_ship_deck_space 大型飞机甲板
                #ship_rocket 舰载导弹发射平台
                #ship_nuclear_rocket 舰载核导弹发射平台
                #ship_extra_fuel_tank 运送额外的油箱（机翻，不确定具体是什么）
                #ship_sonar 声呐
                #ship_heavy_armor 重型战舰装甲
                #ship_cruiser_armor 巡洋舰装甲
                #ship_carrier_armor 航母装甲
                #ship_ice_carrier_armor 冰航母装甲
            gfx = #显示图标，有特殊定义格式，后文会说明具体如何定义
            gui_category = #未知，可能是装配该模块时在机体模型上改变的位置
                #仅有以下三种类型
                #ship_light_battery 轻炮
                #ship_medium_battery 中炮
                #ship_secondaries 副炮
                #ship_mine_warfare 水面舰艇布雷设备
            sfx = #装配该模块时显示的音效
            add_equipment_type = #当装备装配该模块后，将改变此装备的类型
                #capital_ship 主力舰
                #anti_air 防空舰（这个可能是固定为屏卫舰的意思？）
                #missile_launcher 导弹发射器
            parent = #前一代模块。假如本模块有前一代模块、有装备使用本模块、有装备使用本模块的前一代模块，则使用前一代模块的装备会被标记为过时
            add_stats = {
                #该模块给予装备的加算加成
            }   
            add_average_stats = {
                #该模块给予装备的平均值加算加成
                #原版文件中只有轻炮穿甲、重炮穿甲、HP三个属性使用这个格式进行加成
            }
            multiply_stats = {
                #该模块给予装备的乘算加成
            }
            #加成列表
                #max_strength = HP
                #naval_speed = 最大速度
                #lg_armor_piercing = 轻炮穿甲
                #lg_attack = 轻炮攻击
                #hg_armor_piercing = 重炮穿甲
                #hg_attack = 重炮攻击
                #torpedo_attack = 鱼雷攻击
                #anti_air_attack = 对空攻击
                #shore_bombardment = 对岸炮击
                #surface_detection = 水面侦察
                #sub_attack = 反潜攻击
                #sub_detection = 对潜侦测
                #surface_visibility = 水面能见度
                #sub_visibility = 潜艇能见度
                #naval_range = 海军航程
                #port_capacity_usage = 港口容量使用 #船舶在港口需要多少空间
                #search_and_destroy_coordination = 搜索并歼灭 #当执行搜索并歼灭任务时，发现目标后集结舰队的速度
                #convoy_raiding_coordination = 应该是护航效率
                #carrier_size = 机库大小
            #舰船装备模块没有xp_cost选项，所有舰船装备模块设计花费默认为5
            dismantle_cost_ic = #拆除成本（机翻）
            build_cost_resources = {
                #该模块的材料消耗，例如
                #rubber = 2
                #材料列表
                    #steel = 钢铁
                    #chromium = 铬
                    #tungsten = 钨
                    #aluminium = 铝
                    #rubber = 橡胶
                    #！！！不包括oil！！！
            }
            can_convert_from = {
                #可以从什么改造过来，没有 parent 则直接按照下例中的 module_category 内模块改造，有 parent 则从 parent 改造
                #这个框架可以复制若干次，指定多种模块作为可改造模块
                #module = 装备模块
                #module_category = 装备模块类型
                #convert_cost_ic = 改造花费
            }
            critical_parts = {
                #在模块处显示模块的类型，但不会影响模块装配的槽位
                    #列表
                    #damaged_heavy_guns 重炮
                    #damaged_light_guns 轻炮
                    #damaged_secondaries 副炮、近防炮
                    #damaged_torpedoes 鱼雷
            }
        }

}

#2 图标定义
    
    #装备模块的图标定义方式稍微有点特殊。
    #对于坦克和飞机的装备模块，应在interface里如此定义

	spriteType = {
		name = "GFX_EMI_equipment_modules_token"
		textureFile = "gfx/……"
		legacy_lazy_load = no
	}

    #对于已有gfx定义的舰船装备模块，应在interface里如此定义

	spriteType = {
		name = "GFX_SMI_你定义的gfx"
		textureFile = "gfx/……"
		legacy_lazy_load = no
	}

#3 本地化
    equipment_modules_token:0 "" #模块名称
    equipment_modules_token_desc:0 "" #模块详细说明
