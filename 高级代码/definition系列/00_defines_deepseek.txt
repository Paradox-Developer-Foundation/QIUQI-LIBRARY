NDefines = {

NDefines = {



NGame = {

游戏 = {

START_DATE = “1936.1.1.12”,

开始日期 = “1936.1.1.12”,

END_DATE = “1949.1.1.1”,

结束日期 = “1949.1.1.1”,

MAP_SCALE_PIXEL_TO_KM = 7.114,					— Yes, we did the math

MAP_SCALE_PIXEL_TO_KM = 7.114, —— 没错，我们计算过了

SAVE_VERSION = 25,								— 1.16.0 (Countenance)

SAVE_VERSION = 25, — 1.16.0（面容）

CHECKSUM_SALT = “zwOdv5d9wm9uDSOT”,				— Data to modify generated checksum when game binaries have changed but not any content files.

CHECKSUM_SALT = “zwOdv5d9wm9uDSOT”, —— 当游戏二进制文件变更但内容文件未更改时，用于修改生成校验和的数据。

LAG_DAYS_FOR_LOWER_SPEED = 10,					— Days of client lag for decrease of gamespeed

LAG_DAYS_FOR_LOWER_SPEED = 10, — 客户端延迟天数用于降低游戏速度

LAG_DAYS_FOR_PAUSE = 25,						— Days of client lag for pause of gamespeed.

LAG_DAYS_FOR_PAUSE = 25, — 客户端延迟天数，用于暂停游戏速度。

GAME_SPEED_SECONDS = { 2.0, 0.5, 0.2, 0.1, 0.0 }, — game speeds for each level. Must be 5 entries with last one 0 for unbound

GAME_SPEED_SECONDS = { 2.0, 0.5, 0.2, 0.1, 0.0 }, — 每个等级对应的游戏速度。必须包含5个条目，最后一个为0表示无限制

MAJOR_PARTICIPANTS_FOR_MAJOR_WAR = 3,			— Minimum number of major countries involved in a war to consider it major enough to not end the game even though the enddate has been reached.

主要战争参与大国数量 = 3, ——在达到游戏结束日期时，判断战争规模是否足以阻止游戏结束所需参与的主要国家最低数量。

TRADE_ROUTE_RECALCULATE_FREQUENCY_DAYS = 30, — Max recalculation time for all trade routes (0 means we do not recalucate prediodically trade routes)

TRADE_ROUTE_RECALCULATE_FREQUENCY_DAYS = 30, — 所有贸易路线的最大重新计算时间（0表示不会定期重新计算贸易路线）

COMBAT_LOG_MAX_MONTHS = 12,

COMBAT_LOG_MAX_MONTHS = 12,

MESSAGE_TIMEOUT_DAYS = 60,						— Useful if running the handsoff game. The popup messages that doesn’t require the player respond will automatically hide after some timeout.

MESSAGE_TIMEOUT_DAYS = 60, — 适用于无人值守游戏运行。那些无需玩家回应的弹出消息将在超时后自动隐藏。

INFO_MESSAGE_TIMEOUT_DAYS = 3,					— Same but for unimportant messages.

INFO_MESSAGE_TIMEOUT_DAYS = 3, — 同样适用于非重要消息。

AIR_LOG_TIMEOUT_HOURS = 24,						— Data storring data

AIR_LOG_TIMEOUT_HOURS = 24, —— 数据存储时间

EVENT_TIMEOUT_DEFAULT = 13,						— Default days before an event times out if not scripted

EVENT_TIMEOUT_DEFAULT = 13, —— 如果未编写脚本，事件超时的默认天数

MISSION_REMOVE_FROM_INTERFACE_DEFAULT = 13,		— Default days before a mission is removed from the interface after having failed or completed

MISSION_REMOVE_FROM_INTERFACE_DEFAULT = 13, — 任务在失败或完成后默认从界面移除前的天数

DECISION_ALERT_TIMEOUT_DAYS = 30,				— Days left when player will be alerted about timing out events or decisions

DECISION_ALERT_TIMEOUT_DAYS = 30, — 当玩家将被提醒有关事件或决策即将超时的剩余天数

FUEL_RESOURCE = “oil”,							— resource that will give country fuel

燃料资源 = "石油", -- 为国家提供燃料的资源

MAX_EFFECT_ITERATION = 1000,					— maximum allowed iteration for loop effects

MAX_EFFECT_ITERATION = 1000, — 循环效果允许的最大迭代次数

MAX_SCRIPTED_LOC_RECURSION = 30,				— max recursion for scripted localizations

MAX_SCRIPTED_LOC_RECURSION = 30, —— 脚本本地化的最大递归深度

HANDS_OFF_START_TAG = “HAI”,					— tag for player country for -hands_off runs. use an existing tag that is less likely to affect the game

HANDS_OFF_START_TAG = "HAI", —— 用于-hands_off模式下玩家国家的标签。请使用一个不太可能影响游戏的现有标签

ALERT_SFX_COOLDOWN_DAYS = 14,					— After playing an alert sound, don’t play the same sound for XXX days, even if it fires again.

ALERT_SFX_COOLDOWN_DAYS = 14, — 在播放警报音效后，XXX天内即使再次触发也不播放相同音效。

MUSIC_PLAYER_RECENTLY_PLAYED_SIZE = 10,			— The music player keeps track of recently played music to try and avoid playing the same songs too often. This determines the max number of songs in the recently played list.

MUSIC_PLAYER_RECENTLY_PLAYED_SIZE = 10，——音乐播放器会记录最近播放的歌曲以避免频繁重复播放同一曲目。此参数决定最近播放列表中的最大歌曲数量。

},



NGeography = {

N地理 = {

MEDITERRANEAN_SEA_REGIONS = { 29, 68, 69, 168, 169, 202 }, — The sea regions that are considered as part of the Mediterranean sea

MEDITERRANEAN_SEA_REGIONS = { 29, 68, 69, 168, 169, 202 }, — 被视为地中海一部分的海域区域

},



NDiplomacy = {

NDiplomacy = {

DIPLOMACY_REQUEST_EXPIRY_DAYS = 30,

DIPLOMACY_REQUEST_EXPIRY_DAYS = 30,

BASE_SURRENDER_LEVEL = 1.0,						— Surrender when level reached. valid 0-1

BASE_SURRENDER_LEVEL = 1.0, — 当达到该等级时投降。有效范围为0-1

MAX_TRUST_VALUE = 100,							— Max trust value cap.

MAX_TRUST_VALUE = 100, — 信任值上限设定。

MIN_TRUST_VALUE = -100,							— Min trust value cap.

MIN_TRUST_VALUE = -100, — 最小信任值下限。

MAX_OPINION_VALUE = 100,						— Max opinion value cap.

MAX_OPINION_VALUE = 100, —— 最大观点值上限。

MIN_OPINION_VALUE = -100,						— Min opinion value cap.

MIN_OPINION_VALUE = -100, —— 最小意见值上限。

BASE_TRUCE_PERIOD = 180,						— Base truce period in days.

BASE_TRUCE_PERIOD = 180, — 基础休战期限，单位为天。

TRUCE_PERIOD_AFTER_KICKING_FROM_FACTION = 60,				— Truce period after kicking someone from faction in days.

TRUCE_PERIOD_AFTER_KICKING_FROM_FACTION = 60, — 踢出派系后的休战期（以天为单位）。

NUM_DAYS_TO_ENABLE_KICKING_NEW_MEMBERS_OF_FACTION = 90,			— Number of days before being able to kick a new member of faction

NUM_DAYS_TO_ENABLE_KICKING_NEW_MEMBERS_OF_FACTION = 90, — 允许踢出派系新成员前所需天数

NUM_DAYS_TO_ENABLE_REINVITE_KICKED_NATIONS = 90,			— Number of days before being able to re invite a kicked nation to your faction

NUM_DAYS_TO_ENABLE_REINVITE_KICKED_NATIONS = 90, — 被踢出阵营的国家可重新获得邀请前所需等待的天数

BASE_NEGATIVE_OPINION_AFTER_BEING_KICKED = 20,				— Negative opinion that will be received after kicking a nation

BASE_NEGATIVE_OPINION_AFTER_BEING_KICKED = 20, — 在踢出一个国家后将获得的负面评价

DECAY_RATE_OF_NEGATIVE_OPINION_AFTER_BEING_KICKED = 1,			— Weekly decay rate of the negative opinion

DECAY_RATE_OF_NEGATIVE_OPINION_AFTER_BEING_KICKED = 1, — 被踢出后负面意见的每周衰减率

TRUCE_BREAK_COST_PP = 200,						— Base cost in PP of breaking a truce by joining a war or accepting a call to war ( you cannot declare war yourself until the truce if up ), this is then multiplied by the time left on the truce ( so once half the truce is up it only cost 50% of this )

TRUCE_BREAK_COST_PP = 200, — 撕毁停战协议的基础政治点数成本（通过加入战争或接受战争号召，在停战期间你无法主动宣战），此数值会根据停战剩余时间进行乘法计算（例如当停战期过半时，成本仅为此数值的50%）

BASE_PEACE_PUPPET_FACTOR = 100,					— Base factor for puppet in %.

BASE_PEACE_PUPPET_FACTOR = 100, — 傀儡基础百分比系数

BASE_PEACE_LIBERATE_FACTOR = 100,				— Base factor for liberate in %.

BASE_PEACE_LIBERATE_FACTOR = 100, — 解放百分比基础系数

BASE_PEACE_TAKE_UNCONTROLLED_STATE_FACTOR = 10.0, — Base factor for taking state you do not control

BASE_PEACE_TAKE_UNCONTROLLED_STATE_FACTOR = 10.0, —— 夺取你未控制状态的基础因子

BASE_PEACE_TAKE_FACTION_CONTROLLED_STATE_FACTOR = 0.5, — Base factor for taking state you do not control, but someone in faction does

BASE_PEACE_TAKE_FACTION_CONTROLLED_STATE_FACTOR = 0.5, —— 夺取你未控制但阵营内其他成员控制的省份时的基础系数

BASE_PEACE_FORCE_GOVERNMENT_COST = 100, 		— Base cost for forcing a country to change government.

BASE_PEACE_FORCE_GOVERNMENT_COST = 100, — 强制改变国家政府的基础成本。

— In peace conference, cost is factored based on how many times the state has been contested and for how long it has been uncontested (for everyone else)

——在和平会议上，成本的计算依据是该地区被争夺的次数以及对于其他各方而言其未被争夺的时间长短。

PEACE_COST_FACTOR_CONTESTED_MAX = 15, — To prevent overflows due to the exponential increase, cap the contested factor to this

PEACE_COST_FACTOR_CONTESTED_MAX = 15, —— 为防止因指数增长导致的溢出，将争议因子上限设定为此值

PEACE_COST_FACTOR_UNCONTESTED_MAX = 15, — To prevent overflows due to the exponential increase, cap the uncontested factor to this

PEACE_COST_FACTOR_UNCONTESTED_MAX = 15, —— 为防止因指数增长导致溢出，将无争议因子上限设定为此值

PEACE_COST_FACTOR_CONTESTED_BID = 1.20, — Cost factor for each contested bid on the state.

PEACE_COST_FACTOR_CONTESTED_BID = 1.20, —— 国家每项争议投标的成本系数。

PEACE_COST_FACTOR_UNCONTESTED_BID_MIN = 1.15, — Minimum cost factor for each turn a bid has been uncontested on the state.

PEACE_COST_FACTOR_UNCONTESTED_BID_MIN = 1.15, —— 针对该状态下每轮未被竞标的出价，最小成本系数。

PEACE_COST_FACTOR_UNCONTESTED_BID_MAX = 1.60, — Maximum cost factor for each turn a bid has been uncontested on the state.

PEACE_COST_FACTOR_UNCONTESTED_BID_MAX = 1.60, —— 对于国家每轮未被竞标的出价，其成本系数的最大值。

PEACE_COST_FACTOR_UNCONTESTED_BID_STEP = 0.15, — Uncontested cost factor will increase by this much each turn.

PEACE_COST_FACTOR_UNCONTESTED_BID_STEP = 0.15, —— 每回合无争议成本因子将按此数值递增。

PEACE_COST_FACTOR_CAPITAL_SHIP_IC = 0.005,				— In peace conference, cost for taking one capital ship per IC

PEACE_COST_FACTOR_CAPITAL_SHIP_IC = 0.005, — 在和谈会议中，每点工业能力值对应的缴获一艘主力舰所需成本

PEACE_COST_FACTOR_SCREENING_SHIP_IC = 0.005,			— In peace conference, cost for taking a part of the screening ships per IC

和平会议中，每单位工业能力获取部分护航舰艇的成本 = 0.005,

PEACE_INCREASE_COST_FACTOR_PER_MISSING_PERCENT_FOR_CAPITULATION = 0.0012, 	— increase factor if loser has not capitulated, for every percent between surrender level and BASE_SURRENDER_LEVEL

PEACE_INCREASE_COST_FACTOR_PER_MISSING_PERCENT_FOR_CAPITULATION = 0.0012，——若败方未投降，则每低于基础投降水平(BASE_SURRENDER_LEVEL)一个百分点时，和平成本增加系数

— peace action taker has a discount if they occupy the state depending on compliance

— 和平行动参与者若占据该州，根据服从程度可享折扣

— it’s a table where first value is the compliance level, and the second the factor

— 这是一个表格，第一列代表合规级别，第二列为相应系数。

PEACE_COST_FACTOR_COMPLIANCE_STEPS = {

和平成本因素合规步骤 = {

0, 1.0, — between 0% and 30% compliance, factor is 1.0

0、1.0——介于0%至30%合规率之间，系数为1.0

30, 0.9, — between 30% and 70%

30，0.9，——介于30%到70%之间

70, 0.8, — above 70%

70，0.8，——高于70%

},

— In peace conference, adding a stackable to a peace action, increment the cost by a percentage

— 在和谈会议中，为和平行动添加可叠加项时，按百分比递增成本

PEACE_COST_FACTOR_STACK_DEMILITARIZED_ZONE = 0.25,

和平成本系数堆叠非军事区 = 0.25,

PEACE_COST_FACTOR_STACK_WAR_REPARATION = 0.25,

PEACE_COST_FACTOR_STACK_WAR_REPARATION = 0.25,

PEACE_COST_FACTOR_STACK_RESOURCE_RIGHTS = 0.25,

PEACE_COST_FACTOR_STACK_RESOURCE_RIGHTS = 0.25,

PEACE_COST_FACTOR_STACK_DISMANTLE_INDUSTRY = 0.25,

和平成本系数_拆除工业堆栈 = 0.25,

— peace conference can set timed effect, set length in days

— 和平会议可设定时限效果，设置持续天数

PEACE_TIMED_EFFECT_LENGTH_DEMILITARIZED_ZONE = 1825, — 5 years

PEACE_TIMED_EFFECT_LENGTH_DEMILITARIZED_ZONE = 1825, —— 5年

PEACE_TIMED_EFFECT_LENGTH_WAR_REPARATION = 1825,

和平_时限效果_战争赔款_持续时间 = 1825,

PEACE_TIMED_EFFECT_LENGTH_RESOURCE_RIGHTS = 1825,

PEACE_TIMED_EFFECT_LENGTH_RESOURCE_RIGHTS = 1825,

PEACE_TIMED_EFFECT_RATIO_CIVILIAN_FACTORY_WAR_REPARATION = 0.5, 	— ratio of civilian factories taken via stackable war reparation

PEACE_TIMED_EFFECT_RATIO_CIVILIAN_FACTORY_WAR_REPARATION = 0.5, —— 通过可叠加战争赔款获取的民用工厂比例



— The Influence cost modifier is basically the inverse of distance. Nearby states are cheaper, and far-away states are more expensive.

影响力成本修正值基本上与距离成反比。邻近省份的成本较低，而偏远省份的成本更高。

— We basically do a two-segment lerp:

我们基本上执行一个两段线性插值（lerp）：

— if distance is between [0, NEUTRAL_DIST], we lerp the cost modifier between [MIN_DIST_COST_MODIFIER, 1.0]

——如果距离在[0, NEUTRAL_DIST]之间，则通过线性插值将成本修正系数在[MIN_DIST_COST_MODIFIER, 1.0]之间过渡

— if distance is between [NEUTRAL_DIST, MAX_DIST], we lerp the cost modifier between [1.0, MAX_DIST_COST_MODIFIER]

——如果距离介于[NEUTRAL_DIST, MAX_DIST]之间，则对成本修正系数在[1.0, MAX_DIST_COST_MODIFIER]范围内进行线性插值

— The below values represent (pixel distance / INFLUENCE_DISTANCE_DIVISOR)

— 以下数值代表（像素距离/影响力距离除数）

INFLUENCE_NEUTRAL_DIST_CAPITAL = 30.0, — distance to capital that results in a cost modifier of 1.0

INFLUENCE_NEUTRAL_DIST_CAPITAL = 30.0, — 到首都的距离，该距离下的影响力成本修正系数为1.0

INFLUENCE_MAX_DIST_CAPITAL = 45.0, — distance to capital that results in a cost modifier of INFLUENCE_MAX_DIST_COST_MODIFIER

INFLUENCE_MAX_DIST_CAPITAL = 45.0, — 到首都的距离，导致成本修正为INFLUENCE_MAX_DIST_COST_MODIFIER

INFLUENCE_NEUTRAL_DIST_CORE = 6.0, — distance to nearest core state that results in a cost modifier of 1.0

INFLUENCE_NEUTRAL_DIST_CORE = 6.0, — 到最近核心状态的距离，导致成本修正系数为1.0

INFLUENCE_MAX_DIST_CORE = 13.0, — distance to nearest core state that results in a cost modifier of INFLUENCE_MAX_DIST_COST_MODIFIER

INFLUENCE_MAX_DIST_CORE = 13.0, — 到最近核心状态的距离，该距离会导致成本修改器为INFLUENCE_MAX_DIST_COST_MODIFIER

INFLUENCE_NEUTRAL_DIST_CONTROLLED = 14.0, — distance to nearest controlled state that results in a cost modifier of 1.0

INFLUENCE_NEUTRAL_DIST_CONTROLLED = 14.0，——到最近受控状态的距离，该距离会导致成本修正系数为1.0

INFLUENCE_MAX_DIST_CONTROLLED = 20.0, — distance to nearest controlled state that results in a cost modifier of INFLUENCE_MAX_DIST_COST_MODIFIER

INFLUENCE_MAX_DIST_CONTROLLED = 20.0, — 距离最近受控状态的距离，导致成本修正为INFLUENCE_MAX_DIST_COST_MODIFIER

INFLUENCE_MIN_DIST_COST_MODIFIER = 0.70, — Cost modifier at min (zero) distance

INFLUENCE_MIN_DIST_COST_MODIFIER = 0.70, —— 最小（零）距离时的成本修正系数

INFLUENCE_MAX_DIST_COST_MODIFIER = 1.00, — Cost modifier at max distance

INFLUENCE_MAX_DIST_COST_MODIFIER = 1.00, — 最大距离时的成本修正系数

INFLUENCE_RATIO_CAPITAL = 0.05, — Ratio of influence based on distance to capital

INFLUENCE_RATIO_CAPITAL = 0.05, — 基于距离首都的影响力比例

INFLUENCE_RATIO_CORE = 0.45, — Ratio of influence based on distance to nearest core territory

影响力核心比率 = 0.45，——基于距最近核心领土距离的影响力比率

INFLUENCE_RATIO_CONTROLLED = 0.5, — Ratio of influence based on distance to neared controlled territory (including uncontested peace conference bids)

INFLUENCE_RATIO_CONTROLLED = 0.5, — 基于距离最近控制领土（包括无争议和平会议投标）的影响力比例

INFLUENCE_DISTANCE_DIVISOR = 22.0, — Divide pixel distance with this when determining distance to capital / core / controlled states. Just an arbitrary way of scaling the distance numbers.

影响力距离除数 = 22.0, ——在计算至首都/核心/控制州府的距离时，用此值除以像素距离。仅为一种随意的距离数值缩放方式。



INFLUENCE_PER_ADJACENCY = 0.05,					— How much influence to add per uncontested adjacent state in the PC (blob, don’t snake)

每有一个未被争议的相邻州（PC中），影响力增加0.05（整体区域，非蛇形扩张）



INFLUENCE_MAJOR_FACTOR = 1.0,					—How much influence discount an AI major will get (inverse)

INFLUENCE_MAJOR_FACTOR = 1.0, —AI专业影响折扣的程度（反向计算）

INFLUENCE_MINOR_FACTOR = 1.0,					—How much influence discount an AI minor will get (inverse)

INFLUENCE_MINOR_FACTOR = 1.0, —AI未成年人将获得的影响力折扣比例（反向计算）



PEACE_TRIGGER_AI_MAX_INFLUENCE_VALUE = 0.99,	— Max influence value for pc_is_state_outside_influence_for_winner trigger

PEACE_TRIGGER_AI_MAX_INFLUENCE_VALUE = 0.99, — pc_is_state_outside_influence_for_winner触发器的最大影响力值



BASE_IMPROVE_RELATION_COST = 10, — Political power cost to initiate relation improvement

BASE_IMPROVE_RELATION_COST = 10, —— 启动关系改善所需的政治点数消耗

BASE_IMPROVE_RELATION_SAME_IDEOLOGY_GROUP_MAINTAIN_COST = 0.2, — Political power cost each update when boosting relations with nation of same ideology

BASE_IMPROVE_RELATION_SAME_IDEOLOGY_GROUP_MAINTAIN_COST = 0.2, — 提升与同意识形态阵营国家关系时每次更新所需的政治点数消耗

BASE_IMPROVE_RELATION_DIFFERENT_IDEOLOGY_GROUP_MAINTAIN_COST = 0.4, — Political power cost each update when boosting relations with nation of different ideology

BASE_IMPROVE_RELATION_DIFFERENT_IDEOLOGY_GROUP_MAINTAIN_COST = 0.4, —— 与意识形态不同的国家提升关系时每次更新的政治点数消耗

BASE_SEND_ATTACHE_COST = 100,					— Political power cost to send attache

BASE_SEND_ATTACHE_COST = 100, — 派遣军事顾问所需政治点数

BASE_SEND_ATTACHE_CP_COST = 50.0,				— Command Power sent attache usage cost

BASE_SEND_ATTACHE_CP_COST = 50.0, — 派遣武官消耗的指挥点数

BASE_GENERATE_WARGOAL_DAILY_PP = 0.2,	— Daily pp cost for generation of wargoals

BASE_GENERATE_WARGOAL_DAILY_PP = 0.2，——生成战争目标的每日政治点数消耗

WARGOAL_VERSUS_MAJOR_AT_WAR_REDUCTION = -0.75, 	— reduction of pp cost for wargoal vs major at war.

WARGOAL_VERSUS_MAJOR_AT_WAR_REDUCTION = -0.75, — 对战时主要国家的战争目标政治点数消耗削减量。

WARGOAL_WORLD_TENSION_REDUCTION = -0.5,			— Reduction of pp cost for wargoal at 100% world tension, scales linearly

WARGOAL_WORLD_TENSION_REDUCTION = -0.5, — 世界紧张度达到100%时战争目标的政治点数消耗减少量，按线性比例变化

WARGOAL_JUSTIFY_TENSION_FROM_PRODUCTION = 30.0,	— Base value scaled by production capacity of country compared to biggest country

WARGOAL_JUSTIFY_TENSION_FROM_PRODUCTION = 30.0, —— 基础值根据国家生产能力与最大国家的比较进行缩放

MIN_WARGOAL_JUSTIFY_COST = 2.0,					— It always takes atleast 10 days to justify a wargoal

MIN_WARGOAL_JUSTIFY_COST = 2.0, — 发动战争的正当理由至少需要10天来准备

WARGOAL_PER_JUSTIFY_AND_WAR_COST_FACTOR = 1.5,	— Cost factor per nation at war with or justifying against

WARGOAL_PER_JUSTIFY_AND_WAR_COST_FACTOR = 1.5, —— 针对每个处于战争或正对其实施宣战理由的国家的成本系数

WARGOAL_THREAT_MAX_TIME_RATIO = 1.0,			— Threat from justifying a wargoal slowly builds up, hitting 100% at this proportion of the way to completion

WARGOAL_THREAT_MAX_TIME_RATIO = 1.0, —— 宣战理由带来的威胁会随时间逐步累积，在完成进度达到此比例时达到100%

BASE_BOOST_PARTY_POPULARITY_DAILY_PP = 0.25, 	— Daily pp cost for boost party popularity

BASE_BOOST_PARTY_POPULARITY_DAILY_PP = 0.25, — 提升政党声望每日消耗的pp值

BASE_BOOST_PARTY_POPULARITY_DAILY_DRIFT = 0.1, 	— Daily amount of popularity that will be added by the activity.

BASE_BOOST_PARTY_POPULARITY_DAILY_DRIFT = 0.1, —— 该活动每日将增加的人气值。

BASE_STAGE_COUP_DAILY_PP = 0.5,					— Daily pp cost for staging a coup

BASE_STAGE_COUP_DAILY_PP = 0.5, —— 发动政变每日所需的政治点数

BASE_STAGE_COUP_TOTAL_COST = 200, 				— Equipment consume factor for stage coup.

BASE_STAGE_COUP_TOTAL_COST = 200, — 阶段政变的装备消耗系数。

NAP_EXPIRY_MONTHS = 48, — NAPs expire after this many months

NAP_EXPIRY_MONTHS = 48, — NAP（网络接入点）将在这么多个月后过期

NAP_UNBREAKABLE_MONTHS = 12, — NAPS cannot be broken for this many months

NAP_UNBREAKABLE_MONTHS = 12, — 不可中断的NAP月数为12个月

NAP_FORCE_BALANCE_RULE_MONTHS = 6, 		— The NAP border force balance rule changes with this interval

NAP_FORCE_BALANCE_RULE_MONTHS = 6, — NAP边境部队平衡规则按此间隔调整

NAP_BREAK_FORCE_BALANCE_1 = 2.0, 	— 2-1 brigades along the border required to break NAP

NAP_BREAK_FORCE_BALANCE_1 = 2.0, — 边境需部署2-1个旅以打破互不侵犯条约

NAP_BREAK_FORCE_BALANCE_2 = 1.0, 	— 1-1 brigades along the border required to break NAP

NAP_BREAK_FORCE_BALANCE_2 = 1.0, — 边境需部署1-1旅级部队以打破互不侵犯条约

NAP_BREAK_FORCE_BALANCE_3 = 0.5, 	— 1-2 brigades along the border required to break NAP

NAP_BREAK_FORCE_BALANCE_3 = 0.5, — 边境需部署1-2个旅才能打破互不侵犯协议

VERY_GOOD_OPINION = 50,							— Threshold for a country that has a very good opinion of you.

VERY_GOOD_OPINION = 50, —— 对你持有极高评价的国家所需达到的阈值。

VERY_BAD_OPINION = -50,							— Threshold for a country that has a very bad opinion of you.

VERY_BAD_OPINION = -50, — 某国对你持有极差评价的阈值。

DIPLOMACY_HOURS_BETWEEN_REQUESTS = 24,			— How long a country must wait before sending a new diplomatic request.

DIPLOMACY_HOURS_BETWEEN_REQUESTS = 24, —— 一个国家在发送新的外交请求前必须等待的时间。

TROOP_FEAR = 1, 								— Impact on troops on borders when deciding how willing a nation is to trade

TROOP_FEAR = 1, —— 国家在决定贸易意愿时，边境驻军对其的影响

FLEET_FEAR = 1,									— Impact on troops on borders when deciding how willing a nation is to trade

FLEET_FEAR = 1, — 在决定一个国家进行贸易的意愿时，对边境部队的影响

IC_TO_EQUIPMENT_COUP_RATIO = 0.1,				— Ratio for calculating cost of staging coup

IC_TO_EQUIPMENT_COUP_RATIO = 0.1, — 用于计算发动政变成本的比率

VOLUNTEERS_PER_TARGET_PROVINCE = 0.05,			— Each province owned by the target country contributes this amount of volunteers to the limit.

VOLUNTEERS_PER_TARGET_PROVINCE = 0.05, — 目标国家拥有的每个省份会按此数值为志愿军上限提供贡献量。

VOLUNTEERS_PER_COUNTRY_ARMY = 0.05,				— Each army unit owned by the source country contributes this amount of volunteers to the limit.

VOLUNTEERS_PER_COUNTRY_ARMY = 0.05, —— 源国家拥有的每支陆军部队将贡献此数量的志愿者至限额。

VOLUNTEERS_RETURN_EQUIPMENT = 0.95,				— Returning volunteers keep this much equipment

VOLUNTEERS_RETURN_EQUIPMENT = 0.95，——返回的志愿者保留这么多装备

VOLUNTEERS_TRANSFER_SPEED = 14,					— days to transfer a unit to another nation

志愿者转移速度 = 14, —— 将单位转移至另一国家所需天数

VOLUNTEERS_DIVISIONS_REQUIRED = 30,				— This many divisons are required for the country to be able to send volunteers.

志愿师团要求数 = 30, ——国家需达到此数量的师团方可派遣志愿军。

TENSION_STATE_VALUE = 2,						— Tension value gained by annexing one state

TENSION_STATE_VALUE = 2, — 吞并一个州所获得的紧张度值

TENSION_CIVIL_WAR_IMPACT = 0.2,					— civil war multiplier on tension.

TENSION_CIVIL_WAR_IMPACT = 0.2, — 内战对紧张度的乘数影响。

TENSION_NO_CB_WAR = 10,							— Amount of tension generated by a no-CB wargoal

TENSION_NO_CB_WAR = 10, — 无宣战理由（no-CB）战争目标产生的紧张度

TENSION_CB_WAR = 7,								— Amount of tension generated by a war with a CB

TENSION_CB_WAR = 7, — 因使用战争借口开战所产生的紧张度

TENSION_ANNEX_NO_CLAIM = 2,						— Amount of tension generated by annexing a state you don’t have claims on

TENSION_ANNEX_NO_CLAIM = 2, — 吞并无宣称领土时产生的紧张度

TENSION_ANNEX_CLAIM = 0.5,						— Amount of tension generated by annexing a state you DO have claims on

TENSION_ANNEX_CLAIM = 0.5, —— 吞并你拥有宣称权的国家时产生的紧张度

TENSION_ANNEX_CORE = 0,							— Amount of tension generated by annexing a state that is your core

TENSION_ANNEX_CORE = 0, — 吞并属于你核心领土的州所产生的紧张度

TENSION_PUPPET = 1.25,							— Amount of tension generated by puppeting (per state)

张力人偶 = 1.25, — 人偶操控产生的张力值（每个状态）

TENSION_FORCE_GOVERNMENT = 0.75, — Amount of tension generated by forcing government (per state)

TENSION_FORCE_GOVERNMENT = 0.75, —— 强制政府时产生的紧张度（每州）

TENSION_VOLUNTEER_FORCE_DIVISION = 0.2,			— Amount of tension generated for each sent division

TENSION_VOLUNTEER_FORCE_DIVISION = 0.2, —— 每派遣一个师所产生的紧张度

TENSION_DECAY_DAILY = 0.005,					— Each day tension decays this much for Threat sources which are no longer relevant. Replaces TENSION_DECAY as of 1.12.0

TENSION_DECAY_DAILY = 0.005，——对于不再相关的威胁来源，每日紧张度将衰减此数值。自1.12.0版本起取代TENSION_DECAY。

TENSION_SIZE_FACTOR = 1.0,						— All action tension values are multiplied by this value

TENSION_SIZE_FACTOR = 1.0, —— 所有动作张力值均乘以该系数

TENSION_TIME_SCALE_START_DATE = “1936.1.1.12”,	— Starting at this date, the tension values will be scaled down (will be equal to 1 before that)

TENSION_TIME_SCALE_START_DATE = "1936.1.1.12"， — 从这个日期开始，紧张度数值将按比例缩小（在此之前数值保持为1）

TENSION_TIME_SCALE_MONTHLY_FACTOR = -0.005,		— Timed tension scale will be modified by this amount starting with TENSION_TIME_SCALE_START_DATE

TENSION_TIME_SCALE_MONTHLY_FACTOR = -0.005, — 从TENSION_TIME_SCALE_START_DATE开始，时间张力尺度将按此数值调整

TENSION_TIME_SCALE_MIN = 0.25,					— Timed tension scale won’t decrease under this value

TENSION_TIME_SCALE_MIN = 0.25, —— 定时张力比例不会低于此值

TENSION_GUARANTEE = -5,

张力保证 = -5,

TENSION_FACTION_JOIN = 4,

紧张度_派系加入 = 4,

TENSION_JOIN_ATTACKER = 2,						— scale of the amount of tension added when country joins attacker side

TENSION_JOIN_ATTACKER = 2, — 国家加入进攻方时增加的紧张度的规模

TENSION_PEACE_FACTOR = 0.25,					— scale of the amount of tension (from war declaration) reduced when peace is completed.

紧张度和平系数 = 0.25，——用于衡量和平达成时（因宣战产生的）紧张度减少幅度的比例因子。

TENSION_LIBERATE = -1,							— Amount of tension generated by liberating a country.

TENSION_LIBERATE = -1, —— 解放国家所产生的紧张度数值。

TENSION_TAKE_ONE_CAPITAL_SHIP = 0.25,			— Amount of tension generated by 1 take navy peace action

TENSION_TAKE_ONE_CAPITAL_SHIP = 0.25, —— 每执行一次占领海军和平行动所产生的紧张度

TENSION_DEMILITARIZE_ZONE = 0.25,				— Amount of tension generated by stacking demilitarize zone on 1 state, multiplied with the state base threat

TENSION_DEMILITARIZE_ZONE = 0.25, —— 对单个州叠加非军事区所产生的紧张度数值，需乘以该州的基础威胁值

TENSION_WAR_REPARATION = 0.25,					— Amount of tension generated by stacking war reparation on 1 state, multiplied with the state base threat

TENSION_WAR_REPARATION = 0.25, — 对单一国家叠加战争赔款所产生的紧张度，乘以该国基础威胁值

TENSION_RESOURCE_RIGHTS = 0.25,					— Amount of tension generated by stacking resource rights on 1 state, multiplied with the state base threat

TENSION_RESOURCE_RIGHTS = 0.25, — 在单一国家叠加资源权利所产生的紧张度，乘以该国基础威胁值

TENSION_DISMANTLE_INDUSTRY = 0.25,				— Amount of tension generated by stacking dismantle military industry on 1 state, multiplied with the state base threat

TENSION_DISMANTLE_INDUSTRY = 0.25, — 对单一省份叠加拆除军事工业所产生的紧张度基础值，与省份基础威胁值相乘

TENSION_CAPITULATE = 0.40,						— Scale of the amount of tension created by a countries capitulation.

TENSION_CAPITULATE = 0.40, —— 国家投降所产生的紧张程度的比例。

GUARANTEE_COST = 25,							— Scale with the number of already guaranteed countries.

保证费用 = 25，——根据已担保国家的数量进行比例调整。

REVOKE_GUARANTEE_COST = 25,

撤销担保费用 = 25,

BASE_CONDITIONAL_PEACE_WARESCORE_RATIO = 0.5, 	— Warscore ratio needed for the losing side to able to surrender.

BASE_CONDITIONAL_PEACE_WARESCORE_RATIO = 0.5, —— 战败方能够投降所需的战争分数比例。

BASE_CONDITIONAL_PEACE_MONTHS = 3,				— War length must be before a surrender is possible.

BASE_CONDITIONAL_PEACE_MONTHS = 3, — 战争持续时间必须满足此条件才能接受投降。

JOINING_NAP_WAR_PENALTY = 0.2,					— War support penalty for breaking non-breakable NAP

加入不可撕毁的互不侵犯条约后违约的战争支持度惩罚 = 0.2,

BREAKING_GUARANTEE_PENALTY = 0.2,				— War support penalty for breaking guarantee

BREAKING_GUARANTEE_PENALTY = 0.2, — 违反保证导致的战争支持度惩罚



— WARNING ! if you modify the following values, you should update corresponding loc keys in games_rules_l_english.yml

— 警告！若修改以下数值，需同步更新游戏规则本地化文件 games_rules_l_english.yml 中的对应键值。

PEACE_SCORE_TRANSFERRED_TO_FACTION_LEADER = 0.1, 		— Part of the peace score transferred from the faction members to the faction leader (if game rule enabled)

PEACE_SCORE_TRANSFERRED_TO_FACTION_LEADER = 0.1, —— 从派系成员转移至派系领袖的和平分数部分（若游戏规则启用）

PEACE_SCORE_RESET_LOW_SCORE_THRESHOLD = 0.05,			— Winners with less than this ratio of war participation will give all their score to other players

PEACE_SCORE_RESET_LOW_SCORE_THRESHOLD = 0.05, —— 战争参与率低于此比例的胜者，其所有积分将分配给其他玩家

PEACE_SCORE_RESET_LOW_SCORE_MINIMUM_FOR_RECEIVER = 0.1, — Disable the previous, if no winner has at least this ratio of war participation

PEACE_SCORE_RESET_LOW_SCORE_MINIMUM_FOR_RECEIVER = 0.1，——若没有胜者的战争参与比例至少达到此比率，则禁用前一项设置



PEACE_SCORE_SCALE_FACTOR = 1.35, — Losers’ total value times this factor becomes the default total peace conference score that is distributed to the winners.

PEACE_SCORE_SCALE_FACTOR = 1.35，——战败方的总价值乘以该系数即成为默认分配给战胜方的和平会议总分数。



PEACE_SCORE_MINOR_BOOST_FRACTION = 0.05, — Low-scoring winners are boosted by receiving more of their score earlier. This value, multiplied by the total score distributed this turn, is the minimum score they will receive (up until their total allocated score).

PEACE_SCORE_MINOR_BOOST_FRACTION = 0.05, —— 低分获胜者通过提前获得更多分数得到提升。此数值乘以本回合分配的总分数，即为他们将获得的最低分数（直至达到其分配的总分数）。

— Example: If 2000 score is distributed to winners this turn and this value is set to 0.05, each winner will receive a minimum of 100 score (clamped by the max score they will receive over the cource of the conference).

— 示例：如果本轮分配2000积分给获胜者且此值设为0.05，每位获胜者将至少获得100积分（该数值会在会议期间根据其最高可获得积分上限进行截取）。



PEACE_SCORE_DISTRIBUTION = { 0.2, 0.2, 0.2, 0.2, 0.2 }, — How much of the total peace conference score you get during the first n turns.

和平分数分配 = { 0.2, 0.2, 0.2, 0.2, 0.2 }, —— 在前n回合中你能获得的和谈总分数比例。

— More explanation of the peace score distribution above:

——关于上述和平分数分布的更多说明：

— {1.0} would give you all the score on the first turn.

— {1.0} 会在第一回合就让你获得满分。

— {0.5, 0.5, 0.5} would give you 50 % of the total score on each of the first three turns (in this case resulting in receiving 150 % of the total score).

— {0.5, 0.5, 0.5} 将在前三轮分别给予你总分的50%（此情况下将获得总分150%的分数）。



PEACE_CONTEST_REFUND_FACTOR = { 1.0, 0.92, 0.84, 0.76 }, — How much of the spent peace conference score that gets refunded in a contest. First element applies for the first round of conflicts, second element for the second round of conflicts, etc. The final element is used for each consecutive turn, so setting that to e.g. 0.7 means you get 70 % of the spent score back for every turn thereafter.

和平竞赛退款系数 = { 1.0, 0.92, 0.84, 0.76 }, — 在竞赛中退还已消耗和平会议分数的比例。首个元素适用于第一轮冲突，第二个元素适用于第二轮冲突，依此类推。最后一个元素用于后续每轮，例如设为0.7意味着此后每轮可收回70%的消耗分数。



PEACE_PLAY_SOUND_ON_NEW_TURN = true, — Whether the ‘peace_conference_new_turn’ audio hook is called or not

PEACE_PLAY_SOUND_ON_NEW_TURN = true, —— 是否调用'peace_conference_new_turn'音频钩子

PEACE_PLAY_NEW_TURN_SOUND_ONLY_IF_NOT_ALREADY_PLAYING = true, — Whether the ‘peace_conference_new_turn’ audio hook should play only if not already playing (relevant if players spam-click the pass/submit button)

PEACE_PLAY_NEW_TURN_SOUND_ONLY_IF_NOT_ALREADY_PLAYING = true, — 是否仅在未播放时播放‘peace_conference_new_turn’音频钩子（适用于玩家连续快速点击通过/提交按钮的情况）



MAX_REMEMBERED_LEASED_IC = 1000,				— Maximum of leased equipment value that is remembered for opinion bonus

MAX_REMEMBERED_LEASED_IC = 1000, —— 为好感度加成而记忆的最大租赁装备值

MAX_OPINION_FOR_LEASED_IC = 30,					— Positive opinion when remembering the MAX_REMEMBERED_LEASED_IC equipment

MAX_OPINION_FOR_LEASED_IC = 30, —— 当回忆起MAX_REMEMBERED_LEASED_IC装备时的积极评价

MONTHLY_LEASED_IC_DECAY = 35,					— How much of leased equipment is being “forgot” each month

MONTHLY_LEASED_IC_DECAY = 35, — 每月有多少租赁设备被“遗忘”

OPINION_PER_VOLUNTEER = 3,						— Opinion bonus per one sent volunteer division

每派遣一个志愿师级单位获得的意见加成=3，

MAX_OPINION_FROM_VOLUNTEERS = 30,				— Opinion bonus per one sent volunteer division

MAX_OPINION_FROM_VOLUNTEERS = 30, —— 每派遣一支志愿师获得的民意加成

OPINION_FOR_DEMO_FROM_WT_GENERATION = -2.0,		— How much less do democracies like us if we generate world tension

OPINION_FOR_DEMO_FROM_WT_GENERATION = -2.0, — 如果我们制造世界紧张局势，民主国家对我们的好感度会降低多少

NOT_READY_FOR_WAR_BASE = -50,					— AI should be unwilling to enter accept a call to war if not ready for war against the relevant enemies.

未做好战争准备的基地 = -50, —— 若AI未准备好对相关敌人开战，应不愿接受参战请求。

FRONT_IS_DANGEROUS = -100,						— AI should be unwilling to enter accept a call to war if front is too dangerous.

前线过于危险 = -100，——若前线过于危险，AI应不愿接受参战号召。

NOT_READY_FOR_WAR_VAL_PER_DAY_SINCE_CALL = 1,	— Value modifying the not ready base over time.

尚未做好战争准备的每日价值自调用起 = 1, —— 随时间调整未就绪基础值的参数。



PEACE_ACTION_MAX_COST = 9999,					— Max value for a peace action cost (after all modifiers)

PEACE_ACTION_MAX_COST = 9999, —— 和平行动成本的最大值（所有修正后）



RESOURCE_SENT_AUTONOMY_DAILY_BASE = 0.0,		— If puppet provides resources to its master they increasy their autonomy by at least this amount

RESOURCE_SENT_AUTONOMY_DAILY_BASE = 0.0, — 如果傀儡国向宗主国输送资源，其自治度将至少增加此数值

RESOURCE_SENT_AUTONOMY_DAILY_FACTOR = 0.005,	— If puppet provides resources to its master they increasy their autonomy by the resources factored by this

RESOURCE_SENT_AUTONOMY_DAILY_FACTOR = 0.005, —— 若傀儡国向宗主国输送资源，其自治度将按此系数乘以资源量提升

WAR_SCORE_AUTONOMY_BASE = 0.0,					— Value added if any war score is contributed by puppet

WAR_SCORE_AUTONOMY_BASE = 0.0, —— 若傀儡国贡献任何战争分数时添加的值

WAR_SCORE_AUTONOMY_FACTOR = 0.6,				— If puppet generates war score it get a boost to independence

WAR_SCORE_AUTONOMY_FACTOR = 0.6, —— 若傀儡国生成战争分数，其独立倾向将获得加成

LL_TO_OVERLORD_AUTONOMY_DAILY_BASE = 0.0,		— If puppet lend leases equipment to overlord of at least same tech level as they have, they gain autonomy

LL_TO_OVERLORD_AUTONOMY_DAILY_BASE = 0.0, — 若附庸国向宗主国租借装备的技术水平不低于自身所持，则获得自治度

LL_TO_OVERLORD_AUTONOMY_DAILY_FACTOR = 0.05,	— If puppet lend leases equipment to overlord of at least same tech level as they have, they gain autonomy

LL_TO_OVERLORD_AUTONOMY_DAILY_FACTOR = 0.05, —— 如果附庸国向宗主国租借的装备技术等级不低于自身现有水平，则其每日自治度将获得提升

LL_TO_PUPPET_AUTONOMY_DAILY_BASE = 0.0,			— If overlord lend leases equipment to puppet of higher tech level as they have, puppet losses autonomy

LL_TO_PUPPET_AUTONOMY_DAILY_BASE = 0.0, — 若宗主国向科技水平高于自身的傀儡国租借装备，傀儡国将失去自治权

LL_TO_PUPPET_AUTONOMY_DAILY_FACTOR = -0.01,		— If overlord lend leases equipment to puppet of higher tech level as they have, puppet losses autonomy

LL_TO_PUPPET_AUTONOMY_DAILY_FACTOR = -0.01, —— 若宗主国向科技水平高于自身的附属国租借装备，附属国将失去自治度

AUTONOMY_FREEDOM_FROM_CAPITULATE = 0.5, — if overlord capitulate you get this

AUTONOMY_FREEDOM_FROM_CAPITULATE = 0.5, —— 若宗主国投降你将获得此项

ATTACHE_TO_SUBJECT_EFFECT = -0.05,				— If overlord sent attaches to the subject it losses autonomy

ATTACHE_TO_SUBJECT_EFFECT = -0.05, — 若宗主国向附属国派遣专员，其自治度将降低

ATTACHE_TO_OVERLORD_EFFECT = 0.05,				— If subject sent attaches to the overlord it gains autonomy

ATTACHE_TO_OVERLORD_EFFECT = 0.05, —— 若附属单位附着于主宰者，则获得自主性



AUTONOMY_LEVEL_CHANGE_PP_COST_BASE = 50.0,		— Base cost of changing level of autonomy

AUTONOMY_LEVEL_CHANGE_PP_COST_BASE = 50.0, — 变更自治等级的基础成本

AUTONOMY_LEVEL_CHANGE_PP_ANNEX = 300,			— Annexation cost

AUTONOMY_LEVEL_CHANGE_PP_ANNEX = 300, — 吞并成本

AUTONOMY_LEVEL_CHANGE_PP_FREE = 300,			— Break free cost

AUTONOMY_LEVEL_CHANGE_PP_FREE = 300, — 挣脱消耗

MAX_SCORE_DIFF_TO_CHANGE_AUTONOMY = 10,			— The max diff between current freedom score and the cap for next or previous level allowed for changing

MAX_SCORE_DIFF_TO_CHANGE_AUTONOMY = 10, —— 当前自由度分数与允许升降级上限之间的最大差值

MASTER_BUILD_AUTONOMY_FACTOR = -0.7, — scales autonomy gain from construction by this

MASTER_BUILD_AUTONOMY_FACTOR = -0.7, — 按此比例缩放由建设获得的自主度增益

VICTORY_POINT_WORTH_FACTOR = 10,				— multiplier when calcualting province worth (surrender)

胜利点价值系数 = 10, ——计算省份价值（投降）时的乘数

VICTORY_POINT_WORTH_FACTOR_WARSCORE = 0.2,				— multiplier for each victory points when calculating province worth for warscore

VICTORY_POINT_WORTH_FACTOR_WARSCORE = 0.2, ——计算战争分数时各省份价值中每个胜利点数的乘数

PROVINCE_WORTH_FROM_STATE_VALUE_FACTOR_WARSCORE = 0.2, 	— multiplier for the average value a province received from state for warscore

PROVINCE_WORTH_FROM_STATE_VALUE_FACTOR_WARSCORE = 0.2, — 省份从国家获取的平均价值对战争分数影响的乘数

CAPITAL_CAPITULATE_BONUS_SCORE = 150,			— extra bonus when deciding who to capitulate to (applied to capital holder)

CAPITAL_CAPITULATE_BONUS_SCORE = 150, - 决定向谁投降时的额外奖励（适用于首都持有者）

CAPITAL_CAPITULATE_BONUS_SCORE_MUL = 1.5,		— extra bonus multiplier when deciding who to capitulate to (applied to capital holder)

CAPITAL_CAPITULATE_BONUS_SCORE_MUL = 1.5, —— 决定向谁投降时的额外奖励乘数（适用于首都持有者）

IDEOLOGY_JOIN_FACTION_MIN_LEVEL = 0.3,			— ideology limit required to join faction

IDEOLOGY_JOIN_FACTION_MIN_LEVEL = 0.3, — 加入派系所需意识形态最低限度

JOIN_FACTION_LIMIT_CHANGE_AT_WAR = 0.5,			— if in defensive war this or your modifier is counted as limit to join factions (so if you have 80% join limit this now means you can join at 50%)

加入派系限制战争期间变更 = 0.5, —— 若处于防御战时，此值或你的修正值将作为加入派系的限制条件（例如，若你原有80%的加入限制，此时意味着你可以在50%时加入）

LICENSE_ACCEPTANCE_OPINION_FACTOR = 0.4,		— Opinion modifier for acceptance of license production requests.

LICENSE_ACCEPTANCE_OPINION_FACTOR = 0.4, —— 用于调整接受许可证生产请求的意见影响系数。

LICENSE_ACCEPTANCE_PUPPET_BASE = 15,			— Acceptance modifier for puppets requesting production licenses.

LICENSE_ACCEPTANCE_PUPPET_BASE = 15, — 傀儡政权申请生产许可证时的接受度修正值。

LICENSE_ACCEPTANCE_TECH_DIFFERENCE = 2, 		— Acceptance modifier for each year of technology difference.

LICENSE_ACCEPTANCE_TECH_DIFFERENCE = 2, —— 技术差异每增加一年对应的接受度调整值。

LICENSE_ACCEPTANCE_TECH_DIFFERENCE_BASE = 10, — Acceptance base for tech difference

LICENSE_ACCEPTANCE_TECH_DIFFERENCE_BASE = 10, — 技术差异接受基础

LICENSE_ACCEPTANCE_SAME_FACTION = 20,			— Acceptance modifier for being in the same faction

LICENSE_ACCEPTANCE_SAME_FACTION = 20, —— 同一阵营时的接受度修正值



WARGOAL_COST_LEND_LEASE = -0.25, — cost modifier to wargoaljustification for LL

WARGOAL_COST_LEND_LEASE = -0.25, —— 租借法案战争目标的合理性成本修正

WARGOAL_COST_DOCKING_RIGHTS = -0.2, — cost modifier to wargoaljustification for dockign rights

WARGOAL_COST_DOCKING_RIGHTS = -0.2, — 停靠权战争理由的成本修正系数

WARGOAL_COST_VOLUNTEERS = -0.5, — cost modifier to wargoaljustification for volunteers

WARGOAL_COST_VOLUNTEERS = -0.5, — 志愿军参战理由的成本修正值



ASSUME_FACTION_LEADERSHIP_PP_COST = 200,				— Political power cost to assume faction leadership

ASSUME_FACTION_LEADERSHIP_PP_COST = 200, — 接管派系领导所需的政治点数消耗

ASSUME_FACTION_LEADERSHIP_MIN_MANPOWER_RATIO = 2,		— The minimum ratio of manpower that a country must have compared to the current leader in order to assume leadership.

ASSUME_FACTION_LEADERSHIP_MIN_MANPOWER_RATIO = 2, — 一个国家要接替领导权，其人力必须达到当前领导国的最低比例。

ASSUME_FACTION_LEADERSHIP_MIN_FACTORY_RATIO = 1.5,		— The minimum ratio of factories that a country must have compared to the current leader in order to assume leadership.

ASSUME_FACTION_LEADERSHIP_MIN_FACTORY_RATIO = 1.5, —— 一个国家为取得领导权，其工厂数量必须达到当前领导国的最低比例。

ASSUME_FACTION_LEADERSHIP_COOLDOWN_DAYS = 180,			— Number of days after formation of faction or change in leadership before another country is allowed to assume leadership.

ASSUME_FACTION_LEADERSHIP_COOLDOWN_DAYS = 180，——联盟成立或领导权变更后，需经过的天数才允许另一国家接任领导权。

ASSUME_FACTION_SPYMASTER_COOLDOWN_DAYS = 180,			— Number of days after change of Spy Master before another country is allowed to become Spy Master.

ASSUME_FACTION_SPYMASTER_COOLDOWN_DAYS = 180, —— 更换间谍大师后，另一国家被允许成为间谍大师前需等待的天数。

FACTION_LEADERSHIP_CHANGE_ALERT_THRESHOLD = 0.8,		— Threshold for showing an alert when a faction member is close to being able to assume leadership of the faction that a player currently leads.

FACTION_LEADERSHIP_CHANGE_ALERT_THRESHOLD = 0.8，——当派系成员接近能够接管玩家当前领导的派系领导权时，显示警告的阈值。

FACTION_LEADERSHIP_CHANGE_NOT_SUBJECT_WEIGHT = 2,		— Importance of subject status when determining how close a faction member is to being able to assume leadership.

派系领导变更不考虑主体权重 = 2, —— 在判断派系成员接任领导地位的接近程度时，主体状态的重要性。

FACTION_LEADERSHIP_CHANGE_NOT_CAPITULATED_WEIGHT = 2,	— Importance of capitulation status when determining how close a faction member is to being able to assume leadership.

派系领导权变更_未投降_权重 = 2, —— 在判断派系成员接任领导权可能性时，投降状态的重要性系数。

FACTION_LEADERSHIP_CHANGE_IN_ALL_WARS_WEIGHT = 1,		— Importance not being in all faction leader wars when determining how close a faction member is to being able to assume leadership.

FACTION_LEADERSHIP_CHANGE_IN_ALL_WARS_WEIGHT = 1, —— 在判断某派系成员距离接任领导权有多接近时，不考虑该成员是否参与所有派系领导战争的重要性权重。

FACTION_LEADERSHIP_CHANGE_COOLDOWN_WEIGHT = 1,			— Importance of leadership change cooldown when determining how close a faction member is to being able to assume leadership.

FACTION_LEADERSHIP_CHANGE_COOLDOWN_WEIGHT = 1, — 用于衡量派系成员距离能够接任领导职位时，领导层变更冷却时间的重要性。

FACTION_LEADERSHIP_CHANGE_MANPOWER_WEIGHT = 2,			— Importance of manpower in field when determining how close a faction member is to being able to assume leadership.

派系领导权变更人力权重 = 2, ——在判断派系成员距离接任领导权的接近程度时，人力在战场上的重要性。

FACTION_LEADERSHIP_CHANGE_FACTORY_WEIGHT = 2,			— Importance of factory count when determining how close a faction member is to being able to assume leadership.

派系领导权变更工厂权重 = 2, ——在判断派系成员距离接任领导权还有多远时，工厂数量的重要性。



EMBARGO_COST = 100,										— One-time cost

EMBARGO_COST = 100, — 一次性成本

REVOKE_EMBARGO_COST = 0,								— Cost to remove an existing embargo

REVOKE_EMBARGO_COST = 0, — 解除现有禁运所需的成本

EMBARGO_THREAT_THRESHOLD = 30,						— Target-generated threat threshold to allow embargo (affected by modifiers)

EMBARGO_THREAT_THRESHOLD = 30, —— 允许实施禁运的目标生成威胁阈值（受修正值影响）



EMBARGO_SAME_IDEOLOGY_AI_WEIGHT = -20,				— AI weight for same ideology

EMBARGO_SAME_IDEOLOGY_AI_WEIGHT = -20, —— 相同意识形态的AI权重

EMBARGO_DIFFERENT_IDEOLOGY_AI_WEIGHT = 15,			— AI weight for different ideology

EMBARGO_DIFFERENT_IDEOLOGY_AI_WEIGHT = 15, —— 针对不同意识形态的AI权重

EMBARGO_DIFFERENT_IDEOLOGY_AT_OFFENSIVE_WAR_AI_WEIGHT = 10,	—AI weight for different ideology and in offensive war (additive with above)

EMBARGO_DIFFERENT_IDEOLOGY_AT_OFFENSIVE_WAR_AI_WEIGHT = 10, ——针对不同意识形态且在进攻战争中的AI权重（与上述值累加）

EMBARGO_RECIPIENT_IS_MAJOR_AI_WEIGHT = 10,			— Ai weight for recipient being major

EMBARGO_RECIPIENT_IS_MAJOR_AI_WEIGHT = 10, —— 接收方为主要AI时的权重值

EMBARGO_NEIGHBOUR_AI_WEIGHT = -10,					—AI weight for embargoing neighbors (neighbors are big and scary, we should consider not doing it)

EMBARGO_NEIGHBOUR_AI_WEIGHT = -10, ——对邻国实施贸易禁运的AI权重（邻国强大且令人畏惧，我们应慎重考虑是否执行）



EQUIPMENT_PURCHASE_ACCEPTANCE_OPINION = 1.1, — Acceptance factor for opinion

EQUIPMENT_PURCHASE_ACCEPTANCE_OPINION = 1.1, — 意见接受系数

EQUIPMENT_PURCHASE_ACCEPTANCE_SAME_IDEOLOGY = 15, — Acceptance value added if same ideology

EQUIPMENT_PURCHASE_ACCEPTANCE_SAME_IDEOLOGY = 15, — 意识形态相同时增加的接受度值

EQUIPMENT_PURCHASE_ACCEPTANCE_SCRIPTED_IDEOLOGY_ACCEPTANCE = 1.0, — Acceptance factor for scripted ideology acceptance modifier

EQUIPMENT_PURCHASE_ACCEPTANCE_SCRIPTED_IDEOLOGY_ACCEPTANCE = 1.0, — 脚本化意识形态接受度修正的接受系数

EQUIPMENT_PURCHASE_ACCEPTANCE_TRADE_INFLUENCE = 0.70, — Acceptance factor for trade influence (adjusted from base value)

EQUIPMENT_PURCHASE_ACCEPTANCE_TRADE_INFLUENCE = 0.70, — 贸易影响力的接受系数（从基础值调整）

EQUIPMENT_PURCHASE_ACCEPTANCE_COMPETING_FACTIONS = -30, — Acceptance value added if both countries are in factions, and factions are different

EQUIPMENT_PURCHASE_ACCEPTANCE_COMPETING_FACTIONS = -30, — 若两国处于不同阵营时，增加的接受度数值

EQUIPMENT_PURCHASE_ACCEPTANCE_EMBARGO = -200, — Acceptance value added if either side has embargoed the other

EQUIPMENT_PURCHASE_ACCEPTANCE_EMBARGO = -200, — 当任一方对另一方实施禁运时增加的接受度数值

EQUIPMENT_PURCHASE_ACCEPTANCE_NON_AGGRESSION_PACT = 25, — Acceptance value added if there is a non-aggression pact between the countries

EQUIPMENT_PURCHASE_ACCEPTANCE_NON_AGGRESSION_PACT = 25, —— 若两国间存在互不侵犯条约则增加的接受度数值



MARKET_ACCESS_ACCEPTANCE_OPINION = 1.1, — Acceptance factor for opinion

市场准入接受度意见 = 1.1, — 意见接受因子

MARKET_ACCESS_ACCEPTANCE_SAME_IDEOLOGY = 15, — Acceptance value added if same ideology

市场准入接受度相同意识形态加成 = 15,

MARKET_ACCESS_ACCEPTANCE_SCRIPTED_IDEOLOGY_ACCEPTANCE = 1.0, — Acceptance factor for scripted ideology acceptance modifier

MARKET_ACCESS_ACCEPTANCE_SCRIPTED_IDEOLOGY_ACCEPTANCE = 1.0, — 脚本化意识形态接受度修正的接受因子

MARKET_ACCESS_ACCEPTANCE_TRADE_INFLUENCE = 0.70, — Acceptance factor for trade influence (adjusted from base value)

MARKET_ACCESS_ACCEPTANCE_TRADE_INFLUENCE = 0.70, —— 贸易影响力的接受系数（由基础值调整）

MARKET_ACCESS_ACCEPTANCE_COMPETING_FACTIONS = -30, — Acceptance value added if both countries are in factions, and factions are different

MARKET_ACCESS_ACCEPTANCE_COMPETING_FACTIONS = -30, — 两国处于不同阵营时增加的接受度数值

MARKET_ACCESS_ACCEPTANCE_EMBARGO = -200, — Acceptance value added if either side has embargoed the other

市场准入接受禁运 = -200, —— 若任一方对另一方实施禁运，则接受附加值增加

MARKET_ACCESS_ACCEPTANCE_NO_TRADE_ROUTE = -100, — Acceptance value added if there is no valid trade route between the countries

MARKET_ACCESS_ACCEPTANCE_NO_TRADE_ROUTE = -100, — 如果两国间无有效贸易路线时增加的接受度数值

MARKET_ACCESS_ACCEPTANCE_NON_AGGRESSION_PACT = 25, — Acceptance value added if there is a non-aggression pact between the countries

MARKET_ACCESS_ACCEPTANCE_NON_AGGRESSION_PACT = 25, —— 若两国间存在互不侵犯条约时增加的接受度数值

},



NCountry = {

国家 = {

EVENT_PROCESS_OFFSET = 20,						— Events are checked every X day per country or state (1 is ideal, but CPU heavy)

EVENT_PROCESS_OFFSET = 20, — 事件检查间隔，按国家或州每X天检查一次（1为理想值，但CPU负载较高）

BASE_RESEARCH_SLOTS = 2,						— Base number of research slots per country.

BASE_RESEARCH_SLOTS = 2, — 每个国家的基础研究槽位数。

POPULATION_YEARLY_GROWTH_BASE = 0.015,			— basic population growth per year, used for monthly manpower gain

POPULATION_YEARLY_GROWTH_BASE = 0.015, — 基础年人口增长率，用于计算每月人力增长

RESISTANCE_STRENGTH_FROM_VP = 0.001,			— How much strength ticking speed gives each VP score.

RESISTANCE_STRENGTH_FROM_VP = 0.001, — 每点VP值提供的抗性强度增长速度。

RESISTANCE_STRENGTH_FROM_NEIGHBORS = 0.5, 		— Multiplies how much resistance can spread from one state to its neighbors, a state will spread whatever is highest of its victorypoints resistance increase or half of any of its neighbors spread, multiplied by this

RESISTANCE_STRENGTH_FROM_NEIGHBORS = 0.5, —— 此数值用于乘以从一个州向其相邻州传播的抵抗强度。一个州会传播其胜利点带来的抵抗增长值或其任一相邻州传播值的一半（取两者中的较高者），再乘以该系数。

RESISTANCE_DECAY_WHEN_NO_GROWTH = 0.005,		— Resistance will fall by this much each day if there is nothing increasing it ( no VPs and no spread from neighbors )

无增长时抗性衰减 = 0.005, — 若无任何增长因素（既无VP也无邻域传播），抗性每日将以此数值递减

REINFORCEMENT_DIVISION_PRIORITY_COUNT = 3, 		— How many priority stages we have in division template? 0)Reserves, 1)Normal, 2)Elite.

REINFORCEMENT_DIVISION_PRIORITY_COUNT = 3, —— 师部模板中有多少个优先级阶段？0)预备队，1)普通，2)精英。

REINFORCEMENT_DIVISION_PRIORITY_DEFAULT = 1, 	— Each template by default is 1)Normal

REINFORCEMENT_DIVISION_PRIORITY_DEFAULT = 1, — 每个模板默认为1级（普通）

REINFORCEMENT_THEATER_GROUP_PRIORITY_DEFAULT = 1,— Each theater group by default is 1)Normal

REINFORCEMENT_THEATER_GROUP_PRIORITY_DEFAULT = 1，— 每个战区群组的默认优先级为1)常规

REINFORCEMENT_THEATRE_PRIORITY_COUNT = 3,		— Same as with divisions…

REINFORCEMENT_THEATRE_PRIORITY_COUNT = 3, —— 与师级单位同理…

REINFORCEMENT_THEATRE_PRIORITY_DEFAULT = 1,

强化剧场优先级默认 = 1,

REINFORCEMENT_AIRBASE_PRIORITY_COUNT = 3,

REINFORCEMENT_AIRBASE_PRIORITY_COUNT = 3,

REINFORCEMENT_AIRBASE_PRIORITY_DEFAULT = 1,

REINFORCEMENT_AIRBASE_PRIORITY_DEFAULT = 1,

REINFORCEMENT_DELIVERY_SPEED_MIN = 0.6,			— The distance from the supply region to capital should affect the speed only a little bit. Main factor for penalty is overcrowded areas, and not the route length.

REINFORCEMENT_DELIVERY_SPEED_MIN = 0.6, ——补给区到首都的距离对速度的影响应较为有限。惩罚的主要因素是区域过度拥挤，而非路线长度。

REINFORCEMENT_EQUIPMENT_DELIVERY_SPEED = 0.3,	— Modifier for army equipment reinforcement speed

REINFORCEMENT_EQUIPMENT_DELIVERY_SPEED = 0.3, — 军队装备增援速度的修正系数

REINFORCEMENT_MANPOWER_DELIVERY_SPEED = 10.0,	— Modifier for army manpower reinforcement delivery speed (travel time)

REINFORCEMENT_MANPOWER_DELIVERY_SPEED = 10.0, — 军队人力补充输送速度（行军时间）修正系数

REINFORCEMENT_MANPOWER_CHUNK = 0.1,				— Chunk size of manpower reinforcement delivery, in % of total manpower needed by the template.

REINFORCEMENT_MANPOWER_CHUNK = 0.1, —— 人力增援交付的分块大小，以模板所需总人力的百分比表示。

EQUIPMENT_UPGRADE_CHUNK_MAX_SIZE = 10,			— Maximum chunk size of equipment upgrade distribution per update.

EQUIPMENT_UPGRADE_CHUNK_MAX_SIZE = 10, —— 每次更新时装备升级分发的最大块大小。

COUNTRY_SCORE_MULTIPLIER = 1.0,					— Weight of the country score.

COUNTRY_SCORE_MULTIPLIER = 1.0, — 国家得分的权重。

ARMY_SCORE_MULTIPLIER = 0.15,					— Based on number of armies.

ARMY_SCORE_MULTIPLIER = 0.15, —— 基于军队数量。

NAVY_SCORE_MULTIPLIER = 1.0,					— Based on number of navies.

海军分数倍率 = 1.0, —— 基于海军数量。

AIR_SCORE_MULTIPLIER = 0.1,						— Based on number of planes (which is typically a lot).

AIR_SCORE_MULTIPLIER = 0.1, ——基于飞机数量（通常数量庞大）。

INDUSTRY_SCORE_MULTIPLIER = 1.0,				— Based on number of factories.

INDUSTRY_SCORE_MULTIPLIER = 1.0, — 基于工厂数量。

PROVINCE_SCORE_MULTIPLIER = 0.1,				— Based on number of controlled provinces.

PROVINCE_SCORE_MULTIPLICADOR = 0.1, — 基于控制的省份数量。

NUCLEAR_BOMB_DROP_WAR_SUPPORT_EFFECT_MAX_INFRA = 0.2,		— Reduce enemy national war support on nuking a province, the value scales with infrastructure up to this number

核弹轰炸省份时降低敌方国家战争支持度的效果上限与基础设施相关，最高可达0.2

NUCLEAR_BOMB_DROP_WAR_SUPPORT_EFFECT_MAX_VP = 3,			— War support will be scaled down if there’s less VP than this in the province

NUCLEAR_BOMB_DROP_WAR_SUPPORT_EFFECT_MAX_VP = 3, — 若该省份的胜利点数低于此值，战争支持度将按比例降低

THERMONUCLEAR_BOMB_DROP_WAR_SUPPORT_EFFECT_MAX_INFRA = 0.2,	— Reduce enemy national war support on nuking a province, the value scales with infrastructure up to this number

THERMONUCLEAR_BOMB_DROP_WAR_SUPPORT_EFFECT_MAX_INFRA = 0.2, —— 对某省份投下核弹时降低敌方国家战争支持度，该数值随基础设施水平增长，最高不超过此值

THERMONUCLEAR_BOMB_DROP_WAR_SUPPORT_EFFECT_MAX_VP = 3,		— War support will be scaled down if there’s less VP than this in the province

热核炸弹投放战争支持效果最大胜利点数 = 3, — 若省份胜利点数低于此值，战争支持度将按比例降低

WEEKLY_STABILITY_GAIN = 0.0,

每周稳定性增益 = 0.0,

WEEKLY_WAR_SUPPORT_GAIN = 0.0,

每周战争支持度增益 = 0.0,

SUPPLY_CONVOY_FACTOR = 0.25,					— How many convoys each supply needs

SUPPLY_CONVOY_FACTOR = 0.25, — 每份补给所需的护航船队数量

CONVOY_RANGE_FACTOR = 1, — How much range affects convoy need for resource trades and supply

CONVOY_RANGE_FACTOR = 1, — 范围因素对资源贸易和补给所需护航船队的影响程度

CONVOY_LENDLEASE_RANGE_FACTOR = 1,				— How much range affects convoy need for lend lease

CONVOY_LENDLEASE_RANGE_FACTOR = 1, —— 运输距离如何影响租借法案所需的护航船队数量

CONVOY_INTERNATIONAL_MARKET_RANGE_FACTOR = 1,	— How much range affects convoy need for international market

CONVOY_INTERNATIONAL_MARKET_RANGE_FACTOR = 1, —— 距离对国际市场需求运输船队的影响系数

LOCAL_MANPOWER_ACCESSIBLE_NON_CORE_FACTOR = 0.02, — accessible recruitable factor base

LOCAL_MANPOWER_ACCESSIBLE_NON_CORE_FACTOR = 0.02, — 可征召非核心人口基数修正系数

MAX_NON_CORE_MANPOWER_FACTOR = 1.0,				— max clamp for recruitable local non core manpower factor for states

MAX_NON_CORE_MANPOWER_FACTOR = 1.0, ——各州可征召的非核心人口比例因子的上限阈值

DEFAULT_STABILITY = 0.5,						— Default stability if not scripted otherwise.

DEFAULT_STABILITY = 0.5, —— 默认稳定性值，如无脚本另行设定则采用此值。

DEFAULT_WAR_SUPPORT = 0.5,						— Default war support if not scripted otherwise.

DEFAULT_WAR_SUPPORT = 0.5, —— 默认战争支持度，若未另行编写脚本设定。

BASE_STABILITY_WAR_FACTOR = -0.2,				— Default stability war factor

BASE_STABILITY_WAR_FACTOR = -0.2, — 默认战争稳定性系数

BASE_STABILITY_PARTY_POPULARITY_FACTOR = 0.15,	— Default stability rulling party popularity factor

BASE_STABILITY_PARTY_POPULARITY_FACTOR = 0.15, —— 默认稳定执政党支持率系数

MIN_COUP_STABILITY_FACTOR = 0.0,				— Min value of coup factor in stability

MIN_COUP_STABILITY_FACTOR = 0.0, — 稳定政变系数的最小值

MAX_COUP_STABILITY_FACTOR = 2.0,				— Max value of coup factor in stability

MAX_COUP_STABILITY_FACTOR = 2.0, — 稳定政变因素的最大值

MIN_COUP_SUCCESS_STABILITY = 0.8,				— Max stability when coup will happen

MIN_COUP_SUCCESS_STABILITY = 0.8, —— 政变发生时的最大稳定值

WAR_SUPPORT_OFFNSIVE_WAR = -0.2,				— Impact of being in offensive war

WAR_SUPPORT_OFFNSIVE_WAR = -0.2, — 处于进攻性战争时的影响

WAR_SUPPORT_DEFENSIVE_WAR = 0.2,				— Impact of being in defensive war

WAR_SUPPORT_DEFENSIVE_WAR = 0.2, — 处于防御战争时的影响

WAR_SUPPORT_TENSION_IMPACT = 0.4,				— Total impact of world tension

WAR_SUPPORT_TENSION_IMPACT = 0.4, —— 世界紧张度的总影响

MIN_STABILITY = 0.0,

最小稳定性 = 0.0,

MAX_STABILITY = 1.0,

最大稳定性 = 1.0，

MIN_WAR_SUPPORT = 0.0,

最低战争支持度 = 0.0,

MAX_WAR_SUPPORT = 1.0,

MAX_WAR_SUPPORT = 1.0,

FRONT_PROVINCE_SCORE = 20, 					— Max province score of a front. Used for the hostile troop alert

FRONT_PROVINCE_SCORE = 20, — 前线的最大省份得分。用于敌对部队警报

MAJOR_IC_RATIO = 3, — difference in total factories needed to be considered major with respect to other nation

MAJOR_IC_RATIO = 3, ——相对于其他国家，被视为主要工业力量所需工厂总数的差异倍数

MAJOR_MIN_FACTORIES = 35,						— need at least these many factories to become a major

MAJOR_MIN_FACTORIES = 35, —— 需要至少这么多工厂才能成为主要工业国

MAX_INTELLIGENCE_DIFFERENCE = 10.0,				— (Old Intel) Max difference in intelligence levels between countries

MAX_INTELLIGENCE_DIFFERENCE = 10.0, — (旧版智能) 国家间智能水平的最大差异

INTEL_FROM_ALLIANCE_FACTOR = 0.3,				— Multiplied to the difference between a country intel and the maximum value in the alliance to compute the amount of intel that flows from the alliance to that country. 0 means no alliance contribution, 1 means a country intel’s is the same as the max in the alliance.

INTEL_FROM_ALLIANCE_FACTOR = 0.3, — 该系数乘以国家情报与联盟内最高值之间的差值，用于计算从联盟流向该国家的情报量。0表示联盟无贡献，1表示国家情报与联盟内最高值相同。

MAX_INTELLIGENCE_DATA_DEVIATION = 1.0, — (Old Intel) Max deviation in estimating default espionage values ( 0.0 - 1.0 )

MAX_INTELLIGENCE_DATA_DEVIATION = 1.0， — （旧版情报）估算默认间谍数值时的最大偏差范围（0.0 - 1.0）

MAX_INTELLIGENCE_MILITARY_DATA_DEVIATION = 1.0, — (Old Intel) Max deviation in estimating enemy military units amount ( 0.0 - 1.0 )

MAX_INTELLIGENCE_MILITARY_DATA_DEVIATION = 1.0, — (旧情报) 估计敌方军事单位数量的最大偏差范围 (0.0 - 1.0)

MAX_INTELLIGENCE_NAVY_DATA_DEVIATION = 0.3,		— (Old Intel) Max deviation in estimating enemy ships amount ( 0.0 - 1.0 )

MAX_INTELLIGENCE_NAVY_DATA_DEVIATION = 0.3, — （旧情报）估计敌方舰船数量的最大偏差（0.0 - 1.0）

MAX_INTELLIGENCE_AIR_DATA_DEVIATION = 1.0,		— (Old Intel) Max deviation in estimating enemy air planes amount ( 0.0 - 1.0 )

MAX_INTELLIGENCE_AIR_DATA_DEVIATION = 1.0, — (旧版情报) 估算敌方飞机数量的最大偏差范围 (0.0 - 1.0)

MAX_INTELLIGENCE_CONVOY_DATA_DEVIATION = 0.3,	— (Old Intel) Max deviation in estimating enemy convoys amount ( 0.0 - 1.0 )

MAX_INTELLIGENCE_CONVOY_DATA_DEVIATION = 0.3, — (旧情报) 敌方护航队数量估算的最大偏差 (0.0 - 1.0)

MAX_INTELLIGENCE_MANPOWER_DATA_DEVIATION = 0.4,	— (Old Intel) Max deviation in estimating enemy total manpower amount ( 0.0 - 1.0 )

MAX_INTELLIGENCE_MANPOWER_DATA_DEVIATION = 0.4, — （旧版情报系统）估算敌方总人力时的最大偏差值（范围0.0至1.0）

MAX_INTELLIGENCE_FIELDED_MANPOWER_DATA_DEVIATION = 0.35, — (Old Intel) Max deviation in estimating enemy fielded manpower amount ( 0.0 - 1.0 )

MAX_INTELLIGENCE_FIELDED_MANPOWER_DATA_DEVIATION = 0.35, — (旧版情报) 估算敌方现役人力数量的最大偏差值 (0.0 - 1.0)

MAX_INTELLIGENCE_INDUSTRY_DATA_DEVIATION = 0,4, — (Old Intel) Max deviation in estimating enemy total industry

MAX_INTELLIGENCE_INDUSTRY_DATA_DEVIATION = 0,4, ——（旧版情报）估算敌方总工业产能的最大偏差

MIN_MANPOWER_RATIO = 0.15,						— Min manpower ratio to show manpower alert

MIN_MANPOWER_RATIO = 0.15, — 显示人力警报的最小人力比例

ARMY_IMPORTANCE_FACTOR = 5.0,					— Army factor for AI and calculations

ARMY_IMPORTANCE_FACTOR = 5.0, — 用于AI和计算中的军队重要性系数

TERRAIN_IMPORTANCE_FACTOR = 5.0,				— Terrain base factor for state strategic value

TERRAIN_IMPORTANCE_FACTOR = 5.0, —— 用于计算国家战略价值的地形基础系数

VICTORY_POINTS_IMPORTANCE_FACTOR = 5.0,			— State victory points importance factor for AI and calculations

VICTORY_POINTS_IMPORTANCE_FACTOR = 5.0, — 国家胜利点数对AI及计算的重要性系数

BUILDING_IMPORTANCE_FACTOR = 3.0,				— State building importance factor for AI and calculations

BUILDING_IMPORTANCE_FACTOR = 3.0, —— 用于AI和计算的州建筑重要性因子

RESOURCE_IMPORTANCE_FACTOR = 1.0,				— State resource importance factor for AI and calculations

RESOURCE_IMPORTANCE_FACTOR = 1.0, —— 用于AI和计算的国家资源重要性系数

INTERPOLATED_FRONT_STEPS_SHORT = 2,				— Performance optimization - The amount of steps for interpolated fronts. Non-AI countries got full interpolated fronts, the rest has optimized version of it.

INTERPOLATED_FRONT_STEPS_SHORT = 2, —— 性能优化 - 插值前线步数。非AI国家采用完整插值前线，其余则使用其优化版本。

MIN_AIR_RESERVE_RATIO = 0.33,					— Min manpower ratio to show air reserves alert

最低空中储备比率 = 0.33, —— 显示空中储备警报的最低人力比率

POLITICAL_POWER_LOWER_CAP = -500.0,				— Min amount of political power country should have

POLITICAL_POWER_LOWER_CAP = -500.0, — 国家应拥有的最小政治力量值

POLITICAL_POWER_UPPER_CAP = 2000.0,				— Max amount of political power country should have

POLITICAL_POWER_UPPER_CAP = 2000.0, — 国家应拥有的最大政治力量数值

RESISTANCE_IMPORTANT_LEVEL = 0.25,				— Level when resistance becomes dangerous

RESISTANCE_IMPORTANT_LEVEL = 0.25, — 阻力达到危险水平的阈值

RESISTANCE_IMPORTANT_COUNTRY_LEVEL = 0.25,		— Level when average resistance in a country becomes dangerous

RESISTANCE_IMPORTANT_COUNTRY_LEVEL = 0.25, — 国家平均抵抗水平达到危险值的阈值

MIN_MAJOR_COUNTRIES	= 7,						— MIN_MAJOR_COUNTRIES countries with most factories will be considered as major countries

MIN_MAJOR_COUNTRIES = 7, — 拥有最多工厂的MIN_MAJOR_COUNTRIES个国家将被视作主要国家

ADDITIONAL_MAJOR_COUNTRIES_IC_RATIO = 0.7,		— Countries will also be considered major when having more factories that the average of top MIN_MAJOR_COUNTRIES countries’ factories times ADDITIONAL_MAJOR_COUNTRIES_IC_RATIO

附加主要国家工业能力比率 = 0.7，——当国家拥有的工厂数量超过前MIN_MAJOR_COUNTRIES个国家平均工厂数量乘以附加主要国家工业能力比率时，也将被视为主要国家

BASE_TENSION_MAJOR_COUNTRY_INDEX = 1,			— Which major country should be considered the base country when scaling generated world tension. 0 is the country with the most factories, 1 is the second most-factories country etc. This number has to be lower than MIN_MAJOR_COUNTRIES

BASE_TENSION_MAJOR_COUNTRY_INDEX = 1, —— 在缩放生成的世界紧张度时，应视哪个主要国家为基础国家。0代表工厂最多的国家，1代表工厂数量第二的国家，以此类推。该数值必须小于MIN_MAJOR_COUNTRIES。

MIN_NAVAL_SUPPLY_EFFICIENCY = 0.1,				— Min ratio when supplies will be considered delivered from the capital by naval path

MIN_NAVAL_SUPPLY_EFFICIENCY = 0.1, — 最小比率，当补给被认为通过海上路径从首都运送时的效率

PARADROP_AIR_SUPERIORITY_RATIO = 0.7,			— Min ratio of air superiority for paradropping

PARADROP_AIR_SUPERIORITY_RATIO = 0.7, — 空降所需的最小空中优势比例

STATE_VALUE_BASE = 10.0, — Base value of a state (value is used to determine costs in e.g. peace conferences)

STATE_VALUE_BASE = 10.0, —— 一个州的基础价值（该数值用于确定和平会议等场合中的成本）

STATE_VALUE_BUILDING_SLOTS_MULT = 4.0, — The value of each building slot in a state

STATE_VALUE_BUILDING_SLOTS_MULT = 4.0, —— 每个建筑槽位在州中的价值

STATE_VALUE_MANPOWER_FACTOR = 0.1, — State cost increases with this for every 10k population (so 3.1M becomes 310 and then multiplied by this)

STATE_VALUE_MANPOWER_FACTOR = 0.1, —— 每1万人口将增加对应的国家成本（例如310万人口换算为310后乘以该系数）

INVASION_REPORT_EXPERATION_DAYS = 30,			— Invasion experation days

入侵报告过期天数 = 30, — 入侵过期天数

MIN_FOCUSES_FOR_CONTINUOUS = 10,				— Focuses needed to unlock continuous focuses

MIN_FOCUSES_FOR_CONTINUOUS = 10, — 解锁持续焦点所需的最小焦点数

AUTONOMOUS_TOTAL_SCORE = 5000,					— Total score for autonomous scale

AUTONOMOUS_TOTAL_SCORE = 5000, —— 自主量表总分

AUTONOMOUS_SPILLOVER = 0.025,					— Total score that can be saved to reach next level

AUTONOMOUS_SPILLOVER = 0.025, — 可累积以达至下一等级的总分

CIVIL_WAR_INVOLVEMENT_MIN_TENSION = 0.5,		— base value of world tension to involve other sides to the civil war

CIVIL_WAR_INVOLVEMENT_MIN_TENSION = 0.5, — 其他国家介入内战所需的世界紧张度基础值

UNCAPITULATE_LEVEL = 0.1, — if we reclaim this much and our capital we reset capitulate status

UNCAPITULATE_LEVEL = 0.1, —— 如果我们收回这么多资金且本金达到此比例，则重置投降状态

BASE_SURRENDER_LIMIT = 0.8,						— Base level of occupation required for country surrender

BASE_SURRENDER_LIMIT = 0.8, — 国家投降所需的基准占领程度

SURRENDER_LIMIT_MULT_FOR_COUNTRIES_WITH_NO_CORES = 0.7, — Countries with no owned cores will their surrender level multiplied by this amount

SURRENDER_LIMIT_MULT_FOR_COUNTRIES_WITH_NO_CORES = 0.7, —— 无核心领土的国家其投降阈值将乘以该系数

MIN_SURRENDER_LIMIT = 0.2,						— Minimum non-forced surrender limit. valid 0-1

MIN_SURRENDER_LIMIT = 0.2, — 最低非强制投降限制，有效范围0-1

BASE_MOBILIZATION_SPEED = 0.01,					— Base speed of manpower mobilization #in 1/1000 of 1 %

BASE_MOBILIZATION_SPEED = 0.01, — 人力动员的基础速度 #以千分之一百分比为单位



INTERCEPTION_WAR_SUPPORT_SCALE = 0.00001,		— Scaling of interceptions to war support impact

拦截战争支持比例 = 0.00001, — 拦截对战争支持影响的缩放系数

INTERCEPTION_BOMBING_WAR_SUPPORT_IMPACT = 0.3,	— Max impact of interceptions on the war support

拦截轰炸对战争支持度的影响上限 = 0.3



BOMBING_WAR_SUPPORT_PENALTY_SCALE = -0.00015, 			— Scaling of bomber damage to war support impact, will be added weekly as a war support penalty

BOMBING_WAR_SUPPORT_PENALTY_SCALE = -0.00015, — 轰炸机伤害对战争支持度影响的缩放系数，将作为战争支持度惩罚每周累加

MAX_BOMBING_WEEKLY_WAR_SUPPORT_PENALTY = -0.006,		— Max penalty that will gained per week from bomber’s damage

MAX_BOMBING_WEEKLY_WAR_SUPPORT_PENALTY = -0.006, —— 每周因轰炸机破坏获得的最大战争支持度惩罚

BOMBING_WEEKLY_WAR_SUPPORT_PENALTY_DECAY = 0.001,		— Weekly decay of bomber damage war support penalty

BOMBING_WEEKLY_WAR_SUPPORT_PENALTY_DECAY = 0.001, — 轰炸机伤害战争支持度惩罚的每周衰减值

MAX_BOMBING_WAR_SUPPORT_IMPACT = -0.3,					— Max total penalty from bomber’s damage

MAX_BOMBING_WAR_SUPPORT_IMPACT = -0.3, ——轰炸机造成的最大总惩罚



HEROES_BEING_KILLED_WAR_SUPPORT_PENALTY_SCALE = -0.03,			— Scaling of war heroes manpower lost to war support impact, will be added weekly as a war support penalty

英雄阵亡对战争支持度影响的系数 = -0.03, — 战争中英雄人力损失对战争支持度影响的缩放比例，将作为战争支持度惩罚每周累加

MAX_HEROES_BEING_KILLED_WEEKLY_WAR_SUPPORT_PENALTY = -0.006,		— Max penalty that will gained per week from war heroes manpower lost

MAX_HEROES_BEING_KILLED_WEEKLY_WAR_SUPPORT_PENALTY = -0.006, — 每周因战争英雄人力损失所获得的最大惩罚值

HEROES_BEING_KILLED_WEEKLY_WAR_SUPPORT_PENALTY_DECAY = 0.001,	— Weekly decay of war heroes manpower lost war support penalty

HEROES_BEING_KILLED_WEEKLY_WAR_SUPPORT_PENALTY_DECAY = 0.001, — 战争英雄人力损失对战争支持度惩罚的每周衰减值

MAX_HEROES_BEING_KILLED_WAR_SUPPORT_IMPACT = -0.3,				— Max total penalty from war heroes manpower lost

MAX_HEROES_BEING_KILLED_WAR_SUPPORT_IMPACT = -0.3, — 战争英雄人力损失导致的最大总惩罚

WAR_SUPPORT_FROM_CASUALTIES = 0.025,							— Base value (inverted) for calculating heroes being killed

WAR_SUPPORT_FROM_CASUALTIES = 0.025, — 计算英雄阵亡影响的基本值（反向）



CONVOYS_BEING_RAIDED_WAR_SUPPORT_PENALTY_SCALE = -0.05,			— Scaling of trade convoy raided to war support impact, will be added weekly as a war support penalty

运输船队遭袭战争支持度惩罚比例 = -0.05, —— 贸易船队遭袭对战争支持度影响的缩放比例，将作为每周战争支持度惩罚累加

MAX_CONVOYS_BEING_RAIDED_WEEKLY_WAR_SUPPORT_PENALTY = -0.006,	— Max penalty that will gained per week from trade convoy raided

MAX_CONVOYS_BEING_RAIDED_WEEKLY_WAR_SUPPORT_PENALTY = -0.006, — 每周因贸易船队遭袭而获得的最大战争支持度惩罚

CONVOYS_BEING_RAIDED_WEEKLY_WAR_SUPPORT_PENALTY_DECAY = 0.001,	— Weekly decay of trade convoy raided war support penalty

CONVOYS_BEING_RAIDED_WEEKLY_WAR_SUPPORT_PENALTY_DECAY = 0.001, — 贸易护航队遭袭战争支持度惩罚的每周衰减

MAX_CONVOYS_BEING_RAIDED_WAR_SUPPORT_IMPACT = -0.5,				— Max total penalty from trade convoy raided

MAX_CONVOYS_BEING_RAIDED_WAR_SUPPORT_IMPACT = -0.5, — 贸易护航队遭袭对战争支持度的最大总惩罚值



FEMALE_UNIT_LEADER_BASE_CHANCE = {

女性单位领导基础概率 = {

— applies as a factor to female unit leader randomization

— 作为女性单位领导者随机化的影响因素

— the values needs to be zero if you don’t actually have random portraits

— 如果没有随机肖像，这些值应设为零

0.5, — country leaders

0.5，——国家领导人

0.5, — army leaders

0.5，——军队领导人

0.5, — navy leaders

0.5，——海军将领

0.5, — air leaders

0.5，——空中领袖

0.5, — operatives

0.5，——操作人员





0.5, — scientists


0.5，——科学家


},



CONVOYS_SUNK_MULTIPLIER_FOR_WAR_SUPPORT = 0.2,	— once a trade convoy ship sunk, you will get a larger negative impact on your war support

CONVOYS_SUNK_MULTIPLIER_FOR_WAR_SUPPORT = 0.2, -- 每有一艘贸易护航舰被击沉，将对你的战争支持度造成更大的负面影响

CONVOYS_BEING_RAIDED_DAILY_WAR_SUPPORT_IMPACT_FROM_OVERSEA_STATES = 0.2,	— resource transfer convoys convoys from our states being raided will give a daily war support penalty depending on how important that resource is and how inefficent convoys are

运输船队每日遭袭对海外国家战争支持度影响 = 0.2，——资源运输船队我方辖区的运输船队遭袭将根据资源重要性和船队效率损失情况，每日扣除相应战争支持度

CONVOYS_SUNK_MULTIPLIER_FOR_WAR_SUPPORT_FROM_OVERSEA_STATES = 0.2,			— once a resource transfer convoys from our states ship sunk, you will get a larger negative impact on your war support

海外省份因护航船队被击沉而降低的战争支持度倍数 = 0.2, ——当我方资源运输船队从海外省份出发后被击沉时，战争支持度将受到更大的负面影响

CONVOYS_BEING_RAIDED_DAILY_WAR_SUPPORT_IMPACT = 0.2,	— trade convoys being raided will give a daily war support penalty depending on how important that resource is and how inefficent convoys are

每日护航船队遭袭战争支持度影响 = 0.2，——贸易护航船队遭袭将根据该资源的重要性和船队运输效率低下程度，每日对战争支持度造成惩罚



MAX_PROPAGANDA_STABILITY_IMPACT = -0.2,			— Max total penalty from operative performing the propaganda mission in a country

MAX_PROPAGANDA_STABILITY_IMPACT = -0.2, — 特工在执行国家宣传任务时施加的最大总稳定性惩罚

MAX_PROPAGANDA_WAR_SUPPORT_IMPACT = -0.2,		— Max total penalty from operative performing the propaganda mission in a country

MAX_PROPAGANDA_WAR_SUPPORT_IMPACT = -0.2, — 特工在某个国家执行宣传任务时造成的最大总惩罚

PROPAGANDA_STABILITY_DAILY_DECAY = 0.001,		— Amount of stability recovered daily from propaganda effort

PROPAGANDA_STABILITY_DAILY_DECAY = 0.001, — 宣传行动每日恢复的稳定值

PROPAGANDA_WAR_SUPPORT_DAILY_DECAY = 0.001,		— Amount of war support recovered daily from war support effort

PROPAGANDA_WAR_SUPPORT_DAILY_DECAY = 0.001, — 战争支持度每日恢复量（来自宣传努力）



NUM_DAYS_TO_FULLY_DELETE_STOCKPILED_EQUIPMENT = 90,	 — time in days to fully delete equipments from stockpile. when you delete an equipment, they go to a temporary hidden pool which still can be seized

NUM_DAYS_TO_FULLY_DELETE_STOCKPILED_EQUIPMENT = 90, —— 表示从储备中完全删除装备所需的时间（天数）。当您删除装备时，它们会进入一个临时的隐藏池，仍可能被缴获。

AIR_SUPPLY_CONVERSION_SCALE = 0.01,				— Conversion scale for planes to air supply

AIR_SUPPLY_CONVERSION_SCALE = 0.01, — 飞机转换为空中补给的换算比例

AIR_SUPPLY_DROP_EXPIRATION_HOURS = 168,			— Air drop length after being dropped

AIR_SUPPLY_DROP_EXPIRATION_HOURS = 168, — 空投物资自投放后的有效时长

STARTING_COMMAND_POWER = 0.0,					— starting command power for every country

STARTING_COMMAND_POWER = 0.0, — 每个国家的初始指挥点数

BASE_MAX_COMMAND_POWER = 80.0,					— base value for maximum command power

BASE_MAX_COMMAND_POWER = 80.0, — 最大指挥能量的基础值

BASE_COMMAND_POWER_GAIN = 0.4,					— base value for daily command power gain

BASE_COMMAND_POWER_GAIN = 0.4, — 每日指挥力增长的基础值

AIR_VOLUNTEER_PLANES_RATIO = 0.2,				— Ratio for volunteer planes available for sending in relation to sender air force

AIR_VOLUNTEER_PLANES_RATIO = 0.2, —— 可派遣志愿飞机数量与派遣方空军力量的比率

AIR_VOLUNTEER_BASES_CAPACITY_LIMIT = 0.1,		— Ratio for volunteer planes available for sending in relation to receiver air base capacity

AIR_VOLUNTEER_BASES_CAPACITY_LIMIT = 0.1, —— 志愿飞机可派遣数量与接收方空军基地容量的比率

ATTACHE_XP_SHARE = 0.15,						— Country received xp from attaches

ATTACHE_XP_SHARE = 0.15, — 被派遣顾问的国家获得经验值的比例

SPECIAL_FORCES_CAP_BASE = 0.05,					— Max ammount of special forces battalions is total number of non-special forces battalions multiplied by this and modified by a country modifier

特种部队基数上限 = 0.05，—— 特种部队营的最大数量为非特种部队营总数乘以该值，并受国家修正系数调整

SPECIAL_FORCES_CAP_MIN = 24,					— You can have a minimum of this many special forces battalions, regardless of the number of non-special forces battalions you have, this can also be modified by a country modifier

SPECIAL_FORCES_CAP_MIN = 24, ——无论你拥有多少非特种部队营，你至少可以拥有这么多特种部队营，这个数值也可以通过国家修正来调整

DAYS_OF_WAR_BEFORE_SURRENDER = 7,				— Number of days a war has to have existed before anyone can surrender in it

DAYS_OF_WAR_BEFORE_SURRENDER = 7, —— 战争必须持续的天数，之后任何一方才能投降



FUEL_LEASE_CONVOY_RATIO = 0.0005,				— num convoys needed per fuel land lease

燃油租赁与护航船队比例 = 0.0005, —— 每单位陆地租赁燃油所需的护航船队数量



STARTING_FUEL_RATIO = 0.25,						— starting fuel ratio compared to max fuel for countries

STARTING_FUEL_RATIO = 0.25, —— 国家初始燃料与最大燃料的比率

BASE_FUEL_GAIN_PER_OIL = 2,						— base amount of fuel gained hourly per excess oil

BASE_FUEL_GAIN_PER_OIL = 2, ——每小时每单位过剩石油产出的基础燃料量

BASE_FUEL_GAIN = 2.0,							— base amount of fuel gained hourly, independent of excess oil

基础燃料获取 = 2.0，——每小时获得的基础燃料量，与过剩石油无关

BASE_FUEL_CAPACITY = 50000,						— base amount of fuel capacity

BASE_FUEL_CAPACITY = 50000, — 燃料容量的基础数值



SCORCHED_EARTH_STATE_COST = 5,					— pp cost to scorch a state

焦土政策状态消耗 = 5, —— 对某州实施焦土政策所需的pp点数



COUNTRY_MANPOWER_CAPITULATED_FREE_POOL_FACTOR = 0.1,	— Factor on amount of normal manpower left for an exiled nation with no territory.

COUNTRY_MANPOWER_CAPITULATED_FREE_POOL_FACTOR = 0.1, — 无领土流亡国家剩余常规人力数量的系数。

COUNTRY_MANPOWER_CAPITULATED_CORE_GAIN_FACTOR = 0.001,	— Factor on amount of normal manpower gained for the exile nation. From owned states that are controlled by an enemy. State manpower reduced by factor 1000 in code.

国家人力投降核心增益系数 = 0.001, —— 流亡政府从敌方控制的所属州获取常规人力时的系数。代码中州人力数值已除以1000。

COUNTRY_MANPOWER_CAPITULATED_NON_CORE_GAIN_FACTOR = 0.001,	— Factor on amount of normal manpower gained for the exile nation. From owned states that are controlled by an enemy. State manpower reduced by factor 1000 in code.

国家人力投降非核心地区获取系数 = 0.001, —— 流亡政府从被敌方控制的拥有省份中获得常规人力时的系数。代码中省份人力已缩减1000倍。

GIE_MAX_LEGITIMACY = 100, 								—Legitimacy max of a GiE

GIE_MAX_LEGITIMACY = 100, ——流亡政府合法性的最大值

GIE_CAPITULATE_MAX_STOCKPILE_TRANSFER = 0.1, 			— 0-1 Transfers ratio of stockpile. from 0 to this define depending on starting legitimacy on capitulation.

GIE_CAPITULATE_MAX_STOCKPILE_TRANSFER = 0.1, — 投降时库存转移比例，范围0至1，根据初始合法性在此定义值间变化。

GIE_CAPITULATE_MIN_LEGIT_FOR_TRANSFER = 5, — 0-100 Minimum starting legitimacy to transfer any equipment at all.

GIE_CAPITULATE_MIN_LEGIT_FOR_TRANSFER = 5, — 0-100 转移任何装备所需的最低初始合法性。

GIE_CAPITULATION_LEGITIMACY_WARSCORE_FACTOR = 0.5, — Multiplies war contribution percent with this factor for part of starting legitimacy. (0.5 would mean a 50 % war contribution gives 25 more legitimacy)

GIE_CAPITULATION_LEGITIMACY_WARSCORE_FACTOR = 0.5, — 将战争贡献百分比乘以该系数，作为初始合法性的部分依据。（0.5表示50%的战争贡献可增加25点合法性）

GIE_CAPITULATION_LEGITIMACY_WARLENGTH_FACTOR = 1.0, — Multiplies war length (nr of weeks) with this factor for part of starting legitimacy. (1.0 would mean a war length of 30 weeks gives 30 more legitimacy)

GIE_CAPITULATION_LEGITIMACY_WARLENGTH_FACTOR = 1.0, — 将战争时长（周数）乘以该系数，作为初始合法性的部分计算依据。（1.0表示30周的战争时长将提供30点额外合法性）

GIE_WARSCORE_GAIN_LEGITIMACY_FACTOR = 1,		 		—Factor on how much legitimacy is gained from warscore earned by GiE units.

GIE_WARSCORE_GAIN_LEGITIMACY_FACTOR = 1, ——流亡政府单位通过战争分数获得合法性的系数。

GIE_HOST_CIC_FROM_LEGITIMACY_MAX = 5, 					—Host will receive from 0 to this value in CIC.

GIE_HOST_CIC_FROM_LEGITIMACY_MAX = 5, ——主机将从0到此值范围内接收CIC。

GIE_HOST_MIC_FROM_LEGITIMACY_MAX = 5,					—Host will receive from 0 to this value in MIC.

GIE_HOST_MIC_FROM_LEGITIMACY_MAX = 5, ——主持人将获得0至此数值的MIC积分。

GIE_HOST_DOCKYARDS_FROM_LEGITIMACY_MAX = 0,				—Host will receive from 0 to this value in dockyards.

GIE_HOST_DOCKYARDS_FROM_LEGITIMACY_MAX = 0, —宿主将获得0至此数值范围内的船坞设施。

GIE_VETERAN_MANPOWER_NON_CORE_GAIN_FACTOR = 0.005,	— Factor on amount of manpower gained from owned states that are controlled by an enemy. State manpower reduced by factor 1000 in code.

GIE_VETERAN_MANPOWER_NON_CORE_GAIN_FACTOR = 0.005, — 从敌方控制的已拥有省份获取人力时的系数。代码中省份人力已缩减1000倍。

GIE_VETERAN_MANPOWER_CORE_GAIN_FACTOR = 0.01,	— Factor on amount of manpower gained from owned states that are controlled by an enemy. State manpower reduced by factor 1000 in code.

GIE_VETERAN_MANPOWER_CORE_GAIN_FACTOR = 0.01, -- 从被敌方控制的己方省份获取人力时的系数。代码中省份人力值已缩小1000倍。

GIE_MANPOWER_TOTAL_MAX_FACTOR = 0.5,	— Factor on max amount of exile manpower that can be gained from owned states. Approaching this will give diminishing returns. Reduced by factor 100 in code.

GIE_MANPOWER_TOTAL_MAX_FACTOR = 0.5, —— 影响从拥有省份可获取流亡者人力最大值的系数。接近该数值时收益将递减。代码中实际数值会除以100。

GIE_MANPOWER_RATO_OF_MAX_START_PENALTY = 0.5,	—When this ratio of max manpower has been recruited we start applying the penalty.

GIE_MANPOWER_RATO_OF_MAX_START_PENALTY = 0.5, ——当招募达到最大人力比例时，开始施加惩罚。

GIE_MANPOWER_GAIN_PENALTY_MAX = 0.95,	—Max penalty on exile manpower growth.

GIE_MANPOWER_GAIN_PENALTY_MAX = 0.95, —流亡状态下人力增长的最大惩罚值。

GIE_EXILE_AIR_RECRUITMENT_LEGITIMACY = 50, 	—Legitimacy required to recruit exile airwings

GIE_EXILE_AIR_RECRUITMENT_LEGITIMACY = 50, ——招募流亡空军联队所需的合法性

GIE_EXILE_AIR_START_EXPERIENCE = 3, 		—Starting experience for exile airwings

GIE_EXILE_AIR_START_EXPERIENCE = 3, ——流亡航空联队的初始经验值

GIE_EXILE_TROOP_RECRUITMENT_LEGITIMACY = 25, 	—Legitimacy required to recruit exile troops

GIE_EXILE_TROOP_RECRUITMENT_LEGITIMACY = 25, —招募流亡部队所需的合法性

GIE_EXILE_TROOPS_DEPLOY_TRAINING_MAX_LEVEL = 2, 	—Max XP exile troops can receive from training

GIE_EXILE_TROOPS_DEPLOY_TRAINING_MAX_LEVEL = 2, ——流亡部队通过训练可获得的最大经验值

GIE_EXILE_ARMY_LEADER_LEGITIMACY_LEVELS = { 	—Legitimacy levels where a new army leader is received.

GIE_EXILE_ARMY_LEADER_LEGITIMACY_LEVELS = { ——获取新军队领袖所需的合法性等级。

30,

60,

90,

},

GIE_EXILE_ARMY_LEADER_START_LEVEL = 3,	—Starting level for exile leader

GIE_EXILE_ARMY_LEADER_START_LEVEL = 3, ——流亡军队首领的起始等级

GIE_ESCAPING_DIVISIONS_TRANSFER_DAYS = 30, — days to transfer escaping divisions to host nation

GIE_ESCAPING_DIVISIONS_TRANSFER_DAYS = 30， ——将逃逸师团转移至宿主国的天数

GIE_ESCAPING_DIVISIONS_XP_BOOST = 0.4, — Escaping divisions gain a boost to experience. Only the toughest motherbadasses will band together and survive to git me one hundred Nazi scalps … Or die tryin’…

GIE_ESCAPING_DIVISIONS_XP_BOOST = 0.4, —— 逃亡师团获得经验值加成。只有最硬核的顶级狠人们才会集结起来，为了给我带回一百张纳粹头皮而拼死求生……要么在尝试中壮烈牺牲……

GIE_DIVISION_ATTACK_BONUS_AGAINST_OCCUPIER = 0.1, — Attack bonus factor against whoever occupies your core territory.

GIE_DIVISION_ATTACK_BONUS_AGAINST_OCCUPIER = 0.1, — 对抗占领你核心领土者的攻击加成系数。

GIE_DIVISION_DEFENSE_BONUS_AGAINST_OCCUPIER = 0.1, — Attack bonus factor against whoever occupies your core territory.

GIE_DIVISION_DEFENSE_BONUS_AGAINST_OCCUPIER = 0.1, ——对占领你核心领土的敌人攻击加成系数。

GIE_DIVISION_ATTACK_BONUS_ON_CORE = 0.1, — Attack bonus factor when fighting on cores.

GIE_DIVISION_ATTACK_BONUS_ON_CORE = 0.1, — 在核心区域作战时的攻击加成系数。

GIE_DIVISION_DEFENSE_BONUS_ON_CORE = 0.1, — Defense bonus factor when fighting on cores.

GIE_DIVISION_DEFENSE_BONUS_ON_CORE = 0.1, —— 在核心领土作战时的防御加成系数。

GIE_ESCAPING_DIVISIONS_EQUIPMENT_RATIO = 0.2, — Base equipment ratio on escaped troops.

GIE_ESCAPING_DIVISIONS_EQUIPMENT_RATIO = 0.2, —— 基于逃逸部队的基础装备比例。

GIE_ESCAPING_DIVISIONS_AMOUNT_RATIO = 0.1, — Ratio on amount of divisions that escapes. Scales with starting legitimacy

GIE_ESCAPING_DIVISIONS_AMOUNT_RATIO = 0.1, —— 逃脱师团数量的比例。随初始合法性等级变化而缩放

GIE_LIBERATED_NATION_DAILY_LEGITIMACY_CHANGE = -1.5, —An uncapitulated exile that is fully liberated will have legitimacy changed with this amount daily. Will be automatically reinstated when it reaches 0.

GIE_LIBERATED_NATION_DAILY_LEGITIMACY_CHANGE = -1.5, ——一个完全解放但未投降的流亡政府，其合法性每日将按此数值变化。当合法性降至0时，将自动恢复原状。

GIE_EXILE_TRANSFER_ON_LEADER_CAPITULATION_MANPOWER_FACTOR = 0.1, —Factor on exile manpower kept when a faction leader capitulates and the hosted exiles are transfered.

GIE_EXILE_TRANSFER_ON_LEADER_CAPITULATION_MANPOWER_FACTOR = 0.1, ——当阵营领袖投降且托管流亡者被转移时，所保留流亡人力资源的比例系数。

GIE_CONVOY_ON_CREATION = 10, — Number of convoy a GiE will get on creation.

GIE_CONVOY_ON_CREATION = 10, — 流亡政府创建时获得的护航队数量。



SURRENDER_LIMIT_REDUCTION_PER_COLLABORATION = 0.3, 	—each percent of collaboration will lower surrender limit by this percentage

SURRENDER_LIMIT_REDUCTION_PER_COLLABORATION = 0.3，——每1%的合作将按此百分比降低投降限制

SURRENDER_RECIPIENT_SCORE_PER_COLLABORATION = 1.0, 	—countries with collaboration will get bonus while game calculates which country the enemy will capitulate

SURRENDER_RECIPIENT_SCORE_PER_COLLABORATION = 1.0, ——在游戏计算敌方将向哪个国家投降时，有合作关系的国家将获得加分

COMPLIANCE_PER_COLLABORATION = 1.0,					—each percent of collaboration will be converted to this compliance at capitulation

COMPLIANCE_PER_COLLABORATION = 1.0，——每1%的协作将在投降时转化为这一比例的服从度



WILL_LEAD_TO_WAR_FOCUS_PERSISTENCE = 60, — taken focuses that has lead to war will still make ai prep for war for this many days after being taken

WILL_LEAD_TO_WAR_FOCUS_PERSISTENCE = 60, — 已选择的会导致战争的国家焦点，在选定后仍将使AI为此备战这么多天

WILL_LEAD_TO_WAR_DECISION_PERSISTENCE = 30, — the decision thats lead to war will sitll make ai prep for war for this many days after being taken/cooldown/timeout

WILL_LEAD_TO_WAR_DECISION_PERSISTENCE = 30, —— 导致战争的决定在作出/冷却/超时后，仍会使AI为此备战这么多天



ARMY_COUNT_DAILY_LERP_FOR_TRAINING_XP = 0.002, — number of armies that is used in training xp calculates daily lerps to actual number (if real number is lower)

ARMY_COUNT_DAILY_LERP_FOR_TRAINING_XP = 0.002，——用于训练经验计算的军队数量每日向实际数量线性插值（若实际数量较低）

ARMY_COUNT_DAILY_DECREASE_FOR_TRAINING_XP = 0.1, — number of armies that is used in training xp calculates daily linearly approaches this number (if real number is lower)

ARMY_COUNT_DAILY_DECREASE_FOR_TRAINING_XP = 0.1, —— 用于训练经验计算的军队数量每日线性递减趋近此数值（若实际数值更低）

},



NResistance = {

N电阻 = {

INITIAL_STATE_RESISTANCE = 1.0,							— initial resistance percentage of a state once it is captured

INITIAL_STATE_RESISTANCE = 1.0, — 某个状态被占领后的初始抵抗百分比

INITIAL_STATE_COMPLIANCE = 0.0,							— initial compliance percentage of a state once it is captured

INITIAL_STATE_COMPLIANCE = 0.0, — 一个州被占领时的初始服从百分比

COMPLIANCE_FACTOR_ON_STATE_CONTROLLER_CHANGE = -0.5,	— compliance factor that applies when the state controller changes (in between allies, compliance is zeroed if it is taken by original country)

COMPLIANCE_FACTOR_ON_STATE_CONTROLLER_CHANGE = -0.5，——当州控制器变更时适用的顺从度因子（若原属国重新接管，盟国之间的顺从度将归零）

RESISTANCE_COOLDOWN_WHEN_DISABLED = -0.25,				— resistance cooldown when the state is taken back by its original owner (compliance is zeroed in that case)

RESISTANCE_COOLDOWN_WHEN_DISABLED = -0.25, — 当状态被原所有者收回时的抵抗冷却时间（此时顺应性归零）



RESISTANCE_TARGET_BASE = 35.0,							— base resistance target percentage

RESISTANCE_TARGET_BASE = 35.0, — 基础抗性目标百分比



RESISTANCE_TARGET_MODIFIER_HAS_CLAIM = -5.0,			— resistance target modifier in % for states we have claim

RESISTANCE_TARGET_MODIFIER_HAS_CLAIM = -5.0，——针对我们拥有宣称权的省份，其抵抗目标修正百分比



RESISTANCE_TARGET_MODIFIER_PER_STABILITY_LOSS = 0.2,	— resistance target modifier per stability below 100%

RESISTANCE_TARGET_MODIFIER_PER_STABILITY_LOSS = 0.2，——每低于100%稳定性时的抗性目标修正系数

RESISTANCE_TARGET_MODIFIER_PER_COMPLIANCE = -0.5,		— resistance target modifier per compliance %

抵抗目标每合规度修正值 = -0.5, —— 每1%合规度对应的抵抗目标修正系数



RESISTANCE_TARGET_MODIFIER_IS_AT_PEACE = -10.0,			— resistance target modifier when we are at peace

抵抗目标修正值（处于和平状态） = -10.0, — 当我们处于和平状态时的抵抗目标修正值



RESISTANCE_TARGET_MODIFIER_STATE_VP = {					— resistance target modifier pairs for vp. first entry is total vp in state and second entry is amount of target modifier that applies for that threshold

抵抗目标修正值_国家威望 = { —— 国家威望的抵抗目标修正值对。首项为州内总威望值，次项为对应该阈值所适用的目标修正量

0, 0.0, — 0 - 5

5, 5.0, — 5 - 20

20, 10.0, — 20 - 50

50, 20.0, — 50 - …

},



RESISTANCE_TARGET_MODIFIER_OCCUPIED_CAPITULATED = 10.0, — resistance target modifier when the enemy is capitulated

RESISTANCE_TARGET_MODIFIER_OCCUPIED_CAPITULATED = 10.0, —— 当敌方投降时，抵抗目标的修正系数



RESISTANCE_TARGET_MODIFIER_OCCUPIED_IS_EXILE_MIN = 2.0, — min & max resistance target modifier resistance target modifier for exile countries. interpolated using legitimacy

RESISTANCE_TARGET_MODIFIER_OCCUPIED_IS_EXILE_MIN = 2.0, —— 抵抗目标修正的最小值与最大值，针对流亡国家的抵抗目标修正。通过合法性进行插值计算

RESISTANCE_TARGET_MODIFIER_OCCUPIED_IS_EXILE_MAX = 20.0,

抵抗目标修正值_占领区为流放地最大值 = 20.0,



RESISTANCE_TARGET_MODIFIER_POP_LOW = -20.0,			— how much we reduce the resistance target

RESISTANCE_TARGET_MODIFIER_POP_LOW = -20.0, — 抵抗目标降低的数值

RESISTANCE_TARGET_MODIFIER_POP_VERY_LOW = -50.0,			— resistance target modifier in % for states we have claim

抵抗目标修正因子（针对我们声称拥有但人口极低的地区）= -50.0



RESISTANCE_POP_LOW_CUTOFF = 10000,

RESISTANCE_POP_LOW_CUTOFF = 10000,

RESISTANCE_POP_VERY_LOW_CUTOFF = 1000,

RESISTANCE_POP_VERY_LOW_CUTOFF = 1000,



RESISTANCE_TARGET_MIN_CAP_FOR_NON_COMPLIANCE = 10, — min resistance target will be capped to this percentage for non-compliance sources

RESISTANCE_TARGET_MIN_CAP_FOR_NON_COMPLIANCE = 10, — 对于不达标来源，最低抵抗目标将被限制在此百分比



RESISTANCE_DECAY_BASE = 0.1, — base resistance decay

RESISTANCE_DECAY_BASE = 0.1, — 基础阻力衰减

RESISTANCE_DECAY_MIN = 0.01, — min resistance decay

RESISTANCE_DECAY_MIN = 0.01, — 最小阻力衰减

RESISTANCE_DECAY_MAX = 100.0, — nax resistance decay

RESISTANCE_DECAY_MAX = 100.0, — 最大阻力衰减



RESISTANCE_DECAY_MODIFIER_HAS_CLAIM = 25.0, — resistance decay modifier for our claims

RESISTANCE_DECAY_MODIFIER_HAS_CLAIM = 25.0, — 我方宣称的抵抗衰减修正值

RESISTANCE_DECAY_MODIFIER_FACTORS = { — resistance decay modifier when resistance hits a certain percentage

RESISTANCE_DECAY_MODIFIER_FACTORS = { — 当抗性达到特定百分比时的抗性衰减修正系数

10, -50, — below 10% it has a -50% modifier on decay

10，-50，——低于10%时，其衰减有-50%的修正

20, -25, — below 20% it has a -25% modifier on decay

20，-25，——低于20%时，衰减速率的修正值为-25%

},



MIN_DAMAGE_TO_GARRISONS_MODIFIER = 0.1, — modifier that applies to losses from resistance attack to garrisons at most can be reduced to this amount

MIN_DAMAGE_TO_GARRISONS_MODIFIER = 0.1, —— 对驻军抵抗攻击造成的损失施加的修正系数，最多可降低至该数值



RESISTANCE_GROWTH_BASE = 0.2, — base resistance grow

RESISTANCE_GROWTH_BASE = 0.2, ——基础抗性增长

RESISTANCE_GROWTH_MIN = 0.01, — min resistance grow

RESISTANCE_GROWTH_MIN = 0.01, —— 最小抗性增长

RESISTANCE_GROWTH_MAX = 100.0, — max resistance grow

RESISTANCE_GROWTH_MAX = 100.0, — 最大抗性增长



COMPLIANCE_GROWTH_BASE = 0.075, — base compliance grow

合规性增长基数 = 0.075，——基础合规性增长

COMPLIANCE_GROWTH_MIN = -100.0, — min compliance grow

COMPLIANCE_GROWTH_MIN = -100.0, — 最小合规增长

COMPLIANCE_GROWTH_MAX = 100.0, — max compliance grow

COMPLIANCE_GROWTH_MAX = 100.0, — 合规性增长上限



COMPLIANCE_GROWTH_IS_AT_PEACE = 10, — compliance growth buff at peace

COMPLIANCE_GROWTH_IS_AT_PEACE = 10, — 和平时期的顺从度增长加成

COMPLIANCE_GROWTH_HAS_CLAIM = 5, — compliance growth buff if state has a claim

合规增长若国家拥有宣称权则获得加成 = 5,



COMPLIANCE_DECAY_AT_MAX_COMPLIANCE = -0.083, — as compliance increases, it gets a decay rate depending on its value. compliance should stabilize at some value until its growth changes

COMPLIANCE_DECAY_AT_MAX_COMPLIANCE = -0.083，——随着合规性的提升，其衰减速率会依据当前值进行调整。合规性应在达到某一数值后趋于稳定，直至其增长发生变化。

COMPLIANCE_DECAY_PER_EXILE_LEGITIMACY = -0.015, — higher legitimacy will give higher decay to compliance

COMPLIANCE_DECAY_PER_EXILE_LEGITIMACY = -0.015, —— 更高的正统性将导致更快的顺从度衰减



RESISTANCE_RATIO_DIFF_TO_SPREAD = 0.5, — resistance diff between two neighbour states will spread by this ratio ( from highest resistance states to lower ones and it will only spread once to a state)

RESISTANCE_RATIO_DIFF_TO_SPREAD = 0.5，——相邻两个状态间的抗性差异将按此比例扩散（从抗性较高的状态向较低状态扩散，且仅向一个状态扩散一次）



RESISTANCE_ACTIVITY_CHANCE_AT_MAX_RESISTANCE = 0.312,

RESISTANCE_ACTIVITY_CHANCE_AT_MAX_RESISTANCE = 0.312,

RESISTANCE_ACTIVITY_MIN_GARRISON_PENETRATE_CHANCE = 0.02,

抵抗活动最低驻军渗透几率 = 0.02,



RESISTANCE_TARGET_TO_REENABLE_RESISTANCE = 10, — resistance will be disabled once it reaches zero and will not be reenabled until resistance target reaches above this value

RESISTANCE_TARGET_TO_REENABLE_RESISTANCE = 10, —— 当抵抗力降至零时将禁用，直到抵抗力目标值超过此数值才会重新启用

GARRISON_LOG_MAX_MONTHS = 12,

驻军日志最长月份数 = 12,



NO_COMPLIANCE_GAIN_ENABLE_LIMIT = 0.5, — at least this ratio of no garrison law should be active in order to no compliance gain to take effect

NO_COMPLIANCE_GAIN_ENABLE_LIMIT = 0.5，——至少需维持此比例的无驻军法律生效时，才能阻止顺从度的增长。



GARRISON_MANPOWER_MIN_DELIVERY_SPEED = 0.7,	— Minimum base delivery speed if the chunk can’t be calculated.

GARRISON_MANPOWER_MIN_DELIVERY_SPEED = 0.7, ——当无法计算区块时的最低基础运输速度。

GARRISON_MANPOWER_REINFORCEMENT_SPEED = 2000.0,	— Modifier for garrison manpower reinforcement. This value is the maximum to be delivered which is then modified by distance

GARRISON_MANPOWER_REINFORCEMENT_SPEED = 2000.0, — 守备部队人力补充速度的修正系数。此值为最大输送量，随后会根据距离进行调整

GARRISON_EQUIPMENT_DELIVERY_SPEED = 4.0,	— Modifier for garrison equipment reinforcement speed

GARRISON_EQUIPMENT_DELIVERY_SPEED = 4.0, — 驻军装备补充速度的修正系数



GARRISON_STR_POW_MANPOWER = 2,	—Scales impact of manpower deficiency by raising that deficiency to the number here. Formula: efficiency = 1.0 - manpower_deficiency^GARRISON_STR_POW_MANPOWER

GARRISON_STR_POW_MANPOWER = 2, ——通过将人力短缺值提升至此处的幂次方来调整人力短缺的影响。计算公式：效率 = 1.0 - 人力短缺^GARRISON_STR_POW_MANPOWER

GARRISON_STR_POW_EQUIPMENT = 3,	—Scales impact of euqipment deficiency by raising that deficiency to the number here. Formula: efficiency = 1.0 - equipment_deficiency^GARRISON_STR_POW_EQUIPMENT

GARRISON_STR_POW_EQUIPMENT = 3, ——通过将装备不足值提升至此数值次方来调整装备不足的影响。计算公式为：效率 = 1.0 - 装备不足值^GARRISON_STR_POW_EQUIPMENT



SUPPRESSION_NEEDED_BY_RESISTANCE_POINT = 0.75, — Number of suppression point we need for each 1% of resistance

SUPPRESSION_NEEDED_BY_RESISTANCE_POINT = 0.75, — 每1%抵抗所需压制点数

SUPPRESSION_NEEDED_LOWER_CAP = 10.0,	— if resistance is lower than this value then we always act as though it is at the define for the purpose of suppresion requirements

SUPPRESSION_NEEDED_LOWER_CAP = 10.0, — 若阻力低于此值，则出于压制需求目的，我们始终视其为定义值。

SUPPRESSION_NEEDED_UPPER_CAP = 50.0, — if resistance is greater than this value then we always act as though it is at the define for the purpose of suppresion requirements

SUPPRESSION_NEEDED_UPPER_CAP = 50.0, —— 如果阻力值超过此数值，则在计算压制需求时始终将其视为定义值。



GARRISON_MANPOWER_LOST_BY_ATTACK = 0.016, 	— Ratio of manpower lost by garrison at each attack on garrison (this number will be reduced by the hardness of garrison template)

驻军每次遭受攻击时损失的人力比例 = 0.016, —— 此数值将根据驻军模板的硬度进行削减

GARRISON_EQUIPMENT_LOST_BY_ATTACK = 0.02, 	— Ratio of equipment lost by garrison at each attack on garrison (this number will be reduced by the hardness of garrison template)

GARRISON_EQUIPMENT_LOST_BY_ATTACK = 0.02, — 每次攻击驻军时驻军装备损失的比例（该数值将根据驻军模板的硬度降低）

MAXIMUM_GARRISON_HARDNESS_WHEN_ATTACKED = 0.90, — Cap to be sure that garrison will suffer lost in attack, even with a almost 100% hardness

MAXIMUM_GARRISON_HARDNESS_WHEN_ATTACKED = 0.90, — 设定上限以确保驻军在被攻击时即使硬度接近100%也会遭受损失



FOREIGN_MANPOWER_MIN_THRESHOLD = 5000,		 — The minimum number of Manpower that AI will accept to give at once, in order to avoid many weird little transfer.

FOREIGN_MANPOWER_MIN_THRESHOLD = 5000, —— AI愿意一次性提供的人力资源最低阈值，以避免频繁出现琐碎的小规模转让。

MANPOWER_BUFFER_TO_NOT_GIVE_MINOR = 0.3, — To determine how much AI can give as foreign manpower, we calculate how much manpower we use, and add this buffer. The result is what we want to keep, for minor countries. So higher this number is, lower we will give Manpower.

MANPOWER_BUFFER_TO_NOT_GIVE_MINOR = 0.3, —— 用于确定AI可提供多少外国人力时，我们将计算自身使用的人力，并加上此缓冲值。结果即为希望为小国保留的人力值。因此该数值越高，我们将提供的人力越少。

MANPOWER_BUFFER_TO_NOT_GIVE_MAJOR = 0.6, — To determine how much AI can give as foreign manpower, we calculate how much manpower we use, and add this buffer. The result is what we want to keep, for major countries. So higher this number is, lower we will give Manpower.

MANPOWER_BUFFER_TO_NOT_GIVE_MAJOR = 0.6, —— 用于决定AI可提供多少外国人力时，我们计算自身人力消耗量并加上此缓冲值。所得结果即我们希望为大国保留的人力值。因此该数值越大，我们提供的人力将越少。

MAX_GARRISON_RATIO_WE_AGREE_TO_SUPPORT = 3.0,	— The part of the manpower needed by the foreign garrison, that AI will agree to support with our manpower. If negative number, AI will not take into consideration the need, and just calculate how much they can give.

MAX_GARRISON_RATIO_WE_AGREE_TO_SUPPORT = 3.0, — 外国驻军所需人力中，AI同意用我方人力支援的比例。若为负数，AI将不考虑需求，仅计算其可提供量。

FOREIGN_MANPOWER_AI_COOLDOWN_DAYS = 30,		 — Number of days after an AI give us manpower before the AI accept to give more.

FOREIGN_MANPOWER_AI_COOLDOWN_DAYS = 30, — AI在向我们提供人力后，需等待多少天才会同意再次提供更多人力。



INITIAL_HISTORY_RESISTANCE = 0.0,			— resistance value for initial colony states

INITIAL_HISTORY_RESISTANCE = 0.0, —— 初始殖民地状态的抵抗值

INITIAL_HISTORY_COMPLIANCE = 70.0,			— compliance value for initial colony states

INITIAL_HISTORY_COMPLIANCE = 70.0, —— 初始殖民地状态的合规值

INITIAL_GARRISON_STRENGTH = 1,				— garrison value for initial colony states

INITIAL_GARRISON_STRENGTH = 1, — 初始殖民地状态的驻军值



STATE_COMPLIANCE_DECAY_FOR_LOST_STATES = 0.05, — daily compliance decay for the states you lost control of

STATE_COMPLIANCE_DECAY_FOR_LOST_STATES = 0.05, —— 每日对失去控制地区的服从度衰减



},



NProduction = {

N产量 = {

MAX_EQUIPMENT_RESOURCES_NEED = 3, 	— Max number of different strategic resources an equipment can be dependent on.

MAX_EQUIPMENT_RESOURCES_NEED = 3, — 一件装备最多可依赖的不同战略资源数量。

MAX_CIV_FACTORIES_PER_LINE = 15,	— Max number of factories that can be assigned a single production line.

MAX_CIV_FACTORIES_PER_LINE = 15, —— 单条生产线可分配的最大工厂数量。

DEFAULT_MAX_NAV_FACTORIES_PER_LINE = 10,

DEFAULT_MAX_NAV_FACTORIES_PER_LINE = 10,

FLOATING_HARBOR_MAX_NAV_FACTORIES_PER_LINE = 5,

FLOATING_HARBOR_MAX_NAV_FACTORIES_PER_LINE = 5,

CONVOY_MAX_NAV_FACTORIES_PER_LINE = 15,

CONVOY_MAX_NAV_FACTORIES_PER_LINE = 15,

CAPITAL_SHIP_MAX_NAV_FACTORIES_PER_LINE = 5,

CAPITAL_SHIP_MAX_NAV_FACTORIES_PER_LINE = 5,

MAX_MIL_FACTORIES_PER_LINE = 150,

MAX_MIL_FACTORIES_PER_LINE = 150,

MAX_MIL_FACTORIES_VISIBLE_FOR_MIL_EQUIPMENT_LINE = 15,

MAX_MIL_FACTORIES_VISIBLE_FOR_MIL_EQUIPMENT_LINE = 15,

RAILWAY_GUN_MAX_MIL_FACTORIES_PER_LINE = 5,

铁道炮最大每生产线军事工厂数 = 5,

RAILWAY_GUN_REPAIR_SPEED = 8.0,			— Railway gun strength repair speed per factory

铁路炮强度修复速度每工厂 = 8.0,

EFFICIENCY_LOSS_PER_UNUSED_DAY = 1,		— Daily loss of efficiency for unused factory slots ( efficiency is tracked per factory slot in the production line )

EFFICIENCY_LOSS_PER_UNUSED_DAY = 1, —— 生产线中每个未使用的工厂槽位每日效率损耗（效率按生产线上每个工厂槽位单独追踪）

RESOURCE_PENALTY_WARNING_CRITICAL_RATIO = 0.8, — Switch to red progress bar if penalty is over threshold

RESOURCE_PENALTY_WARNING_CRITICAL_RATIO = 0.8, — 当惩罚超过阈值时切换为红色进度条

BASE_FACTORY_SPEED = 5, 				— Base factory speed multiplier (how much hoi3 style IC each factory gives).

BASE_FACTORY_SPEED = 5, — 基础工厂速度倍率（表示每个工厂提供的HOI3风格IC值）。

BASE_FACTORY_SPEED_MIL = 4.50, 				— Base factory speed multiplier (how much hoi3 style IC each factory gives).

BASE_FACTORY_SPEED_MIL = 4.50，——基础工厂速度乘数（每个工厂提供的HOI3风格工业产值量）。

BASE_FACTORY_SPEED_NAV = 2.5, 				— Base factory speed multiplier (how much hoi3 style IC each factory gives).

BASE_FACTORY_SPEED_NAV = 2.5, — 基础工厂速度乘数（每个工厂提供的hoi3风格IC量）。

BASE_FACTORY_START_EFFICIENCY_FACTOR = 10,	— Base start efficiency for factories expressed in %.

BASE_FACTORY_START_EFFICIENCY_FACTOR = 10, — 工厂基础起始效率以百分比表示。

BASE_FACTORY_MAX_EFFICIENCY_FACTOR = 50,	— Base max efficiency for factories expressed in %.

BASE_FACTORY_MAX_EFFICIENCY_FACTOR = 50, —— 工厂基础最大效率，以百分比表示。

BASE_FACTORY_EFFICIENCY_GAIN = 1,		— Base efficiency factor.

BASE_FACTORY_EFFICIENCY_GAIN = 1, — 基础效率系数。

BASE_FACTORY_EFFICIENCY_BALANCE_FACTOR = 0.1, 			— Factory efficiency balancing factor

BASE_FACTORY_EFFICIENCY_BALANCE_FACTOR = 0.1, —— 工厂效率平衡因子

BASE_FACTORY_EFFICIENCY_VARIANT_CHANGE_FACTOR = 90,		— Base factor for changing production variants in %.

BASE_FACTORY_EFFICIENCY_VARIANT_CHANGE_FACTOR = 90, — 生产变种切换的基础效率百分比系数

BASE_FACTORY_EFFICIENCY_PARENT_CHANGE_FACTOR = 30,		— Base factor for changing production parent<->children in %.

BASE_FACTORY_EFFICIENCY_PARENT_CHANGE_FACTOR = 30, — 生产父级<->子级间转换的基础百分比系数

BASE_FACTORY_EFFICIENCY_FAMILY_CHANGE_FACTOR = 70,		— Base factor for changing production with same family in %.

BASE_FACTORY_EFFICIENCY_FAMILY_CHANGE_FACTOR = 70, — 同系列产品变更生产的基础效率百分比因子。

BASE_FACTORY_EFFICIENCY_ARCHETYPE_CHANGE_FACTOR = 20, 	— Base factor for changing production with same archetype in %.

BASE_FACTORY_EFFICIENCY_ARCHETYPE_CHANGE_FACTOR = 20, — 同原型生产变更的基础百分比因子

EQUIPMENT_BASE_LEND_LEASE_WEIGHT = 1.0, — Base equipment lend lease weight

EQUIPMENT_BASE_LEND_LEASE_WEIGHT = 1.0, —— 基础装备租借权重

EQUIPMENT_LEND_LEASE_WEIGHT_FACTOR = 0.01, — Base equipment lend lease factor

EQUIPMENT_LEND_LEASE_WEIGHT_FACTOR = 0.01, — 基础装备租借因子

LEND_LEASE_DELIVERY_TOTAL_DAYS = 30, — Nr of days between lend lease deliveries

LEND_LEASE_DELIVERY_TOTAL_DAYS = 30, —— 租借物资交付间隔天数

ANNEX_STOCKPILES_RATIO = 1.0,		— How much stockpiled equipment will be transferred on annexation

ANNEX_STOCKPILES_RATIO = 1.0, — 吞并时将转移多少库存装备

ANNEX_FIELD_EQUIPMENT_RATIO = 0.25,	— How much equipment from deployed divisions will be transferred on annexation

ANNEX_FIELD_EQUIPMENT_RATIO = 0.25, — 吞并时从部署的师团中转移多少装备

ANNEX_FUEL_RATIO = 0.25,	— How much fuel will be transferred on annexation

ANNEX_FUEL_RATIO = 0.25, —— 吞并时将转移多少燃料

ANNEX_CONVOYS_RATIO = 0.15,			— How many convoys will be transferred on annexation

ANNEX_CONVOYS_RATIO = 0.15, — 吞并时将转移多少运输船队

MIN_POSSIBLE_TRAINING_MANPOWER = 100000,	— How many deployment lines minimum can be training

最小可能的训练人力 = 10000，——至少可以训练多少条部署线

MIN_FIELD_TO_TRAINING_MANPOWER_RATIO = 0.75,	— Ratio which % of army in field can be trained

MIN_FIELD_TO_TRAINING_MANPOWER_RATIO = 0.75，—— 军队中能接受训练的野战部队比例

CAPITULATE_STOCKPILES_RATIO = 0.5, — How much equipment from deployed divisions will be transferred on capitulation

CAPITULATE_STOCKPILES_RATIO = 0.5, —— 投降时有多少已部署师团的装备会被转移

CAPITULATE_FUEL_RATIO = 0.5, — How much fuel will be transferred on capitulation

投降燃料比例 = 0.5，——投降时将转移多少燃料

INFRA_MAX_CONSTRUCTION_COST_EFFECT = 1, 		— Building in a state with higher infrastructure will reduce the cost of shared buildings.

INFRA_MAX_CONSTRUCTION_COST_EFFECT = 1, — 在基础设施更完善的州建设将降低共享建筑的成本。

PRODUCTION_RESOURCE_LACK_PENALTY = -0.05,			— Penalty decrease while lack of resource per factory

PRODUCTION_RESOURCE_LACK_PENALTY = -0.05, —— 每座工厂资源不足时的惩罚递减值

CIC_BANK_SPEED_BOOST_FACTOR = 0.25, — The CIC bank can boost production speed with this factor (0.5 means 50 %)

CIC_BANK_SPEED_BOOST_FACTOR = 0.25, —— CIC银行可通过此系数提升生产速度（0.5表示50%）

MIN_LICENSE_ACTIVE_DAYS = 30,						— Min days for license to be active

MIN_LICENSE_ACTIVE_DAYS = 30, — 许可证最短有效天数

BASE_LICENSE_IC_COST = 1,							— Base IC cost for lended license

BASE_LICENSE_IC_COST = 1, —— 出借许可证的基础IC成本

LICENSE_IC_COST_YEAR_INCREASE = 1,					— IC cost equipment for every year of equipment after 1936

LICENSE_IC_COST_YEAR_INCREASE = 1, — 1936年后每增加一年装备的IC成本

LICENSE_EQUIPMENT_BASE_SPEED = -0.25,				— base MIC speed modifier for licensed equipment

LICENSE_EQUIPMENT_BASE_SPEED = -0.25, — 授权装备的基础MIC速度修正值

LICENSE_EQUIPMENT_TECH_SPEED_PER_YEAR = -0.05,		— MIC speed modifier for licensed equipment for each year of difference between actual and latest equipment

LICENSE_EQUIPMENT_TECH_SPEED_PER_YEAR = -0.05, — 许可设备与实际最新设备年份差异导致的MIC速度修正值

LICENSE_EQUIPMENT_TECH_SPEED_MAX_YEARS = 4,			— Maximum years for MIC speed modifier

LICENSE_EQUIPMENT_TECH_SPEED_MAX_YEARS = 4, — MIC速度调整器的最大年限

LICENSE_EQUIPMENT_SPEED_NOT_FACTION = -0.10,		— MIC speed modifier for licensed equipment for not being in faction

LICENSE_EQUIPMENT_SPEED_NOT_FACTION = -0.10, — 非阵营成员使用授权装备时的移动速度修正值

LICENSE_EQUIPMENT_UPGRADE_XP_FACTOR = 2.0,			— XP cost for upgrading licensed equipment

LICENSE_EQUIPMENT_UPGRADE_XP_FACTOR = 2.0, —— 授权装备升级的经验值消耗系数

LICENSE_EQUIPMENT_SPEED_NO_LICENSE = -0.50,			— Penalty for producing non licensed equipment

LICENSE_EQUIPMENT_SPEED_NO_LICENSE = -0.50, — 生产无许可证设备的惩罚

CONVERSION_SPEED_BONUS = 0,							— Modifier to the production speed when converting equipment

CONVERSION_SPEED_BONUS = 0, — 转换设备时的生产速度修正值

EQUIPMENT_MODULE_ADD_XP_COST = 5.0,					— XP cost for adding a new equipment module in an empty slot when creating an equipment variant.

EQUIPMENT_MODULE_ADD_XP_COST = 5.0, — 创建装备变体时在空槽位添加新装备模块所需的经验值消耗。

EQUIPMENT_MODULE_REPLACE_XP_COST = 6.0,				— XP cost for replacing one equipment module with an unrelated module when creating an equipment variant.

EQUIPMENT_MODULE_REPLACE_XP_COST = 6.0, —— 在创建装备变体时，用不相关模块替换一个装备模块所需的经验值消耗。

EQUIPMENT_MODULE_CONVERT_XP_COST = 3.0,				— XP cost for converting one equipment module to a related module when creating an equipment variant.

EQUIPMENT_MODULE_CONVERT_XP_COST = 3.0, — 在创建装备变体时，将一个装备模块转换为相关模块所需的经验值消耗。

EQUIPMENT_MODULE_REMOVE_XP_COST = 1.0,				— XP cost for removing an equipment module and leaving the slot empty when creating an equipment variant.

EQUIPMENT_MODULE_REMOVE_XP_COST = 1.0, — 创建装备变体时移除装备模块并保留空槽所需的经验值消耗。

BASE_NAVAL_EQUIPMENT_CONVERSION_IC_COST_FACTOR = 0.2, — Fraction of the hull industry cost which is always included in the refitting cost.

BASE_NAVAL_EQUIPMENT_CONVERSION_IC_COST_FACTOR = 0.2, —— 船体工业成本中始终计入改装成本的比例。

BASE_LAND_EQUIPMENT_CONVERSION_IC_COST_FACTOR = 0.9, — Fraction of the chassis industry cost which is always included in the conversion cost.

BASE_LAND_EQUIPMENT_CONVERSION_IC_COST_FACTOR = 0.9, — 底盘工业成本中始终计入转换成本的比例。

MIN_NAVAL_EQUIPMENT_CONVERSION_RESOURCE_COST_FACTOR = 0.2,	— Minimum fraction of a naval equipment’s strategic resource cost that any conversion will cost.

MIN_NAVAL_EQUIPMENT_CONVERSION_RESOURCE_COST_FACTOR = 0.2, — 海军装备转换所需战略资源成本的最低比例系数。

MIN_LAND_EQUIPMENT_CONVERSION_RESOURCE_COST_FACTOR = 0,		— Minimum fraction of a land equipment’s strategic resource cost that any conversion will cost.

MIN_LAND_EQUIPMENT_CONVERSION_RESOURCE_COST_FACTOR = 0, — 任何转换所消耗的陆军装备战略资源成本的最小比例。

SHIP_REFIT_MAX_PROGRESS_TO_CANCEL = 0.2,			— Maximum refitting progress % that we still allow to cancel wihtout having to scuttle the ship.

SHIP_REFIT_MAX_PROGRESS_TO_CANCEL = 0.2，——允许在不击沉船只的情况下取消改装的最大进度百分比。

SHIP_REFIT_DAMAGE_TO_PROGRESS_FACTOR = 0.5,			— When a ship is being damaged (for example port strike) while refitting, the damage is transferred to the production line progress instead. This variable is used to balance it.

SHIP_REFIT_DAMAGE_TO_PROGRESS_FACTOR = 0.5, —— 当舰船在改装期间受到损伤（例如港口空袭）时，损伤会转化为生产线进度损失。此变量用于平衡该机制。

MINIMUM_NUMBER_OF_FACTORIES_TAKEN_BY_CONSUMER_GOODS_VALUE = 1,		— The minimum number of factories we have to put on consumer goods, by value.

MINIMUM_NUMBER_OF_FACTORIES_TAKEN_BY_CONSUMER_GOODS_VALUE = 1, —— 我们必须根据价值分配到消费品上的工厂最小数量。

MINIMUM_NUMBER_OF_FACTORIES_TAKEN_BY_CONSUMER_GOODS_PERCENT = 0.1,	— The minimum number of factories we have to put on consumer goods, in percent.

MINIMUM_NUMBER_OF_FACTORIES_TAKEN_BY_CONSUMER_GOODS_PERCENT = 0.1， — 我们必须投入消费品生产的最小工厂数量占比，以百分比计。

INITIAL_ALLOWED_FACTORY_RATIO_FOR_REPAIRS = 1.0,					— max % of factories allowed on autorepairs

INITIAL_ALLOWED_FACTORY_RATIO_FOR_REPAIRS = 1.0, — 自动修复允许的最大工厂百分比

},



NMarket = {

N市场 = {

PURCHASE_CONTRACT_DELIVERY_TOTAL_DAYS = 30, 	— Number of days between purchase contract deliveries

PURCHASE_CONTRACT_DELIVERY_TOTAL_DAYS = 30, —— 采购合同交付之间的天数

IC_TO_CIC_FACTOR = 2.0, 						— The factor for mapping IC cost to CIC cost. Should be a positive number.

IC_TO_CIC_FACTOR = 2.0, — 用于将IC成本映射到CIC成本的系数。应为正数。

MAX_CIV_FACTORIES_PER_CONTRACT = 15,							— Max number of factories that can be assigned for paying single contract.

MAX_CIV_FACTORIES_PER_CONTRACT = 15, — 单个合同可分配用于支付的民用工厂最大数量。

LOW_PRICE_LEVEL_FACTOR = 0.75, 				— The factor of base equipment price for low price level. Should be in range (0,1]

LOW_PRICE_LEVEL_FACTOR = 0.75, — 基础装备价格的低价位系数，取值范围应为(0,1]

HIGH_PRICE_LEVEL_FACTOR = 1.25, 				— The factor of base equipment price for high price level. Should be more than 1.

高价等级系数 = 1.25, —— 基础装备价格的高价等级乘数，该数值应大于1。

MIN_DELIVERY_LIMIT_WARNING_UI = 0.8,							— The delivery percentage under we want to let player know the contract is inefficient. [0,1]

MIN_DELIVERY_LIMIT_WARNING_UI = 0.8, —— 当交付百分比低于此值时，将提示玩家合约效率低下。[0,1]

PURCHASE_CONTRACT_SUBSIDY_BONUS_SPEED_FACTOR = 1.0,				— The factor of speed bonus from subsidies

PURCHASE_CONTRACT_SUBSIDY_BONUS_SPEED_FACTOR = 1.0, — 补贴带来的速度奖励系数

CONVOY_WEIGHT_OVERRIDE = 0.0,									— Overrides the default lend leas weight of convoys for international market

CONVOY_WEIGHT_OVERRIDE = 0.0, — 覆盖国际市场中护航船队的默认租借权重

REQUEST_AUTOMATION_AUTO_ACCEPT_MARKET_ACCESS_DEFAULT = true, 	— Whether by default should accept market access requests from other countries.

REQUEST_AUTOMATION_AUTO_ACCEPT_MARKET_ACCESS_DEFAULT = true, — 是否默认接受来自其他国家的市场准入请求。

REQUEST_AUTOMATION_AUTO_SEND_MARKET_ACCESS_DEFAULT = true,		— Whether by default should send market access requests to other countries.

REQUEST_AUTOMATION_AUTO_SEND_MARKET_ACCESS_DEFAULT = true, —— 默认情况下是否应向其他国家发送市场准入请求。

REQUEST_AUTOMATION_AUTO_ACCEPT_PURCHASE_DEFAULT = false,		— Whether by default should accept purchase requests from other countries.

REQUEST_AUTOMATION_AUTO_ACCEPT_PURCHASE_DEFAULT = false, — 是否默认接受来自其他国家的购买请求。

CONTRACT_ESTIMATE_AVERAGE_CONVOY_COUNT_ALPHA = 0.5,				— How strong effect should have the daily convoy count on the average (1.0 means it will use only the new number as average)

CONTRACT_ESTIMATE_AVERAGE_CONVOY_COUNT_ALPHA = 0.5, — 每日护航数量对平均值的影响强度应有多大（1.0 表示将仅使用新数值作为平均值）

CONTRACT_ESTIMATE_AVERAGE_DAILY_PRODUCTION_ALPHA = 0.5, 		— How strong effect should have the daily production on the average (1.0 means it will use only the new number as average)

CONTRACT_ESTIMATE_AVERAGE_DAILY_PRODUCTION_ALPHA = 0.5, — 日产量对平均值的影响强度（1.0表示仅使用最新数值作为平均值）

CONTRACT_ESTIMATE_AVERAGE_CONVOY_COUNT_SNAP_LIMIT = 0.3,		— If the difference between current and estimated available convoy count is smaller then this value, we will use the current value for calculations.

CONTRACT_ESTIMATE_AVERAGE_CONVOY_COUNT_SNAP_LIMIT = 0.3, — 若当前可用护航船队数量与估算值的差异小于此阈值，则采用当前值进行计算。

CONTRACT_ESTIMATE_AVERAGE_DAILY_PRODUCTION_SNAP_LIMIT = 1.5,	— If the difference between current and estimated daily production is smaller then this value, we will use the current value for calculations.

CONTRACT_ESTIMATE_AVERAGE_DAILY_PRODUCTION_SNAP_LIMIT = 1.5, —— 若当前日产量与预估日产量的差值小于此数值，则在计算中采用当前值。

CONTRACT_ESTIMATE_AVERAGE_CONVOY_SUNK_MULTIPLIER_ALPHA = 0.5,	— How strong effect should have the daily sunk efficiency on the average (1.0 means it will use only the new number as average)

CONTRACT_ESTIMATE_AVERAGE_CONVOY_SUNK_MULTIPLIER_ALPHA = 0.5, —— 每日击沉效率对平均值的影响强度应有多大（1.0表示将仅使用新数值作为平均值）

CONTRACT_ESTIMATE_AVERAGE_CONVOY_SUNK_MULTIPLIER_SNAP_LIMIT = 0.05, — If the difference between current and estimated sunk efficiency convoy count is smaller then this value, we will use the current value for calculations.

CONTRACT_ESTIMATE_AVERAGE_CONVOY_SUNK_MULTIPLIER_SNAP_LIMIT = 0.05, —— 若当前与预估的护航船队沉没效率计数值差异小于此值，则在计算中将直接采用当前数值。

WARNING_CONVOYS_SUNK_MAX_DAYS = 30, — The contracts will show sunk convoy message if there was sunk convoy in this amount of days

WARNING_CONVOYS_SUNK_MAX_DAYS = 30, —— 如果在过去这些天内曾有护航船队被击沉，合约将显示护航船队沉没的消息



},



NTechnology = {

技术 = {

MAX_SUBTECHS = 3,						— Max number of sub technologies a technology can have.

MAX_SUBTECHS = 3, —— 一项技术最多可拥有的子技术数量上限。

BASE_RESEARCH_POINTS_SAVED = 30.0,		— Base amount of research points a country can save per slot.

BASE_RESEARCH_POINTS_SAVED = 30.0, — 每个研究槽位国家可储存的基础科研点数。

BASE_YEAR_AHEAD_PENALTY_FACTOR = 2,		— Base year ahead penalty

BASE_YEAR_AHEAD_PENALTY_FACTOR = 2, — 基准年提前惩罚因子

BASE_TECH_COST = 110,					— Base cost for a tech. multiplied with tech cost and ahead of time penalties

BASE_TECH_COST = 110，——科技的基础成本，乘以科技花费和超前时间惩罚系数

MAX_TECH_SHARING_BONUS = 0.5, 			— Max technology sharing bonus that can be applied instantly

MAX_TECH_SHARING_BONUS = 0.5, — 可即时应用的最大技术共享加成

LICENSE_PRODUCTION_TECH_BONUS = 0.2,	— License production tech bonus

LICENSE_PRODUCTION_TECH_BONUS = 0.2, —— 许可证生产技术加成



DEFAULT_XP_UNLOCK_RESEARCH_COST = 0,			— default xp cost of a research to unlock directly

DEFAULT_XP_UNLOCK_RESEARCH_COST = 0, — 直接解锁一项研究所需的默认经验值消耗

DEFAULT_XP_BOOST_RESEARCH_COST = 0,				— default xp cost of a research to speed up the process

DEFAULT_XP_BOOST_RESEARCH_COST = 0, —— 默认用于加速研究过程的经验值消耗

DEFAULT_XP_BOOST_RESEARCH_BONUS = 0,			— default boost research bonus gained when xp is used to research an item

DEFAULT_XP_BOOST_RESEARCH_BONUS = 0, — 使用经验值研究物品时获得的默认研究加成增益

MIN_RESEARCH_SPEED = 0.1,						— research speed can’t go below this value

MIN_RESEARCH_SPEED = 0.1, — 研究速度不能低于此值



USE_BONUS_REGRET_TIMER = 3,						— Number of days the player has to regret using a limited tech bonus

USE_BONUS_REGRET_TIMER = 3, — 玩家使用限时技术加成后可以后悔的天数

},



NPolitics = {

政治 = {

BASE_LEADER_TRAITS = 3,				— Base amount of leader traits.

BASE_LEADER_TRAITS = 3, — 领导特质的基础数量。

MAX_RANDOM_LEADERS = 1,				— Maximum amount random leader to have per party.

MAX_RANDOM_LEADERS = 1, —— 每个党派可拥有的随机领袖最大数量。

BASE_POLITICAL_POWER_INCREASE = 2,	— Weekly increase of PP.

BASE_POLITICAL_POWER_INCREASE = 2, —— 每周政治点数（PP）的增长量。

ARMY_LEADER_COST = 5,					— command power cost for recruiting new leaders, ‘this value’ * number_of_existing_leaders_of_type

ARMY_LEADER_COST = 5, — 招募新指挥官时的指挥点数消耗，为‘此数值’乘以该类型现有指挥官数量

NAVY_LEADER_COST = 5,					— command power cost for recruiting new leaders, ‘this value’ * number_of_existing_leaders_of_type

NAVY_LEADER_COST = 5, ——招募新指挥官所需的指挥点数消耗，为‘此数值’乘以该类型现有指挥官的数量。

ARMY_LEADER_MAX_COST = 80,				— max cost BEFORE modifiers

ARMY_LEADER_MAX_COST = 80, — 最大成本（计算修正前）

NAVY_LEADER_MAX_COST = 80,				— max cost BEFORE modifiers

NAVY_LEADER_MAX_COST = 80, — 修正前的最高成本

LEADER_TRAITS_XP_SHOW = 0.05,			— Amount of XP a trait needs to be shown in tooltips of a leader.

LEADER_TRAITS_XP_SHOW = 0.05, — 特质需要在领袖的提示信息中显示所需的经验值数量。

REVOLTER_PARTY_POPULARITY = 0.4,		— Revolter party loses 80% popularity when the civil war breaks out

REVOLTER_PARTY_POPULARITY = 0.4, — 内战爆发时叛乱党派将失去80%的支持率

MIN_OVERTHROWN_GOVERNMENT_SUPPORT_RATIO = 0.4, — Min possible support for new government after puppeting the government

MIN_OVERTHROWN_GOVERNMENT_SUPPORT_RATIO = 0.4, —— 傀儡政府成立后新政府支持率的最低可能值

NUM_OCCUPATION_POLICIES = 4,		— Number of potential occupation policies

NUM_OCCUPATION_POLICIES = 4, — 潜在占领政策数量

DEFAULT_OCCUPATION_POLICY = 1,		— Defaullt value for occupation policy

DEFAULT_OCCUPATION_POLICY = 1, — 占领政策的默认值

INSTANT_WIN_REVOLTER_POPULARITY_RATIO = 0.4, — Min party popularity for instant win in one province state

INSTANT_WIN_REVOLTER_POPULARITY_RATIO = 0.4, — 单省份状态下即时胜利所需的最低政党支持率

INSTANT_WIN_POPULARITY_WIN = 50, — New party popularity

INSTANT_WIN_POPULARITY_WIN = 50, —— 新党派支持度

},



NBuildings = {

建筑数量 = {

ANTI_AIR_SUPERIORITY_MULT = 5.0,	— How much air superiority reduction to the enemy does our AA guns? Normally each building level = -1 reduction. With this multiplier.

ANTI_AIR_SUPERIORITY_MULT = 5.0, ——我们的防空炮对敌方空优的削弱程度如何？通常每级建筑等级= -1削弱。乘以该系数后。

SAM_MISSION_SUPERIORITY = 5.0, — How much air superiority each SAM mission gives per rocket wing performing SAM missions.

SAM_MISSION_SUPERIORITY = 5.0, — 每支执行防空导弹任务的火箭联队为每次防空任务提供的制空权优势值。

MAX_BUILDING_LEVELS = 15,			— Max levels a building can have.

MAX_BUILDING_LEVELS = 15, —— 建筑物的最大等级数。

AIRBASE_CAPACITY_MULT = 200,		— Each level of airbase building multiplied by this, gives capacity (max operational value). Value is int. 1 for each airplane.

AIRBASE_CAPACITY_MULT = 200, — 机场建筑的每个等级乘以此数值，即为容量（最大运作值）。该值为整数，每架飞机占1点容量。

ROCKETSITE_CAPACITY_MULT = 100,		— Each level of rocketsite building multiplied by this, gives capacity (max operational value). Value is int. 1 for each rocket.

ROCKETSITE_CAPACITY_MULT = 100, — 火箭基地建筑的每一等级乘以该数值，即为容量（最大运作值）。数值为整数。每枚火箭对应值为1。

NAVALBASE_REPAIR_MULT = 0.05,		— Each level of navalbase building repairs X strength and can repair as many ships as its level

NAVALBASE_REPAIR_MULT = 0.05，——海军基地建筑的每一级可修复X点强度，且能修复的舰船数量与其等级相同

RADAR_RANGE_BASE = 20,				— Radar range base, first level radar will be this + min, best radar will be this + max

RADAR_RANGE_BASE = 20, —— 雷达基础范围，一级雷达将在此基础上增加最小值，顶级雷达将在此基础上增加最大值

RADAR_RANGE_MIN = 20,				— Radar range (from state center to province center) in measure of map pixels. Exluding techs.

RADAR_RANGE_MIN = 20， ——雷达范围（从州中心到省份中心）以地图像素为单位测量，不包括科技。

RADAR_RANGE_MAX = 200,				— Range is interpolated between building levels 1-15.

RADAR_RANGE_MAX = 200, —— 探测范围在建筑等级1至15之间进行插值计算。

RADAR_INTEL_EFFECT = 40,			— Province covered by radar increases intel by 10 (where 255 is max). Province may be covered by multiple radars, then the value sums up.

RADAR_INTEL_EFFECT = 40, —— 被雷达覆盖的省份情报值增加10（最大值为255）。同一省份可被多个雷达覆盖，此时数值将累计叠加。

SABOTAGE_FACTORY_DAMAGE = 100.0,		— How much damage takes a factory building in sabotage when state is occupied. Damage is mult by (1 + resistance strength), i.e. up to 2 x base value.

SABOTAGE_FACTORY_DAMAGE = 100.0, — 当国家被占领时，工厂建筑在破坏行动中承受的伤害值。伤害乘以（1 + 抵抗强度）系数，即最高可达基础值的2倍。

BASE_FACTORY_REPAIR = 1.0,			— Default repair rate in percentage before factories are taken into account (1.0 equals 1%).

BASE_FACTORY_REPAIR = 1.0, — 在计入工厂影响前的默认修复速率百分比（1.0等于1%）。

BASE_FACTORY_REPAIR_FACTOR = 2.0,	— Factory speed modifier when repairing.

BASE_FACTORY_REPAIR_FACTOR = 2.0, —— 工厂进行修理时的速度修正系数。

SUPPLY_PORT_LEVEL_THROUGHPUT = 3, — supply throughput per level of naval base

SUPPLY_PORT_LEVEL_THROUGHPUT = 3, —— 海军基地每等级的补给吞吐量

MAX_SHARED_SLOTS = 25,				— Max slots shared by factories

MAX_SHARED_SLOTS = 25，——工厂间共享的最大槽位数

OWNER_CHANGE_EXTRA_SHARED_SLOTS_FACTOR = 1, —Scale factor of extra shared slots when state owner change.

所有者变更时额外共享槽位的比例因子 = 1,

DESTRUCTION_COOLDOWN_IN_WAR = 30,	— Number of days cooldown between removal of buildings in war times

DESTRUCTION_COOLDOWN_IN_WAR = 30, — 战争期间建筑物拆除的冷却天数



INFRASTRUCTURE_RESOURCE_BONUS = 0.2, — multiplicative resource bonus for each level of (non damaged) infrastructure

INFRASTRUCTURE_RESOURCE_BONUS = 0.2，——每级（未受损）基础设施带来的资源乘数加成

SUPPLY_ROUTE_RESOURCE_BONUS = 0.2, — multiplicative resource bonus for having a railway/naval connection to the capital

SUPPLY_ROUTE_RESOURCE_BONUS = 0.2, — 与首都拥有铁路/海运连接时的资源倍率加成

INFRASTRUCTURE_MUD_EFFECT = -0.8, — multiplicative effect on mud growth for max infra

基础设施_泥浆效应 = -0.8, — 对最大基础设施下泥浆增长的乘数效应

},



NDeployment = {

N部署 = {

BASE_DEPLOYMENT_TRAINING = 1,		— Base training done each day during deployment.

BASE_DEPLOYMENT_TRAINING = 1, —— 部署期间每日完成的基础训练。

},



NMilitary = {

军事 = {

COMBAT_VALUE_ORG_IMPORTANCE = 1,		— Multiplier on TotalOrganisation when determining the combat value of a division

COMBAT_VALUE_ORG_IMPORTANCE = 1, — 在决定一个师的战斗价值时，对TotalOrganisation（总组织度）的乘数

COMBAT_VALUE_STR_IMPORTANCE = 1,		— Multiplier on TotalStrength when determining the combat value of a division

COMBAT_VALUE_STR_IMPORTANCE = 1, — 在确定师级单位战斗价值时，对总强度的乘数



SOFT_ATTACK_TARGETING_FACTOR = 1.0,		— How much we care about potential soft attacks when evaluating priority combat target

SOFT_ATTACK_TARGETING_FACTOR = 1.0, —— 评估优先战斗目标时对潜在软攻击的重视程度

HARD_ATTACK_TARGETING_FACTOR = 1.2,		— How much we care about potential hard attacks when evaluating priority combat target

HARD_ATTACK_TARGETING_FACTOR = 1.2, —— 在评估优先战斗目标时，我们对潜在硬攻击的重视程度



CASUALTIES_WS_P_PENALTY_DIVISOR = 200,							—Divisor for casualties WS penalty

CASUALTIES_WS_P_PENALTY_DIVISOR = 200, —伤亡WS惩罚的除数

CASUALTIES_WS_A_PENALTY_DIVISOR = 600,							—Divisor for casualties WS penalty

CASUALTIES_WS_A_PENALTY_DIVISOR = 600, ——伤亡WS惩罚的除数



PIERCING_THRESHOLDS = {					— Our piercing / their armor must be this value to deal damage fraction equal to the index in the array below [higher number = higher penetration]. If armor is 0, 1.00 will be returned.

穿透阈值 = { — 我们的穿透力 / 敌方护甲必须达到此值才能造成与下方数组索引相对应的伤害比例[数值越高 = 穿透力越强]。若护甲为0，则返回1.00。

1.00,

0.75,





0.50,


0.00, —there isn’t much point setting this higher than 0

0.00，——设置高于此值并无太大意义

},

PIERCING_THRESHOLD_DAMAGE_VALUES = {	— 0 armor will always receive maximum damage (so add overmatching at your own peril). the system expects at least 2 values, with no upper limit.

PIERCING_THRESHOLD_DAMAGE_VALUES = { — 0护甲将始终承受最大伤害（因此自行承担过度匹配的风险）。系统要求至少提供2个数值，无上限。

1.00,

0.80,

0.65,





0.50,


},



DIVISIONAL_COMMANDER_TRAIT_XP_REQUIREMENT = 400.0,	—Get a trait if any valid options & xp gained >= this

DIVISIONAL_COMMANDER_TRAIT_XP_REQUIREMENT = 400.0, —当满足任意有效条件且获得经验值≥此数值时解锁特质

NUM_DAYS_FOR_OPERATION_ENTRY = 60,					—Number of days that a unit must have been on a particular active order instance to receive a history entry.

NUM_DAYS_FOR_OPERATION_ENTRY = 60, ——单位必须在特定活动订单实例上持续存在的天数，才能获得历史记录条目。

MAX_LEADERS_TO_SHOW = 50,							—Max officers to show in field officers list, sorted by field EXP. Divisions with awardable entries will potentially supercede this limit

MAX_LEADERS_TO_SHOW = 50, —在野战军官列表中显示的最大军官数量（按野战经验排序）。若存在可授奖单位，该限制可能被突破。

BASE_FEMALE_DIVISIONAL_COMMANDER_CHANCE = 0,		—Chance to receive a female divisonal commander. This is set to zero in the base game, as we do not have generic female portraits for many graphical culture groups.

BASE_FEMALE_DIVISIONAL_COMMANDER_CHANCE = 0, —获得女性师级指挥官的概率。在基础游戏中设置为零，因为我们没有为许多图形文化群体准备通用的女性肖像。

—this expects a value between 0 and 1 and is added to by female_divisional_commander_chance. If you don’t have female generic portraits defined, you -will-get silhouettes.

——该参数期望接收一个介于0到1之间的值，并会与female_divisional_commander_chance相加。若未定义女性通用肖像，系统将强制显示剪影。



DIVISIONAL_COMMANDER_RANK_XP_THRESHOLD = { 		— XP thresholds for divisional commander ranks. [TAG]_DIVISION_EXPERIENCE_TITLE_ARMY_EXPERIENCE_[array index]

师级指挥官军衔经验阈值 = { — 师级指挥官军衔的经验阈值设定。[标签]_师部经验称号_陆军经验_[数组索引]

0,

100.0,

200.0,

400.0,





800.0,


},



USE_MULTIPLICATIVE_ORG_LOSS_WHEN_MOVING = true, — whether to apply org_loss_when_moving modifiers additively or multiplicatively (hardcoded multiplicative pre-2021)

USE_MULTIPLICATIVE_ORG_LOSS_WHEN_MOVING = true, — 当移动时是否以加法或乘法方式应用组织度损失修正值（2021年前强制使用乘法计算）

HOURLY_ORG_MOVEMENT_IMPACT = -0.2,		— how much org is lost every hour while moving an army.

HOURLY_ORG_MOVEMENT_IMPACT = -0.2, —— 军队移动时每小时损失的组织度数值。

ZERO_ORG_MOVEMENT_MODIFIER = -0.8,		— speed impact at 0 org.

ZERO_ORG_MOVEMENT_MODIFIER = -0.8, — 组织度为0时的移动速度影响

INFRA_ORG_IMPACT = 0.5,				— scale factor of infra on org regain.

INFRA_ORG_IMPACT = 0.5, ——基础设施对组织恢复的影响比例因子。

ENGAGEMENT_WIDTH_PER_WIDTH = 2.0,	— how much enemy combat width we are allowed to engage per width of our own

ENGAGEMENT_WIDTH_PER_WIDTH = 2.0, —— 允许我们以自身每单位战斗宽度对抗多少敌方战斗宽度



INFRASTRUCTURE_MOVEMENT_SPEED_IMPACT = -0.05,	— speed penalty per infrastucture below maximum.

INFRASTRUCTURE_MOVEMENT_SPEED_IMPACT = -0.05, — 每低于最大基础设施水平时的速度惩罚。



VPS_FOR_HISTORY_ENTRY = 3,					— Minimum VPs required to receive an entry in divisional history

VPS_FOR_HISTORY_ENTRY = 3, —— 获得师部历史记录所需的最低VP点数

VPS_FOR_HIGH_HISTORY_ENTRY = 8,				— VPs required for high-level history entry

VPS_FOR_HIGH_HISTORY_ENTRY = 8, — 进入高级历史记录所需的VP点数

ENTRIES_TO_CHECK_FOR_DUPLICATE = 2,			— Max number of history entries to check back to see if we’re being awarded the same entry

ENTRIES_TO_CHECK_FOR_DUPLICATE = 2, —— 检查历史记录条目的最大数量，以确认是否被授予相同的条目

COST_INCREASE_PER_ACTIVE_MEDAL = 0.25,		— Additional cost factor per active medal

COST_INCREASE_PER_ACTIVE_MEDAL = 0.25, — 每枚活跃勋章带来的额外成本系数

MAX_ENTRY_ELISION_COUNT = 4,				— If we do the same type of thing consecutively, each entry will stack locations up to this number

MAX_ENTRY_ELISION_COUNT = 4, — 若连续执行相同类型的操作，每个条目将堆叠位置信息，最多至此数值

GENERATE_AI_DIV_COMMAND_HISTORY_ENTRIES = true,	—Should we generate history entries for the AI (may cause savegame bloat)

GENERATE_AI_DIV_COMMAND_HISTORY_ENTRIES = true, ——是否应为AI生成历史记录条目（可能导致存档文件膨胀）

FIELD_EXPERIENCE_ON_DIVISION_MULT = 0.04,	— Multiply field experience gained by this, when applying to divisional commander

FIELD_EXPERIENCE_ON_DIVISION_MULT = 0.04, —— 应用于师级指挥官时，将获得的战场经验乘以该值

MAX_FIELD_EXPERIENCE_ON_DIVISION = 8000,	— Max experience that can be gained on divisional commanders

MAX_FIELD_EXPERIENCE_ON_DIVISION = 8000, — 师级指挥官可获得的最大经验值

FIELD_EXPERIENCE_ON_DIVISION_PER_MEDAL_MULT = 0.1,	—Multiply officer field experience gain by this * number of division medals on application

FIELD_EXPERIENCE_ON_DIVISION_PER_MEDAL_MULT = 0.1, —将军官战场经验获取乘以该值*所应用师级勋章数量

HISTORY_OPERATION_RANDOM_MAX = 24,			— max random int to roll when determining whether to grant an awardable entry for operations. 1/N chances.

HISTORY_OPERATION_RANDOM_MAX = 24, —— 在判断是否为操作授予可奖励条目时，设定的最大随机整数上限。即1/N的概率。

CASUALTY_COUNT_FOR_HISTORY_ENTRY = 40000,	— number of received casualties to receive a history entry (one only)

CASUALTY_COUNT_FOR_HISTORY_ENTRY = 40000, — 接收到的伤亡人数达到此数值时将生成一条历史记录（仅限一次）

FIELD_OFFICER_PROMOTION_PENALTY = 0.25,		—Amount of division experience lost when promoting a commander (reduced by modifiers)

FIELD_OFFICER_PROMOTION_PENALTY = 0.25, ——晋升指挥官时损失的部队经验值（受修正项影响而降低）



HISTORICAL_ORDER_NAME_EXHAUSTION = false,	— Do historically chosen order instances exhaust their case names? If false ie, Operation Barbarossa will appear for any orders fulfilling the conditions for Germany

HISTORICAL_ORDER_NAME_EXHAUSTION = false, — 历史上选定的命令实例是否会耗尽它们的案例名称？如果为false，即符合德国条件的任何命令都会显示"巴巴罗萨行动"



WAR_SCORE_LOSSES_RATIO = 0.5,								— war score gained for every 1000 casualties

WAR_SCORE_LOSSES_RATIO = 0.5, —— 每损失1000人获得的战争分数

WAR_SCORE_LOSSES_MULT_IF_CAPITULATED = 0.25, 				— factor applied to war score gained from casualties if capitulated

WAR_SCORE_LOSSES_MULT_IF_CAPITULATED = 0.25, ——投降状态下因伤亡获得的战争分数乘以的系数

WAR_SCORE_STRATEGIC_BOMBING_FACTOR = 0.02, 				— war score gained for every damage made to enemy’s building with strategic bombing

WAR_SCORE_STRATEGIC_BOMBING_FACTOR = 0.02, —— 对敌方建筑实施战略轰炸造成的每点伤害所获得的战争分数

WAR_SCORE_STRAT_BOMBING_DECAY_PER_CIVILIAN_FACTORY = 0.10,	— monthly war score deducted from strategic bombing for every civilian factory in service on the bombed enemy side

WAR_SCORE_STRAT_BOMBING_DECAY_PER_CIVILIAN_FACTORY = 0.10, —— 每月因战略轰炸扣除的战争分数，基于被轰炸敌方每座运转中的民用工厂

WAR_SCORE_AIR_IC_LOSS_FACTOR = 0.08,						— war score gained for every IC of damage done to an enemy’s air mission

WAR_SCORE_AIR_IC_LOSS_FACTOR = 0.08, — 对敌方空中任务造成的每单位工业能力（IC）伤害所获得的战争分数

WAR_SCORE_LAND_DAMAGE_FACTOR = 0.1, 				— war score gained for every strengh damage done to an enemy’s army

WAR_SCORE_LAND_DAMAGE_FACTOR = 0.1，—— 对敌方军队造成每点力量伤害所获得的战争分数

WAR_SCORE_ATTACKER_AND_WINNER_FACTOR = 1.2,					— factor applied to war score gained for strength damage done when being the attacker and the winner

WAR_SCORE_ATTACKER_AND_WINNER_FACTOR = 1.2, — 当作为攻击方且获胜时，对力量伤害所获战争分数的加成系数

WAR_SCORE_LAND_IC_LOSS_FACTOR = 0.08, 				— war score gained for every IC damage done to an enemy’s army

WAR_SCORE_LAND_IC_LOSS_FACTOR = 0.08, — 对敌军工业设施造成每单位伤害所获得的战争分数

WAR_SCORE_PROVINCE_FACTOR = 4.0,							— war score gained when capturing a province for the first time, multiplied by province’s worth

WAR_SCORE_PROVINCE_FACTOR = 4.0, ——首次占领省份时获得的战争分数，乘以省份价值

WAR_SCORE_LEND_LEASE_GIVEN_IC_FACTOR = 0.003, 				— war score gained for every IC of lend lease sent to allies

WAR_SCORE_LEND_LEASE_GIVEN_IC_FACTOR = 0.003, — 每向盟友提供1点工业产能的租借物资所获得的战争分数

WAR_SCORE_LEND_LEASE_GIVEN_FUEL_FACTOR = 0.003, 			— war score gained for every 100 units of fuel lend lease sent to allies

WAR_SCORE_LEND_LEASE_GIVEN_FUEL_FACTOR = 0.003, — 每向盟友运送100单位燃料租借物资获得的战争分数

WAR_SCORE_LEND_LEASE_RECEIVED_IC_FACTOR = 0.002, 			— war score deducted for every IC of lend lease received from allies

WAR_SCORE_LEND_LEASE_RECEIVED_IC_FACTOR = 0.002, —— 每接收盟国1点工业产能的租借物资所扣除的战争分数

WAR_SCORE_LEND_LEASE_RECEIVED_FUEL_FACTOR = 0.002, 		— war score deducted for every 100 units of fuel lend lease received from allies

WAR_SCORE_LEND_LEASE_RECEIVED_FUEL_FACTOR = 0.002, — 每从盟友处接收100单位燃料租借物资扣除的战争分数



CORPS_COMMANDER_DIVISIONS_CAP = 24,			— how many divisions a corps commander is limited to. 0 = inf, < 0 = blocked

军团指挥官师团上限 = 24, —— 限制一名军团指挥官可指挥的师团数量。0 = 无限制，< 0 = 禁止

DIVISION_SIZE_FOR_XP = 8, — how many battalions should a division have to count as a full divisions when calculating XP stuff

DIVISION_SIZE_FOR_XP = 8，—— 在计算经验值时，一个师应包含多少营才能被视为完整师

CORPS_COMMANDER_ARMIES_CAP = -1,			— how many armies a corps commander is limited to. 0 = inf, < 0 = blocked

CORPS_COMMANDER_ARMIES_CAP = -1, — 限制军团指挥官可指挥的军队数量。0 = 无限, < 0 = 禁止

FIELD_MARSHAL_DIVISIONS_CAP = 24,			— how many divisions a field marshall is limited to. 0 = inf, < 0 = blocked

陆军元帅指挥师团上限 = 24, —— 限制陆军元帅可指挥的师团数量。0 = 无限，< 0 = 禁止

FIELD_MARSHAL_ARMIES_CAP = 5,				— how many armies a field marshall is limited to. 0 = inf, < 0 = blocked

陆军元帅可指挥军团上限 = 5, ——规定陆军元帅能统领的最大军团数量。0表示无限，负数表示禁止



UNIT_LEADER_GENERATION_CAPITAL_CONTINENT_FACTOR = 100, —Integer factor to multiply manpower.

UNIT_LEADER_GENERATION_CAPITAL_CONTINENT_FACTOR = 100, ——用于乘以人力资本的整数因子。



RECON_SKILL_IMPACT = 5, — how many skillpoints is a recon advantage worth when picking a tactic.

RECON_SKILL_IMPACT = 5，—— 在选取战术时，侦察优势相当于多少技能点。



MAX_DIVISION_BRIGADE_WIDTH = 5,			— Max width of regiments in division designer.

MAX_DIVISION_BRIGADE_WIDTH = 5, — 师设计器中团级单位最大宽度。

MAX_DIVISION_BRIGADE_HEIGHT = 5,		— Max height of regiments in division designer.

MAX_DIVISION_BRIGADE_HEIGHT = 5， —— 师设计器中部队的最大高度。

MIN_DIVISION_BRIGADE_HEIGHT = 4,		— Min height of regiments in division designer.

MIN_DIVISION_BRIGADE_HEIGHT = 4, — 师编制设计器中团级单位的最小高度。

MAX_DIVISION_SUPPORT_WIDTH = 1,			— Max width of support in division designer.

MAX_DIVISION_SUPPORT_WIDTH = 1, — 师设计器中支持的最大宽度。

MAX_DIVISION_SUPPORT_HEIGHT = 5,		— Max height of support in division designer.

MAX_DIVISION_SUPPORT_HEIGHT = 5, — 师设计器中支援的最大高度。



BASE_DIVISION_BRIGADE_GROUP_COST = 20, 	—Base cost to unlock a regiment slot,

BASE_DIVISION_BRIGADE_GROUP_COST = 20, —解锁一个团级单位栏位的基础费用

BASE_DIVISION_BRIGADE_CHANGE_COST = 5,	—Base cost to change a regiment column.

BASE_DIVISION_BRIGADE_CHANGE_COST = 5, ——调整团级编制栏的基础消耗

BASE_DIVISION_SUPPORT_SLOT_COST = 10, 	—Base cost to unlock a support slot

BASE_DIVISION_SUPPORT_SLOT_COST = 10, ——解锁支援位的基础消耗



MAX_ARMY_EXPERIENCE = 500,			—Max army experience a country can store

MAX_ARMY_EXPERIENCE = 500, ——一个国家能存储的最大陆军经验值

MAX_NAVY_EXPERIENCE = 500,			—Max navy experience a country can store

MAX_NAVY_EXPERIENCE = 500，——国家可存储的最大海军经验值

MAX_AIR_EXPERIENCE = 500,				—Max air experience a country can store

MAX_AIR_EXPERIENCE = 500, ——一个国家能存储的最大空中经验值



COMBAT_MINIMUM_TIME = 4,			— Shortest time possible for a combat in hours

COMBAT_MINIMUM_TIME = 4, — 战斗可能的最短时间，单位为小时

SPOTTING_QUALITY_DROP_HOURS = 4, 	— Each X hours the intel quality drops after unit was spotted.

SPOTTING_QUALITY_DROP_HOURS = 4, — 单位被发现后，每X小时情报质量下降一次。

LEADER_GROUP_MAX_SIZE = 1000, —5,			— Max slots for leader groups.

LEADER_GROUP_MAX_SIZE = 1000, —5, — 首领群组的最大槽位数。



MIN_SUPPLY_CONSUMPTION = 0.05,					— minimum value of supply consumption that a unit can get

MIN_SUPPLY_CONSUMPTION = 0.05, — 单位可获得的最低补给消耗值



LAND_COMBAT_ORG_DICE_SIZE = 4, — nr of damage dice

LAND_COMBAT_ORG_DICE_SIZE = 4, — 伤害骰子数量

LAND_COMBAT_STR_DICE_SIZE = 2, — nr of damage dice

LAND_COMBAT_STR_DICE_SIZE = 2, — 伤害骰子数量

LAND_COMBAT_STR_DAMAGE_MODIFIER = 0.060, — global damage modifier… but some equipment is returned at end of battles see : EQUIPMENT_COMBAT_LOSS_FACTOR

LAND_COMBAT_STR_DAMAGE_MODIFIER = 0.060, —— 全局伤害修正系数...但部分装备会在战斗结束时返还，参见：EQUIPMENT_COMBAT_LOSS_FACTOR

LAND_COMBAT_ORG_DAMAGE_MODIFIER = 0.053, — global damage modifier

LAND_COMBAT_ORG_DAMAGE_MODIFIER = 0.053, — 全局伤害修正系数

LAND_AIR_COMBAT_STR_DAMAGE_MODIFIER = 0.032, — air global damage modifier

陆地空中作战_强度_伤害修正系数 = 0.032, — 空中全局伤害修正系数

LAND_AIR_COMBAT_ORG_DAMAGE_MODIFIER = 0.032, — global damage modifier

LAND_AIR_COMBAT_ORG_DAMAGE_MODIFIER = 0.032, —— 全局伤害修正系数

LAND_AIR_COMBAT_MAX_PLANES_PER_ENEMY_WIDTH = 3, — how many CAS/TAC can enter a combat depending on enemy width there

陆地空中作战每敌宽度最大飞机数 = 3, ——根据敌方宽度可投入的近距离空中支援/战术轰炸机数量

LAND_COMBAT_STR_ARMOR_ON_SOFT_DICE_SIZE = 2, — extra damage dice if our armor outclasses enemy

LAND_COMBAT_STR_ARMOR_ON_SOFT_DICE_SIZE = 2，—— 若我方装甲优于敌方则增加伤害骰数

LAND_COMBAT_ORG_ARMOR_ON_SOFT_DICE_SIZE = 6, — extra damage dice if our armor outclasses enemy

陆战组织装甲对软目标骰子大小 = 6, —— 若我方装甲压制敌方则获得额外伤害骰

LAND_COMBAT_STR_ARMOR_DEFLECTION_FACTOR = 0.5, — damage reduction if armor outclassing enemy

LAND_COMBAT_STR_ARMOR_DEFLECTION_FACTOR = 0.5, — 当装甲优于敌方时的伤害减免系数

LAND_COMBAT_ORG_ARMOR_DEFLECTION_FACTOR = 0.5, — damage reduction if armor outclassing enemy

LAND_COMBAT_ORG_ARMOR_DEFLECTION_FACTOR = 0.5, ——装甲优于敌方时的伤害减免系数

LAND_COMBAT_COLLATERAL_FORT_FACTOR = 0.005,		— Factor to scale collateral damage to forts with.

LAND_COMBAT_COLLATERAL_FORT_FACTOR = 0.005, —— 用于缩放对要塞造成附带伤害的系数。

LAND_COMBAT_COLLATERAL_INFRA_FACTOR = 0.0022,	— Factor to scale collateral damage to infra with.

陆地战斗附带基础设施损害系数 = 0.0022, —— 用于衡量对基础设施造成的附带损害的比例因子。

LAND_COMBAT_FORT_DAMAGE_CHANCE = 5,				— chance to get a hit to damage on forts. (out of 100)

陆地战斗要塞损伤概率 = 5, —— 对要塞造成损伤的命中概率（以100为基数）。

ATTRITION_DAMAGE_ORG = 0.08,					 — damage from attrition to Organisation

ATTRITION_DAMAGE_ORG = 0.08, —— 损耗对组织度的伤害

ATTRITION_EQUIPMENT_LOSS_CHANCE = 0.1,		 — Chance for loosing equipment when suffer attrition. Scaled up the stronger attrition is. Then scaled down by equipment reliability.

ATTRITION_EQUIPMENT_LOSS_CHANCE = 0.1, —— 遭受损耗时装备损失的概率。损耗越严重，此概率越高。随后会根据装备可靠性按比例降低。

ATTRITION_EQUIPMENT_PER_TYPE_LOSS_CHANCE = 0.1, — Chance for loosing equipment when suffer attrition. Scaled up the stronger attrition is. Then scaled down by equipment reliability.

ATTRITION_EQUIPMENT_PER_TYPE_LOSS_CHANCE = 0.1, —— 遭受损耗时失去装备的概率。随损耗强度增加而提高，随后由装备可靠性降低该值。

ATTRITION_WHILE_MOVING_FACTOR = 1,

移动时的损耗系数 = 1,

RELIABILITY_ORG_REGAIN = -0.3, — how much reliability affects org regain

可靠性对组织恢复的影响 = -0.3

RELIABILITY_ORG_MOVING = -1.0, — how much reliability affects org loss on moving

可靠性_组织_移动 = -1.0, — 可靠性对移动时组织损失的影响程度

RELIABILITY_WEATHER = 3.0, — how much reliability is afffecting weather impact

RELIABILITY_WEATHER = 3.0, — 可靠性对天气影响的权重

RELIABILTY_RECOVERY = 0.1, — factor affecting how much equipment is returned “from the dead”

可靠性恢复系数 = 0.1，——影响从“报废状态”回收设备数量的因子

BASE_CHANCE_TO_AVOID_HIT = 90, — Base chance to avoid hit if defences left.

基础闪避命中几率 = 90, —— 若防御未破时的基础闪避概率。

CHANCE_TO_AVOID_HIT_AT_NO_DEF = 60,	 — chance to avoid hit if no defences left.

CHANCE_TO_AVOID_HIT_AT_NO_DEF = 60, —— 若无防御剩余时躲避攻击的概率。

COMBAT_MOVEMENT_SPEED = 0.33,	 — speed reduction base modifier in combat

COMBAT_MOVEMENT_SPEED = 0.33，——战斗中的基础移动速度降低修正值

TACTIC_SWAP_FREQUENCEY = 12, — hours between tactic swaps

TACTIC_SWAP_FREQUENCEY = 12, — 战术切换间隔时间（小时）

PREFERRED_TACTIC_CHARACTER_SKILL_LEVEL_REQUIRED = 5, — Which level a field marhal or general has to be before they can pick their preferred tactic

PREFERRED_TACTIC_CHARACTER_SKILL_LEVEL_REQUIRED = 5, — 战场元帅或将军在选择偏好战术前需达到的等级

COUNTRY_PREFERRED_TACTIC_WEIGHT_FACTOR = 0.25, — extra weight multiplier for the country preferred tactic when doing weighted random

COUNTRY_PREFERRED_TACTIC_WEIGHT_FACTOR = 0.25, —— 在执行加权随机时为国家的首选战术添加额外权重乘数

ARMY_GENERAL_PREFERRED_TACTIC_WEIGHT_FACTOR = 0.5, — extra weight multiplier for the army general preferred tactic when doing weighted random

ARMY_GENERAL_PREFERRED_TACTIC_WEIGHT_FACTOR = 0.5, —— 在执行加权随机时，对将领偏好战术的额外权重乘数

FIELD_MARSHAL_PREFERRED_TACTIC_WEIGHT_FACTOR = 0.25, — extra weight multiplier for the field marhsal preferred tactic when doing weighted random

FIELD_MARSHAL_PREFERRED_TACTIC_WEIGHT_FACTOR = 0.25, —— 在进行加权随机时，元帅首选战术的额外权重乘数

PREFERRED_TACTIC_COMMAND_POWER_COST = 20,	 — command point cost for changing preferred tactic

首选战术指令消耗 = 20, — 变更首选战术所需的指挥点数消耗

INITIATIVE_PICK_COUNTER_ADVANTAGE_FACTOR = 0.35, — advantage per leader level for picking a counter

INITIATIVE_PICK_COUNTER_ADVANTAGE_FACTOR = 0.35, —— 每领袖等级选取反制策略时的优势系数

AMPHIBIOUS_INVADE_MOVEMENT_COST = 24.0, — total progress cost of movement while amphibious invading

两栖入侵移动成本 = 24.0, ——两栖入侵期间移动的总进度消耗

LAND_SPEED_MODIFIER = 0.05, — basic speed control

LAND_SPEED_MODIFIER = 0.05, — 基础速度控制

RIVER_CROSSING_PENALTY = -0.3, — small river crossing

RIVER_CROSSING_PENALTY = -0.3, —— 小型河流穿越

RIVER_CROSSING_PENALTY_LARGE = -0.6, — large river crossing

RIVER_CROSSING_PENALTY_LARGE = -0.6, — 大型河流穿越

RIVER_CROSSING_SPEED_PENALTY = -0.25, — small river crossing

RIVER_CROSSING_SPEED_PENALTY = -0.25, — 小型河流穿越

RIVER_CROSSING_SPEED_PENALTY_LARGE = -0.5, — large river crossing

RIVER_CROSSING_SPEED_PENALTY_LARGE = -0.5, — 大型河流穿越

RIVER_SMALL_START_INDEX = 0, — color indices for rivers

RIVER_SMALL_START_INDEX = 0, — 河流的颜色索引

RIVER_SMALL_STOP_INDEX = 6,

RIVER_SMALL_STOP_INDEX = 6,

RIVER_LARGE_STOP_INDEX = 11,

RIVER_LARGE_STOP_INDEX = 11,

BASE_FORT_PENALTY = -0.15, 					 — fort penalty

BASE_FORT_PENALTY = -0.15, —— 堡垒惩罚

MULTIPLE_COMBATS_PENALTY = -0.5, — defender penalty if attacked from multiple directions

多重战斗惩罚 = -0.5, —— 防守方若遭受多方向攻击则承受此减益

DIG_IN_FACTOR = 0.02,						 — bonus factor for each dug-in level

DIG_IN_FACTOR = 0.02, —— 每级堑壕防御的加成系数

ARMY_LEADER_XP_GAIN_PER_UNIT_IN_COMBAT = 0.1, — XP gain per unit in combat

ARMY_LEADER_XP_GAIN_PER_UNIT_IN_COMBAT = 0.1, — 每单位战斗经验获取

CONSTANT_XP_RATIO_FOR_MULTIPLE_LEADERS_IN_SAME_COMBAT = 0.5, — if there are multiple leaders in same combat, each one gets thisratio + (1-thisratio)/num leaders. amount of xp each general gets scales 1 0.75 0.66 etc for 1 2 3 generals

同一战斗中多名将领的经验值固定比例 = 0.5，——若同一战斗中有多名将领，每位将领获得的比例为此数值 + (1-此数值)/将领人数。每位将领获得的经验值随将领人数按1、0.75、0.66等比例递减（对应1、2、3名将领的情况）。

BASE_LEADER_TRAIT_GAIN_XP = 0.45,			 — Base xp gain for traits per hour for armies

BASE_LEADER_TRAIT_GAIN_XP = 0.45, —— 军队每小时特质经验值的基础获取量

MAX_NUM_TRAITS = -1,						 — cant have more, -1 to disable

MAX_NUM_TRAITS = -1, — 无法拥有更多，设为-1以禁用

ENEMY_AIR_SUPERIORITY_IMPACT = -0.35, — effect on defense due to enemy air superiorty

敌方空中优势影响 = -0.35, — 因敌方空中优势导致的防御效果下降

ENEMY_AIR_SUPERIORITY_DEFENSE = 0.70,	 — more AA attack will approach this amount of help (diminishing returns)

ENEMY_AIR_SUPERIORITY_DEFENSE = 0.70, — 更多防空攻击将趋近于此数值的援助效果（收益递减）

ENEMY_AIR_SUPERIORITY_DEFENSE_STEEPNESS = 112, — how quickly defense approaches the max impact diminishing returns curve

ENEMY_AIR_SUPERIORITY_DEFENSE_STEEPNESS = 112, — 防御值接近最大影响递减曲线的速度

ENEMY_AIR_SUPERIORITY_SPEED_IMPACT = -0.3, — effect on speed due to enemy air superiority

敌方空中优势速度影响 = -0.3, ——因敌方空中优势导致的速度影响



ANTI_AIR_TARGETTING_TO_CHANCE = 0.07,			— Balancing value to determine the chance of ground AA hitting an attacking airplane, affecting both the effective average damage done by AA to airplanes, and the reduction of damage done by airplanes due to AA support

ANTI_AIR_TARGETTING_TO_CHANCE = 0.07, —— 用于平衡地面防空火力击中攻击飞机的概率的数值，该数值同时影响防空对飞机造成的实际平均伤害，以及由于防空支援而导致的飞机伤害降低效果

ANTI_AIR_ATTACK_TO_AMOUNT = 0.005,				— Balancing value to convert equipment stat anti_air_attack to the random % value of airplanes being hit.

ANTI_AIR_ATTACK_TO_AMOUNT = 0.005, —— 平衡数值，用于将装备属性中的防空攻击力转换为击落飞机随机百分比的数值。



ENCIRCLED_PENALTY = -0.3, 	— penalty when completely encircled

ENCIRCLED_PENALTY = -0.3, —— 被完全包围时的惩罚值



UNIT_EXPERIENCE_PER_COMBAT_HOUR = 0.0001,

单位每战斗小时经验值 = 0.0001,

UNIT_EXPERIENCE_SCALE = 1.0,

单位经验比例 = 1.0,

UNIT_EXPERIENCE_PER_TRAINING_DAY = 0.0015,

UNIT_EXPERIENCE_PER_TRAINING_DAY = 0.0015,

TRAINING_MAX_LEVEL = 2,

训练最大等级 = 2,

DEPLOY_TRAINING_MAX_LEVEL = 1,

部署训练最高等级 = 1,

TRAINING_EXPERIENCE_SCALE = 62.0,

TRAINING_EXPERIENCE_SCALE = 62.0,

TRAINING_ORG = 0.2,

训练组织 = 0.2,

ARMY_EXP_BASE_LEVEL = 1,

ARMY_EXP_BASE_LEVEL = 1,

UNIT_EXP_LEVELS = { 0.1, 0.3, 0.75, 0.9 },		— Experience needed to progress to the next level

单位经验等级 = { 0.1, 0.3, 0.75, 0.9 }, — 升级到下一级所需的经验值

FIELD_EXPERIENCE_SCALE = 0.0015,

FIELD_EXPERIENCE_SCALE = 0.0015,

FIELD_EXPERIENCE_MAX_PER_DAY = 1.2,				— Most xp you can gain per day

FIELD_EXPERIENCE_MAX_PER_DAY = 1.2, — 每日可获取的最大经验值

EXPEDITIONARY_FIELD_EXPERIENCE_SCALE = 0.3,		— reduction factor in Xp from expeditionary forces

远征部队经验值比例 = 0.3, — 远征部队经验值的缩减系数

LEND_LEASE_FIELD_EXPERIENCE_SCALE = 0.0005,		— Experience scale for lend leased equipment used in combat.

LEND_LEASE_FIELD_EXPERIENCE_SCALE = 0.0005, —— 战斗中使用的租借装备经验值比例系数。

LEADER_EXPERIENCE_SCALE = 1.0,

领导者经验比例 = 1.0,

SLOWEST_SPEED = 4,

最慢速度 = 4,

REINFORCEMENT_REQUEST_MAX_WAITING_DAYS = 14, — Every X days the equipment will be sent, regardless if still didn’t produced all that has been requested.

REINFORCEMENT_REQUEST_MAX_WAITING_DAYS = 14, — 每隔X天将发送装备，无论是否已完成所有请求的生产。

REINFORCEMENT_REQUEST_DAYS_FREQUENCY = 7,	 — How many days must pass until we may give another reinforcement request

REINFORCEMENT_REQUEST_DAYS_FREQUENCY = 7, — 需要经过多少天后才能再次提出增援请求

EXPERIENCE_COMBAT_FACTOR = 0.25,

EXPERIENCE_COMBAT_FACTOR = 0.25,

UNIT_DIGIN_CAP = 5, — how “deep” you can dig you can dig in until hitting max bonus

UNIT_DIGIN_CAP = 5, — 表示可挖掘的“深度” 挖掘可进行直至达到最大奖励

UNIT_DIGIN_SPEED = 1,						 — how “deep” you can dig a day.

单位挖掘速度 = 1, —— 每天能挖掘的“深度”。

PARACHUTE_FAILED_EQUIPMENT_DIV = 50.0,		 — When the transport plane was shot down, we drop unit with almost NONE equipment

PARACHUTE_FAILED_EQUIPMENT_DIV = 50.0, —— 当运输机被击落时，我们投放的单位几乎没有任何装备

PARACHUTE_FAILED_MANPOWER_DIV = 100.0,		 — When the transport plane was shot down, we drop unit with almost NONE manpower

PARACHUTE_FAILED_MANPOWER_DIV = 100.0, —— 当运输机被击落时，我们空投的单位几乎不携带人力

PARACHUTE_FAILED_STR_DIV = 10.0,			 — When the transport plane was shot down, we drop unit with almost NONE strenght

PARACHUTE_FAILED_STR_DIV = 10.0, — 运输机被击落时，我们空投的单位几乎没有任何战斗力

PARACHUTE_DISRUPTED_EQUIPMENT_DIV = 1.5,	 — When the transport plane was hit, we drop unit with reduced equipment. Penalty is higher as more hits was received (and AA guns was in the state).

PARACHUTE_DISRUPTED_EQUIPMENT_DIV = 1.5, — 当运输机遭受攻击时，我们以削减装备的方式空降单位。随着遭受攻击次数增加（且防空炮处于作战状态），惩罚系数会相应提高。

PARACHUTE_DISRUPTED_MANPOWER_DIV = 1.9,	 — When the transport plane was hit, we drop unit with reduced manpower. Penalty is higher as more hits was received (and AA guns was in the state).

PARACHUTE_DISRUPTED_MANPOWER_DIV = 1.9, — 当运输机遭受攻击时，我们以削减的兵力空投部队。随着遭受更多攻击（且防空炮处于作战状态），惩罚会加重。

PARACHUTE_DISRUPTED_STR_DIV = 2.2,			 — When the transport plane was hit, we drop unit with reduced strength. Penalty is higher as more hits was received (and AA guns was in the state).

PARACHUTE_DISRUPTED_STR_DIV = 2.2, —— 当运输机被击中时，我们以削减后的兵力空降单位。随着遭受更多攻击（且防空炮处于作战状态），惩罚系数会相应提高。

PARACHUTE_PENALTY_RANDOMNESS = 0.1,			 — Random factor for str,manpower,eq penalties.

PARACHUTE_PENALTY_RANDOMNESS = 0.1, — 力量、人力、装备惩罚的随机系数。

PARACHUTE_DISRUPTED_AA_PENALTY = 1, — How much the Air defence in the state (from AA buildings level * air_defence) is scaled to affect overall disruption (equipment,manpower,str).

PARACHUTE_DISRUPTED_AA_PENALTY = 1, —— 该数值表示州内防空力量（由防空建筑等级乘以air_defence得出）对整体空降干扰（装备、人力、战略资源）的影响程度比例。

PARACHUTE_COMPLETE_ORG = 0.4,				 — Organisation value (in %) after unit being dropped, regardless if failed, disrupted, or successful.

PARACHUTE_COMPLETE_ORG = 0.4, —— 单位空降后的组织度数值（百分比形式），无论空降失败、受阻或成功均适用。

PARACHUTE_ORG_REGAIN_PENALTY_DURATION = 120, — penalty in org regain after being parachuted. Value is in hours.

PARACHUTE_ORG_REGAIN_PENALTY_DURATION = 120, — 空降后重新获取组织的惩罚时长。数值单位为小时。

PARACHUTE_ORG_REGAIN_PENALTY_MULT = -0.8,	 — penalty to org regain after being parachuted.

PARACHUTE_ORG_REGAIN_PENALTY_MULT = -0.8, —— 空降后组织度恢复的惩罚系数。

SHIP_MORALE_TO_ORG_REGAIN_BASE = 0.2,			 — Base org regain per hour

SHIP_MORALE_TO_ORG_REGAIN_BASE = 0.2, — 每小时基础组织度恢复值

BASE_NIGHT_ATTACK_PENALTY = -0.5,

基础夜间攻击惩罚值 = -0.5,

EXILE_EQUIPMENT = 1.0,						 — Amount of equipment to keep

EXILE_EQUIPMENT = 1.0, — 保留装备的数量

EXILE_ORG = 0.0,							 — Amount of org to keep

EXILE_ORG = 0.0, — 保留的组织数量

EXPERIENCE_LOSS_FACTOR = 1.00, — percentage of experienced solders who die when manpower is removed

经验损失系数 = 1.00，——当人力被移除时，经验丰富的士兵的死亡百分比

EQUIPMENT_COMBAT_LOSS_FACTOR = 0.70,	 	 — % of equipment lost to strength ratio in combat, so some % is returned if below 1

EQUIPMENT_COMBAT_LOSS_FACTOR = 0.70, — 战斗中装备损失与兵力比率的百分比，若低于1则返还部分装备

SUPPLY_USE_FACTOR_MOVING = 1.5, — Deprecated/Unused

SUPPLY_USE_FACTOR_MOVING = 1.5， — 已弃用/未使用

SUPPLY_USE_FACTOR_INACTIVE = 0.95,			 — Deprecated/Unused

SUPPLY_USE_FACTOR_INACTIVE = 0.95，——已弃用/未使用

SUPPLY_GRACE = 72,							 — troops always carry 3 days of food and supply

SUPPLY_GRACE = 72，——部队通常携带3天的食物和补给

SUPPLY_GRACE_MAX_REDUCE_PER_HOUR = 2, — supply grace is not decreased instantly when it is buffed temporarily and buff is removed

SUPPLY_GRACE_MAX_REDUCE_PER_HOUR = 2, —— 当供应宽限期被临时增益且增益移除时，不会立即减少

SUPPLY_ORG_MAX_CAP = 0.35, — Max organization is factored by this if completely out of supply

SUPPLY_ORG_MAX_CAP = 0.35, —— 若完全脱离补给，最大组织度将按此系数计算

MAX_OUT_OF_SUPPLY_DAYS = 30, 				 — how many days of shitty supply until max penalty achieved

MAX_OUT_OF_SUPPLY_DAYS = 30, — 供应短缺多少天后达到最大惩罚

OUT_OF_SUPPLY_ATTRITION = 0.20, — max attrition when out of supply

OUT_OF_SUPPLY_ATTRITION = 0.20, — 补给中断时的最大损耗率

OUT_OF_SUPPLY_SPEED = -0.8, — max speed reduction from supply

补给不足速度惩罚 = -0.8, —— 因补给导致的最大速度削减

NON_CORE_SUPPLY_SPEED = -0.5,				 — we are not running on our own VP supply so need to steal stuff along the way

NON_CORE_SUPPLY_SPEED = -0.5, —— 我们无法依靠自己的VP补给运转，因此沿途需要获取资源。

NON_CORE_SUPPLY_AIR_SPEED = -0.25,			 — we are not running on our own VP supply so need to steal stuff along the way, a bit less due to air supply

非核心补给空气速度 = -0.25，——我们不是依靠自己的VP补给运行，因此需要沿途获取物资，由于空投补给略少，速度稍减

OUT_OF_SUPPLY_MORALE = -0.2, — max org regain reduction from supply

补给不足士气影响 = -0.2, — 补给不足导致的最大组织度恢复削减值

TRAINING_ATTRITION = 0.05,		 			 — amount of extra attrition from being in training

TRAINING_ATTRITION = 0.05， —— 训练期间额外损耗的比例

TRAINING_MIN_STRENGTH = 0.1,					— if strength is less than this, the unit will pause training until it’s been reinforced

TRAINING_MIN_STRENGTH = 0.1，——若强度低于此值，单位将暂停训练直至获得增援

TRAINING_MAX_DAILY_COUNTRY_EXP = 0.08,			— Maximum army XP gained per day from training

TRAINING_MAX_DAILY_COUNTRY_EXP = 0.08，——每日通过训练获取的军队经验值上限

AIR_SUPPORT_BASE = 0.25, — CAS bonus factor for air support moddifier for land unit in combat

AIR_SUPPORT_BASE = 0.25, —— 空中支援模组对地面作战单位的近距空中支援加成系数

LOW_SUPPLY = 0.99,							 — When the supply status of an unit becomes low.

LOW_SUPPLY = 0.99, —— 当某个单位的补给状态变为低时。

BORDER_WAR_ATTRITION_FACTOR = 0.1,			 — How much of borderwar balance of power makes it into attrition

BORDER_WAR_ATTRITION_FACTOR = 0.1, ——边境战争实力平衡中有多少转化为损耗

BORDER_WAR_VICTORY = 0.8,					 — At wich border war balance of power is victory declared

边境战争胜利条件 = 0.8, —— 在边境战争中，当力量平衡达到此值时即宣告胜利

REINFORCE_CHANCE = 0.02, 	 — base chance to join combat from back line when empty

REINFORCE_CHANCE = 0.02, —— 当后排为空时，加入战斗的基础概率

SPEED_REINFORCEMENT_BONUS = 0.01, — chance to join combat bonus by each 100% larger than infantry base (up to 200%)

SPEED_REINFORCEMENT_BONUS = 0.01, —— 每比步兵基础速度快100%（最高200%）时获得的加入战斗几率加成

OVERSEAS_LOSE_EQUIPMENT_FACTOR = 0.75,		 — percentage of equipment lost disbanded overseas

OVERSEAS_LOSE_EQUIPMENT_FACTOR = 0.75, —— 海外解散时损失的装备比例

NAVAL_TRANSFER_DISBAND_MANPOWER_FACTOR = 0.5, — percentage of manpower returned when a naval transfering unit is disbanded

NAVAL_TRANSFER_DISBAND_MANPOWER_FACTOR = 0.5, — 海军转移单位解散时返还的人力百分比

ENCIRCLED_DISBAND_MANPOWER_FACTOR = 0.2, — percentage of manpower returned when an encircled unit is disbanded

ENCIRCLED_DISBAND_MANPOWER_FACTOR = 0.2, —— 被包围单位解散时返还的人力比例

ORG_LOSS_FACTOR_ON_CONQUER = 0.2, — percentage of (max) org loss on takign enemy province

ORG_LOSS_FACTOR_ON_CONQUER = 0.2, —— 占领敌方省份时（最大）组织度损失的百分比

LOW_ORG_FOR_ATTACK = 0.3, — at what org % we start affecting speed when doign hostile moves. scales down ZERO_ORG_MOVEMENT_MODIFIER

LOW_ORG_FOR_ATTACK = 0.3, —— 在组织度百分比低于多少时，执行敌对行动会开始影响速度。该值会按比例降低ZERO_ORG_MOVEMENT_MODIFIER的效果。



PLANNING_DECAY = 0.01,

PLANNING_DECAY = 0.01,

PLAYER_ORDER_PLANNING_DECAY = 0.03,				— Amount of planning lost due to player manual order

PLAYER_ORDER_PLANNING_DECAY = 0.03, — 玩家手动指令导致的规划值衰减量

PLANNING_GAIN = 0.02,

规划增益 = 0.02,

NAVAL_INVASION_PLANNING_BONUS_GAIN = 0.02,		— Planning Bonus gain per day for naval invasions

海军入侵计划每日加成获取 = 0.02, ——海军入侵每日计划加成的增加量

NAVAL_INVASION_PLANNING_BONUS_MALUS = -1,		— Malus in percentage for the planning bonus gain for naval invasions

海军入侵计划增益惩罚 = -1, — 海军入侵计划增益获取的百分比惩罚

PLANNING_MAX = 0.3, 	— can get more from techs

PLANNING_MAX = 0.3，——可通过技术获取更多

CIVILWAR_ORGANIZATION_FACTOR = 0.3,			 	— Multiplier of org for both sides when civilwar.

内战组织力系数 = 0.3, —— 内战中双方组织力的乘数。

PLAN_CONSIDERED_GOOD = 0.25,					— Plan evaluations above this value are considered more or less safe

PLAN_CONSIDERED_GOOD = 0.25，— 高于此值的计划评估被认为是基本安全的

PLAN_CONSIDERED_BAD = -0.25,					— Plan evaluations below this value are considered unsafe

PLAN_CONSIDERED_BAD = -0.25, —— 计划评估值低于此数值将被视为不安全

PLAN_MIN_AUTOMATED_EMPTY_POCKET_SIZE = 2,		— The battle plan system will only automatically attack provinces in pockets that has no resistance and are no bigger than these many provinces

PLAN_MIN_AUTOMATED_EMPTY_POCKET_SIZE = 2, —— 作战计划系统仅会自动攻击无抵抗且面积不超过此数量省份的孤立区域。

PLAN_SPREAD_ATTACK_WEIGHT = 12.0,				— The higher the value, the less it should crowd provinces with multiple attacks.

PLAN_SPREAD_ATTACK_WEIGHT = 12.0, — 数值越高，越应避免在多个攻击中集中省份。

PLAN_NEIGHBORING_ENEMY_PROVINCE_FACTOR = 0.7,	— When calculating the importance of provinces, it takes number of enemy provinces into account, factored by this

PLAN_NEIGHBORING_ENEMY_PROVINCE_FACTOR = 0.7, —— 在计算省份重要性时，将考虑敌方省份的数量，并以此系数进行加权

PLAN_PROVINCE_BASE_IMPORTANCE = 2.0,			— Used when calculating the calue of front and defense area provinces for the battle plan system

PLAN_PROVINCE_BASE_IMPORTANCE = 2.0, — 用于计算战斗计划系统中前后方防御区域省份价值的基准重要性数值



PLAN_PROVINCE_LOW_VP_DEFENSE_THRESHOLD = 2.0, — For area defense VP orders, what are the thresholds for “low”, “medium” and “high” VP values

PLAN_PROVINCE_LOW_VP_DEFENSE_THRESHOLD = 2.0, —— 用于区域防御VP指令时，“低”、“中”、“高”VP值的阈值分别是多少

PLAN_PROVINCE_MEDIUM_VP_DEFENSE_THRESHOLD = 8.0, — see above

PLAN_PROVINCE_MEDIUM_VP_DEFENSE_THRESHOLD = 8.0，——同上

PLAN_PROVINCE_HIGH_VP_DEFENSE_THRESHOLD = 25.0, — see above

PLAN_PROVINCE_HIGH_VP_DEFENSE_THRESHOLD = 25.0, — 同上

PLAN_PROVINCE_LOW_VP_DEFENSE_IMPORTANCE = 2.0, — For area defense VP orders, use this value for relative importance

PLAN_PROVINCE_LOW_VP_DEFENSE_IMPORTANCE = 2.0, — 用于区域防御VP命令的相对重要性值

PLAN_PROVINCE_MEDIUM_VP_DEFENSE_IMPORTANCE = 5.0, — see above

PLAN_PROVINCE_MEDIO_VP_DEFENSE_IMPORTANCIA = 5.0， — 同上

PLAN_PROVINCE_HIGH_VP_DEFENSE_IMPORTANCE = 10.0, — see above

PLAN_PROVINCE_HIGH_VP_DEFENSE_IMPORTANCE = 10.0, ——同上文

PLAN_PROVINCE_CAPITAL_DEFENSE_IMPORTANCE = 50.0, — For area defense VP orders, boost importance value with this if it’s the capital

PLAN_PROVINCE_CAPITAL_DEFENSE_IMPORTANCE = 50.0, — 对于区域防御VP命令，若该地为省会则用此值提升重要性

MIN_VP_NEEDED_FOR_DEFENSE_ORDER_ASSIGNMENTS = 1.0, — For area devense VP orders, ignore provinces with VP <= this value

MIN_VP_NEEDED_FOR_DEFENSE_ORDER_ASSIGNMENTS = 1.0, — 对于地区防御VP命令，忽略VP值小于等于此值的省份



PLAN_PROVINCE_LOW_VP_IMPORTANCE_FRONT = 2.0, — Used when calculating the calue of fronts in the battle plan system

PLAN_PROVINCE_LOW_VP_IMPORTANCE_FRONT = 2.0, ——用于战斗计划系统中计算前线价值

PLAN_PROVINCE_MEDIUM_VP_IMPORTANCE_FRONT = 2.25, — Used when calculating the calue of fronts in the battle plan system

PLAN_PROVINCE_MEDIUM_VP_IMPORTANCE_FRONT = 2.25, — 用于计算作战计划系统中前线价值的参数

PLAN_PROVINCE_HIGH_VP_IMPORTANCE_FRONT = 2.75, — Used when calculating the calue of fronts in the battle plan system

PLAN_PROVINCE_HIGH_VP_IMPORTANCE_FRONT = 2.75, ——用于计算作战计划系统中前线价值



PLAN_SHARED_FRONT_PROV_IMPORTANCE_FACTOR = 0.8,	— If fornt orders share end provinces, they should each have a somewhat reduced prio due to it being shared.

PLAN_SHARED_FRONT_PROV_IMPORTANCE_FACTOR = 0.8，——若前线命令共享终点省份，则各方优先级应适当降低，因其为共享目标。



PLAN_PORVINCE_PORT_BASE_IMPORTANCE = 12.0,		— Added importance for area defense province with a port

PLAN_PORVINCE_PORT_BASE_IMPORTANCE = 12.0, — 增加对有港口区域防御省份的重要性评分

PLAN_PORVINCE_PORT_LEVEL_FACTOR = 1.5,			— Bonus factor for port level

PLAN_PORVINCE_PORT_LEVEL_FACTOR = 1.5, — 港口等级加成系数

PLAN_PORVINCE_AIRFIELD_BASE_IMPORTANCE = 3.0,	— Added importance for area defense province with air field

PLAN_PORVINCE_AIRFIELD_BASE_IMPORTANCE = 3.0, —— 为拥有机场的区域防御省份增加的权重值

PLAN_PORVINCE_AIRFIELD_POPULATED_FACTOR = 1.5,	— Bonus factor when an airfield has planes on it

PLAN_PORVINCE_AIRFIELD_POPULATED_FACTOR = 1.5, —— 当机场上有飞机时的奖励系数

PLAN_PORVINCE_AIRFIELD_LEVEL_FACTOR = 0.25,		— Bonus factor for airfield level

PLAN_PORVINCE_AIRFIELD_LEVEL_FACTOR = 0.25, —— 机场等级加成系数

PLAN_PORVINCE_RESISTANCE_BASE_IMPORTANCE = 10.0, — Used when calculating the calue of defense area provinces for the battle plan system (factored by resistance level)

PLAN_PORVINCE_RESISTANCE_BASE_IMPORTANCE = 10.0, — 在战斗计划系统中计算防御区域省份价值时使用（受抵抗水平影响）

PLAN_PROVINCE_VP_PORT_FACTOR = 0.25,

PLAN_PROVINCE_VP_PORT_FACTOR = 0.25,



— These need to result in province value > 1.0 for it to matter.

— 这些需要使省份价值超过1.0才会产生影响。

PLAN_AREA_DEFENSE_ENEMY_CONTROLLER_SCORE = 25.0,— Score applied to provinces in the defense area order controlled by enemies

PLAN_AREA_DEFENSE_ENEMY_CONTROLLER_SCORE = 25.0，——应用于防御区域命令中由敌方控制的省份的分数

PLAN_AREA_DEFENSE_ENEMY_UNIT_FACTOR = -2.0,		— Factor applied to province score in area defense order per enemy unit in that province

PLAN_AREA_DEFENSE_ENEMY_UNIT_FACTOR = -2.0, —— 在区域防御命令中，该省份每存在一个敌方单位对省份得分施加的系数

PLAN_AREA_DEFENSE_FORT_IMPORTANCE = 0.25,		— Used when calculating the value of defense area provinces for the battle plan system, works as multipliers on the rest

PLAN_AREA_DEFENSE_FORT_IMPORTANCE = 0.25, ——用于计算战斗计划系统中防御区域省份的价值时，作为其余部分的乘数

PLAN_AREA_DEFENSE_COASTAL_FORT_IMPORTANCE = 3.0,— Used when calculating the value of defense area provinces for the battle plan system

PLAN_AREA_DEFENSE_COASTAL_FORT_IMPORTANCE = 3.0,— 用于计算作战计划系统中防御区域省份的价值

PLAN_AREA_DEFENSE_COAST_NO_FORT_IMPORTANCE = 1.1,— Used when calculating the value of defense area provinces for the battle plan system

PLAN_AREA_DEFENSE_COAST_NO_FORT_IMPORTANCE = 1.1,— 用于战斗计划系统中计算防御区域省份价值时

PLAN_AREA_DEFENSE_HAS_RAIL_IMPORTANCE = 1.5,	— Used when calculating the value of defense area provinces for the battle plan system

PLAN_AREA_DEFENSE_HAS_RAIL_IMPORTANCE = 1.5, ——用于计算战斗计划系统中防御区域省份的价值

PLAN_AREA_DEFENSE_HAS_SUPPLY_NODE = 20.0,		— Used when calculating the value of defense area provinces for the battle plan system

PLAN_AREA_DEFENSE_HAS_SUPPLY_NODE = 20.0, —— 用于计算防御区域省份在作战计划系统中的价值

PLAN_AREA_DEFENSE_FACILITY = 15.0, — Used when calculating the value of defense area provinces for the battle plan system

PLAN_AREA_DEFENSE_FACILITY = 15.0, ——用于计算作战计划系统中防御区域省份价值



PLAN_STICKINESS_FACTOR = 100.0,					— Factor used in unitcontroller when prioritizing units for locations

PLAN_STICKINESS_FACTOR = 100.0, —— 单位控制器中为位置分配优先级时使用的因子



PLAN_PROVINCE_PRIO_DISTRIBUTION_MIN = 0.7,		— Lowest fraction of divisions that will be distributed based on province priority

PLAN_PROVINCE_PRIO_DISTRIBUTION_MIN = 0.7, — 基于省份优先级分配的师团最低比例

PLAN_PROVINCE_PRIO_DISTRIBUTION_MAX = 1.0,		— Highest fraction of divisions that will be distributed based on province priority

PLAN_PROVINCE_PRIO_DISTRIBUTION_MAX = 1.0, — 根据省份优先级分配的师团最高比例

PLAN_PROVINCE_PRIO_DISTRIBUTION_DPP_HIGH = 3.0, — At what divisions per province should we use PLAN_PROVINCE_PRIO_DISTRIBUTION_MIN

PLAN_PROVINCE_PRIO_DISTRIBUTION_DPP_HIGH = 3.0, — 当每个省份的师团数量达到多少时，我们应使用PLAN_PROVINCE_PRIO_DISTRIBUTION_MIN

PLAN_PROVINCE_PRIO_DISTRIBUTION_DPP_LOW = 2.0,	— At what divisions per province should we use PLAN_PROVINCE_PRIO_DISTRIBUTION_MAX

PLAN_PROVINCE_PRIO_DISTRIBUTION_DPP_LOW = 2.0, — 当每个省份的分区数达到多少时，我们应使用PLAN_PROVINCE_PRIO_DISTRIBUTION_MAX



PLAN_EXECUTE_CAREFUL_LIMIT = 25, — When looking for an attack target, this score limit is required in the battle plan to consider province for attack

PLAN_EXECUTE_CAREFUL_LIMIT = 25, —— 在寻找攻击目标时，作战计划中需要达到此分数门槛才会将该省份纳入攻击考量

PLAN_EXECUTE_BALANCED_LIMIT = 0, — When looking for an attack target, this score limit is required in the battle plan to consider province for attack

PLAN_EXECUTE_BALANCED_LIMIT = 0, — 在寻找攻击目标时，作战计划中需达到此分数阈值才会考虑将该省份列为攻击目标

PLAN_EXECUTE_RUSH = -200, — When looking for an attack target, this score limit is required in the battle plan to consider province for attack

PLAN_EXECUTE_RUSH = -200, —— 在寻找攻击目标时，战斗计划中需要满足该分数限制才会考虑对该省份发起攻击

PLAN_EXECUTE_CAREFUL_MAX_FORT = 5,				— If execution mode is set to careful, units will not attack provinces with fort levels greater than or equal to this

PLAN_EXECUTE_CAREFUL_MAX_FORT = 5, — 当执行模式设为谨慎时，单位不会攻击堡垒等级大于或等于此值的省份



— order by EExecutionType: careful, balanced, rush, <skip>, rush_weak

— 按EExecutionType排序：谨慎、平衡、急速、<跳过>、急速_弱

PLAN_EXECUTE_SUPPLY_CHECK = { 1.0, 0.0, 0.0, 1.0, 0.0 }, — for each execution mode how careful should we be with supply (1.0 means full required supply available, zero is no limit).

PLAN_EXECUTE_SUPPLY_CHECK = { 1.0, 0.0, 0.0, 1.0, 0.0 }, —— 针对每种执行模式对补给应持多谨慎态度（1.0表示需确保全部补给到位，0表示无限制）。



PLAN_MAX_PROGRESS_TO_JOIN = 0.50,				— If Lower progress than this, probably needs support

PLAN_MAX_PROGRESS_TO_JOIN = 0.50, — 若进度低于此值，则可能需要协助



PLAN_COHESION_WEIGHTS = { 1.0, 40.0, 80.0 }, 	— for each cohesion setting, how keen on relocating from distance should we be? (default 1.0), higher weight = shorter max distance

PLAN_COHESION_WEIGHTS = { 1.0, 40.0, 80.0 }, — 对于每种凝聚力设置，我们应从多远距离开始考虑搬迁？（默认1.0），权重越高 = 最大距离越短

PLAN_COHESION_DISTANCE_MAX_WHEN_LEFT_BEHIND = 38,	—Unused and deprecated - will be removed in next major version.

PLAN_COHESION_DISTANCE_MAX_WHEN_LEFT_BEHIND = 38, ——已弃用且不再使用 - 将在下一个主要版本中移除。



PLAN_BLITZ_OPTIMISM = 0.2,						— Additional combat balance value in favor of blitzing side when considering targets (not a combat bonus, just offsets planning)

PLAN_BLITZ_OPTIMISM = 0.2, —— 在考虑目标时为闪电战一方增加的额外战斗平衡值（非战斗加成，仅用于抵消计划性劣势）

MIN_BALANCE_SCORE_TO_PROCEED_ATTACK = 0.2,		—A combat balance score of less than this will prevent auto attacking

MIN_BALANCE_SCORE_TO_PROCEED_ATTACK = 0.2, ——战斗平衡分低于此值将禁止自动攻击

DYNAMIC_MODIFIER_ATTACK_BIAS = 1.0,				—This factors the weighting bias of dynamic attack modifiers

DYNAMIC_MODIFIER_ATTACK_BIAS = 1.0, ——此数值调节动态攻击修正因子的权重偏向



FLANKED_PROVINCES_COUNT = 3,					— Attacker has to attack from that many provinces for the attack to be considered as flanking

被包围省份数 = 3, — 攻击方必须从这么多省份发起进攻，才能被视为侧翼攻击

EQUIPMENT_REPLACEMENT_RATIO = 0.1,				— Equipment min ratio after blocking the equipment type

设备替换比例 = 0.1，——在封锁该类型设备后，设备的最小保留比例

NUKE_DELAY_HOURS = 2,							— How many hours does it take for the nuclear drop to happen

NUKE_DELAY_HOURS = 2, —— 核弹投放需要多少小时才能发生

PARADROP_PENALTY = -0.3, 						— Combat penalty when recently paradropped

PARADROP_PENALTY = -0.3, —— 最近进行过空降作战时的战斗惩罚

PARADROP_HOURS = 48,							— time paratroopers suffer penalties in combat

PARADROP_HOURS = 48, — 伞兵在战斗中受到惩罚的持续时间

COMBAT_SUPPLY_LACK_ATTACKER_ATTACK = -0.25, — attack combat penalty for attacker if out of supply

COMBAT_SUPPLY_LACK_ATTACKER_ATTACK = -0.25, — 攻击方若补给不足，攻击战斗惩罚

COMBAT_SUPPLY_LACK_ATTACKER_DEFEND = -0.65, — defend combat penalty for attacker if out of supply

COMBAT_SUPPLY_LACK_ATTACKER_DEFEND = -0.65, — 若攻击方补给不足，则防御战斗惩罚

COMBAT_SUPPLY_LACK_DEFENDER_ATTACK = -0.35, — attack combat penalty for defender if out of supply

COMBAT_SUPPLY_LACK_DEFENDER_ATTACK = -0.35, — 补给不足时防御方攻击战斗惩罚

COMBAT_SUPPLY_LACK_DEFENDER_DEFEND = -0.15, — defend combat penalty for defender if out of supply

战斗补给不足_防御方_防御 = -0.15, — 补给不足时防御方在防御战斗中的惩罚

COMBAT_STACKING_START = 5,						— at what nr of divisions stacking penalty starts

COMBAT_STACKING_START = 5, — 堆叠惩罚开始的师数量

COMBAT_STACKING_EXTRA = 3, — extra stacking from directions

COMBAT_STACKING_EXTRA = 3, ——来自方向的额外叠加

COMBAT_STACKING_PENALTY = -0.02, — how much stackign penalty per division

COMBAT_STACKING_PENALTY = -0.02, —— 每支部队的叠加惩罚值

COMBAT_OVER_WIDTH_PENALTY = -1,					— over combat width penalty per %.

COMBAT_OVER_WIDTH_PENALTY = -1, ——超出战斗宽度每百分比的惩罚

COMBAT_OVER_WIDTH_PENALTY_MAX = -0.33,			— over combat width max (when you cant join no more).

COMBAT_OVER_WIDTH_PENALTY_MAX = -0.33, —— 超过战斗宽度上限时的惩罚（当无法再加入更多部队时）。

RETREAT_SPEED_FACTOR = 0.25, — speed bonus when retreating

撤退速度系数 = 0.25，——撤退时的速度加成

WITHDRAWING_SPEED_FACTOR = 0.15,				— speed bonus when withdrawing

WITHDRAWING_SPEED_FACTOR = 0.15, — 撤退时的速度加成

STRATEGIC_SPEED_INFRA_BASE = 5.0, — Base speed of strategic redeployment when not on railways

战略调动基础速度 = 5.0, —— 未在铁路上时的战略再部署基础速度

STRATEGIC_SPEED_INFRA_MAX = 10.0, — Additional speed of strategic redeployment on max-level infrastructure

STRATEGIC_SPEED_INFRA_MAX = 10.0, — 最高等级基础设施下战略调遣的额外速度

STRATEGIC_SPEED_RAIL_BASE = 15.0, — Base speed of strategic redeployment when on railways

STRATEGIC_SPEED_RAIL_BASE = 15.0，——铁路战略调遣的基础速度

STRATEGIC_SPEED_RAIL_MAX = 25.0, — Additional speed of strategic redeployment on max-level railways

STRATEGIC_SPEED_RAIL_MAX = 25.0, — 最高等级铁路上战略调遣的额外速度

STRATEGIC_REDEPLOY_ORG_RATIO = 0.1,				— Ratio of max org while strategic redeployment

STRATEGIC_REDEPLOY_ORG_RATIO = 0.1, —— 战略重新部署时最大组织度的比例

BATALION_NOT_CHANGED_EXPERIENCE_DROP = 0.0,		— Division experience drop if unit has same batalion

BATALION_NOT_CHANGED_EXPERIENCE_DROP = 0.0, —— 若单位拥有相同营部，则师团经验值下降

BATALION_CHANGED_EXPERIENCE_DROP = 0.5,			— Division experience drop if unit has different batalion

BATALION_CHANGED_EXPERIENCE_DROP = 0.5, — 若单位所属营不同则师团经验值下降

ARMOR_VS_AVERAGE = 0.4,			 — how to weight in highest armor & pen vs the division average

ARMOR_VS_AVERAGE = 0.4, —— 如何根据最高装甲与穿透力相对于师平均水平进行加权

PEN_VS_AVERAGE = 0.4,

PEN_VS_AVERAGE = 0.4,



LAND_EQUIPMENT_BASE_COST = 10,					— Cost in XP to upgrade a piece of equipment one level is base + ( total levels * ramp )

陆地装备基础成本 = 10，——用经验值升级一件装备一个等级的成本是基础值 + (总等级数 * 斜率)

LAND_EQUIPMENT_RAMP_COST = 5,

陆地装备坡道成本 = 5,

NAVAL_EQUIPMENT_BASE_COST = 25,

NAVAL_EQUIPMENT_BASE_COST = 25,

NAVAL_EQUIPMENT_RAMP_COST = 5,

NAVAL_EQUIPMENT_RAMP_COST = 5,

AIR_EQUIPMENT_BASE_COST = 25,

空中设备基础成本 = 25,

AIR_EQUIPMENT_RAMP_COST = 5,

空中设备停机坪费用 = 5,



FASTER_ORG_REGAIN_LEVEL = 0.25,

FASTER_ORG_REGAIN_LEVEL = 0.25，

FASTER_ORG_REGAIN_MULT = 1.0,

FASTER_ORG_REGAIN_MULT = 1.0,

SLOWER_ORG_REGAIN_LEVEL = 0.80,

SLOWER_ORG_REGAIN_LEVEL = 0.80,

SLOWER_ORG_REGAIN_MULT = -0.5,

SLOWER_ORG_REGAIN_MULT = -0.5,



DISBAND_MANPOWER_LOSS = 0.0,

解散兵力损失 = 0.0,

MIN_DIVISION_DEPLOYMENT_TRAINING = 0.2,			— Min level of division training

MIN_DIVISION_DEPLOYMENT_TRAINING = 0.2, —— 最低师级部署训练水平



FRONTLINE_EXPANSION_FACTOR = 0.6,				— When attacking along a frontline, how much should units spread out as they advance. 0.0 means head (more or less) directly to the drawn frontline, with no distractions

FRONTLINE_EXPANSION_FACTOR = 0.6, —— 沿前线进攻时，部队在推进过程中应分散多少。0.0 表示（大致）直接朝向绘制的前线前进，不受干扰

FRONT_MIN_PATH_TO_REDEPLOY = 8,					— If a units path is at least this long to reach its front location, it will strategically redeploy.

FRONT_MIN_PATH_TO_REDEPLOY = 8, —— 若单位前往前线位置的路径长度不低于此值，将执行战略重新部署。

ARMY_INITIATIVE_REINFORCE_FACTOR = 0.25,		— scales initiative for reinforce chance

ARMY_INITIATIVE_REINFORCE_FACTOR = 0.25, — 用于调整增援机会的主动性系数



BASE_CAPTURE_EQUIPMENT_RATIO = 0.0,				— after a successful land combat, ratio of the equipments that are being captured/salvaged from enemy’s lost equipment

BASE_CAPTURE_EQUIPMENT_RATIO = 0.0, —— 在成功的地面战斗后，从敌方损失装备中缴获/回收装备的比例



ACCLIMATIZATION_IN_COMBAT_SPEED_FACTOR = 3,		— Acclimatization speed multiplier while being in combat.

ACCLIMATIZATION_IN_COMBAT_SPEED_FACTOR = 3, — 战斗状态下的环境适应速度倍率。

ACCLIMATIZATION_SPEED_GAIN = 0.15,				— A variable used to balance the overall speed of gaining the acclimatization

适应速度增益 = 0.15, —— 用于平衡整体适应速度的变量

ACCLIMATIZATION_LOSS_SPEED_FACTOR = 2.0,		— Loosing one acclimatization while being under affect of the opposite climate should cause it to drop down much faster than gaining.

ACCLIMATIZATION_LOSS_SPEED_FACTOR = 2.0, — 处于相反气候影响下时，每失去一点适应值，其下降速度应远快于获得时的速度。



PROMOTE_LEADER_CP_COST = 40.0,					— cost of promoting a leader

PROMOTE_LEADER_CP_COST = 40.0, — 晋升领导者的成本



FIELD_MARSHAL_ARMY_BONUS_RATIO = 0.5, — ratio to apply regular bonuses FM bonuses to armies

FIELD_MARSHAL_ARMY_BONUS_RATIO = 0.5, ——常规加成与元帅加成对陆军适用比例



FIELD_MARSHAL_XP_RATIO = 0.3,					— xp gain ratio for army group leaders

FIELD_MARSHAL_XP_RATIO = 0.3, — 集团军领袖的经验获取比率



GARRISON_ORDER_ARMY_CAP_FACTOR = 3.0,			— armies gets increased cap when they are garrisoned

GARRISON_ORDER_ARMY_CAP_FACTOR = 3.0, — 军队驻防时容量上限提升



COMMANDER_LEVEL_UP_STAT_COUNT = 3, 				— num stats gained on level up

指挥官升级属性点数 = 3, ——升级时获得的属性数量

COMMANDER_LEVEL_UP_STAT_WEIGHTS = {5, 5, 5, 5}, — level up stat random base weights attack, defense, planning, logistics

COMMANDER_LEVEL_UP_STAT_WEIGHTS = {5, 5, 5, 5}, — 升级属性随机基础权重 攻击、防御、策划、后勤



NAVY_LEADER_LEVEL_UP_STAT_WEIGHTS = {5, 5, 5, 5}, — level up stat random base weights attack, defense, maneuvering, coordination

NAVY_LEADER_LEVEL_UP_STAT_WEIGHTS = {5, 5, 5, 5}, —— 升级属性随机基础权重 攻击、防御、机动、协调



UNIT_LEADER_INITIAL_TRAIT_SLOT = { 				— trait slot for 0 level leader

UNIT_LEADER_INITIAL_TRAIT_SLOT = { —— 0级领袖的特质槽位

1.0, — field marshal

1.0，— 元帅

0.0, — corps commander

0.0，——军团长

1.0, — navy general

1.0，——海军上将





0.0, — operative


0.0，——运作中


},



UNIT_LEADER_TRAIT_SLOT_PER_LEVEL = { 			— num extra traits on each level

每级额外特质槽位 = { —— 每级增加的特质数量

0.5, — field marshal

0.5，—— 元帅

0.5, — corps commander

0.5，——军长

0.5, — navy general

0.5，——海军上将





0.0, — operative


0.0，——运作中


},



UNIT_LEADER_USE_NONLINEAR_XP_GAIN = true, — Whether unit leader XP gain is scaled by 1/<nr_of_traits>

UNIT_LEADER_USE_NONLINEAR_XP_GAIN = true, — 是否将单位领袖的经验值获取按1/<特质数量>的比例进行非线性缩放



HOURS_REQ_REJOIN_BORDER_WAR_FOR_INJURED_UNITS = 336, — minimum hours required for units to rejoin border wars

HOURS_REQ_REJOIN_BORDER_WAR_FOR_INJURED_UNITS = 336, — 受伤单位重新加入边境战争所需的最少小时数



NEW_COMMANDER_RANDOM_PERSONALITY_TRAIT_CHANCES = { — chances to gain a personality trait for new generals

新指挥官随机个性特质获取几率 = { — 新将领获得个性特质的概率

0.5, — 50% for first trait

0.5，—— 第一个特性的50%

0.15 — 15% for second trait after that

0.15 — 之后第二个特性的15%

},



NEW_COMMANDER_RANDOM_BASIC_TRAIT_CHANCES = { — chances to gain a basic trait for new generals

新指挥官随机基础特质几率 = { ——为新将领获取基础特质的概率

},



NEW_COMMANDER_RANDOM_STATUS_TRAIT_CHANCES = { — chances to gain a status trait for new generals

新指挥官随机状态特质获取几率 = { ——新将领获得状态特质的概率

},



NEW_OPERATIVE_RANDOM_PERSONALITY_TRAIT_CHANCES = { — chances to gain a personality trait for new operatives

新特工随机性格特质获得概率 = { — 新特工获得性格特质的几率

0.5, — 50% for first trait

0.5，—— 第一个特性的50%

0.1 — 10% for second trait after that

0.1 — 之后第二个特性为10%

},



NEW_OPERATIVE_RANDOM_BASIC_TRAIT_CHANCES = { — chances to gain a basic trait for new operatives

新特工获得基础特性的概率 = {

0.25, — 25% for first trait

0.25，第一个特性为25%

0.05 — 5% for second trait after that

0.05 —— 之后第二个特性的5%

},



NEW_OPERATIVE_RANDOM_STATUS_TRAIT_CHANCES = { — chances to gain a status trait for new operatives

NEW_OPERATIVE_RANDOM_STATUS_TRAIT_CHANCES = { — 新特工获得状态特性的概率

},



NEW_COMMANDER_RANDOM_SKILL_CHANCES = { — chances to give a random stat skill for new operatives

新干员随机技能几率 = { ——为新干员赋予随机属性技能的几率

},



NEW_NAVY_LEADER_RANDOM_SKILL_CHANCES = { — chances to give a random stat skill point for a new admiral

新海军将领随机技能点数几率 = { ——为新上将分配随机属性技能点的几率

},



UNIT_LEADER_MODIFIER_COOLDOWN_ON_GROUP_CHANGE = 15,		— time in days for a unit leader to regain its modifiers

单位领导更换后的冷却天数 = 15, ——单位领导恢复其修饰符所需的时间（以天为单位）

UNIT_LEADER_ASSIGN_TRAIT_COST = 15.0,					— cost to assign a new trait to a unit leader

UNIT_LEADER_ASSIGN_TRAIT_COST = 15.0, — 为部队指挥官分配新特性的成本

ATTACHED_WINGS_ORDER_UPDATE_DAYS = 5,					— Days untill the attached wing will update the order

ATTACHED_WINGS_ORDER_UPDATE_DAYS = 5, — 附加机翼更新订单前的天数



BORDER_WAR_WIN_DAYS_AGAINST_EMPTY_OPPONENTS = 14,		— border wars will be automatically won if no opponent shows up for this duration

BORDER_WAR_WIN_DAYS_AGAINST_EMPTY_OPPONENTS = 14, — 边境战争将在对手持续缺席该时长后自动获胜



MAX_RELATIVE_COMBAT_DAMAGE_TO_MODIFY_XP = 4.0,			— you gain more XP if you are doing more damage relative to enemy, this is the max relative amount to gain following RATe

MAX_RELATIVE_COMBAT_DAMAGE_TO_MODIFY_XP = 4.0, —— 若你对敌人造成的伤害相对较高，将获得更多经验值，此数值为根据RATe计算可获得的最高相对伤害比例

XP_GAIN_FACTOR_FOR_MAX_RELATIVE_COMBAT_DAMAGE = 4.0,	— XP factor scaling for max relative combat damage

XP_GAIN_FACTOR_FOR_MAX_RELATIVE_COMBAT_DAMAGE = 4.0, — 最大相对战斗伤害的经验值增益系数



XP_DECAY_RATE_PER_HOUR_IN_COMBAT = 0.03,				— you get reduced XP as combat drags

XP_DECAY_RATE_PER_HOUR_IN_COMBAT = 0.03, — 随着战斗时间延长，获得的经验值会减少

MIN_XP_RATE_TO_DECAY = 0.1,								— minimum XP factor for dragged combats

MIN_XP_RATE_TO_DECAY = 0.1, ——拖拽战斗的最低经验值衰减系数



XP_GAIN_PER_OVERRUN_UNIT = 35.0,						— fixed XP gain per overrun unit

XP_GAIN_PER_OVERRUN_UNIT = 35.0, —— 每超限单位固定经验值增益

XP_GAIN_FOR_SHATTERING = 35.0, — fixed XP gain per shattered unit

XP_GAIN_FOR_SHATTERING = 35.0, — 每击碎单位固定获得的经验值



UNIT_UPKEEP_ATTRITION = 0.00,							—Constant attrition value applied to armies.

单位维护损耗 = 0.00, ——对军队施加的固定损耗值。



FUEL_PENALTY_START_RATIO = 0.25,				— ratio of fuel in an army to start getting penalties

FUEL_PENALTY_START_RATIO = 0.25, — 军队中燃料比例达到此值时开始受到惩罚



SURPLUS_SUPPLY_RATIO_FOR_ZERO_FUEL_FLOW = 0.5,		— if a supply chunk has more supply needed than this ratio + 1 compared to its max supply flow, the units inside the chiunk will get no fuel

零燃料流量的过剩供应比率 = 0.5, —— 如果某个供应区块的需求供应量超过其最大供应流量与此比率加1的和，则该区块内单位将无法获得燃料



ARMY_MAX_FUEL_FLOW_MULT = 2.0,					— max fuel ratio that an army can get per hour, multiplied by supply situation

ARMY_MAX_FUEL_FLOW_MULT = 2.0, — 军队每小时可获得的最大燃料比例，乘以补给状况



ARMY_FUEL_COST_MULT = 0.5,						— fuel cost multiplier for all army related stuff

ARMY_FUEL_COST_MULT = 0.5, — 所有军队相关事务的燃料成本乘数

ARMY_COMBAT_FUEL_MULT = 1.0,					— fuel consumption ratio in combat (plus ARMY_MOVEMENT_FUEL_MULT if you are also moving. ie offensive combat)

ARMY_COMBAT_FUEL_MULT = 1.0, — 战斗中燃料消耗比率（若同时移动则需加上ARMY_MOVEMENT_FUEL_MULT，例如进攻性战斗）

ARMY_TRAINING_FUEL_MULT = 1.0,					— fuel consumption ratio while training

陆军训练燃料消耗系数 = 1.0, — 训练时的燃料消耗比例

ARMY_MOVEMENT_FUEL_MULT = 1.0,					— fuel consumption ratio while moving

ARMY_MOVEMENT_FUEL_MULT = 1.0, —— 移动时的燃料消耗比例

ARMY_NAVAL_TRANSFER_FUEL_MULT = 0.0,			— fuel consumption ratio while naval transferring

ARMY_NAVAL_TRANSFER_FUEL_MULT = 0.0, ——海军运输时的燃料消耗比率

ARMY_STRATEGIC_DEPLOYMENT_FUEL_MULT = 0.0,		— fuel consumption ratio while doing strategic deployment

陆军战略部署燃料消耗倍数 = 0.0, —— 执行战略部署时的燃料消耗比率

ARMY_IDLE_FUEL_MULT = 0.0,						— fuel consumption ratio while just existing

ARMY_IDLE_FUEL_MULT = 0.0, —— 部队待机状态下的燃料消耗比例

FUEL_EFFICIENCY_RAID_MULTIPLIER = 1.0,			— convoy raid multiplier for fuel sunk

燃油效率袭击系数 = 1.0, —— 针对被击沉燃油的护航袭击乘数



FUEL_FLOW_PENALTY_FOR_SUPPLY_CHUNK_EDGE_RATIO = 0.5, — supply flow that is limited by control of incoming edge provinces will have lesser effect on fuel flow

FUEL_FLOW_PENALTY_FOR_SUPPLY_CHUNK_EDGE_RATIO = 0.5, —— 受入省边缘控制的补给流对燃油流动的影响将减弱



OUT_OF_FUEL_EQUIPMENT_MULT = 0.1,				— ratio of the stats that you get from equipments that uses fuel and you lack it

OUT_OF_FUEL_EQUIPMENT_MULT = 0.1, — 当你缺乏燃料时，使用燃料的装备所提供的属性比率

OUT_OF_FUEL_SPEED_MULT = 0.4,					— speed mult that armies get when out of fuel

OUT_OF_FUEL_SPEED_MULT = 0.4, — 军队燃油耗尽时获得的速度系数

OUT_OF_FUEL_TRAINING_XP_GAIN_MULT = 0.0,		— xp gain mult from training when a unit is out of fuel

OUT_OF_FUEL_TRAINING_XP_GAIN_MULT = 0.0, — 当单位燃料耗尽时，训练获得的经验值倍数

FUEL_CAPACITY_DEFAULT_HOURS = 96,				— default capacity if not specified

FUEL_CAPACITY_DEFAULT_HOURS = 96，— 未指定时的默认容量



MAX_ESTIMATED_PLAN_UNITS_NOT_IN_PLACE_FACTOR = -0.6, 	—Scaled by % of units not in place. Used to be a flat -50%

MAX_ESTIMATED_PLAN_UNITS_NOT_IN_PLACE_FACTOR = -0.6, ——按未到位单位百分比进行缩放。原为固定值-50%。

DAMAGE_SPLIT_ON_FIRST_TARGET = 0.35,			—% of damage dealt to the first target in a combat. The rest will be split amongst subsequent targets. Modifiers can affect this up to a maximum of 0.9. That value must not be exposed as a define.

DAMAGE_SPLIT_ON_FIRST_TARGET = 0.35, ——战斗中首个目标承受的伤害比例。剩余伤害将在后续目标间分配。修饰项最多可将其提升至0.9。该数值不得作为定义公开。



NEW_ARMY_LEADER_LEVEL_CHANCES = {				— chances for new army leaders to start at a given level

新军队将领初始等级几率 = { — 新将领以特定等级开始的概率

0.95, — 95% for level one

0.95，即一级水平为95%

0.05 — 5% for level two

0.05 —— 二级5%

— 0% for level three to ten

— 3级至10级为0%

}

},



NAir = {

NAir = {

AIR_WING_FLIGHT_SPEED_MULT = 0.02,					— Global speed multiplier for airplanes (affects fe.transferring to another base)

AIR_WING_FLIGHT_SPEED_MULT = 0.02, —— 飞机全局速度乘数（影响 fe.transferring 至另一基地的过程）

AIR_WING_MAX_STATS_ATTACK = 100,					— Max stats

AIR_WING_MAX_STATS_ATTACK = 100, — 最大攻击属性

AIR_WING_MAX_STATS_DEFENCE = 100,

AIR_WING_MAX_STATS_DEFENCE = 100,

AIR_WING_MAX_STATS_AGILITY = 100,

AIR_WING_MAX_STATS_AGILITY = 100,

AIR_WING_MAX_STATS_SPEED = 800,

AIR_WING_MAX_STATS_SPEED = 800,

AIR_WING_MAX_STATS_BOMBING = 100,

AIR_WING_MAX_STATS_BOMBING = 100,

AIR_WING_MAX_SIZE = 1000, 							— Max amount of airplanes in wing

AIR_WING_MAX_SIZE = 1000, — 飞行编队中飞机的最大数量

AIR_WING_AVERAGE_SIZE = 100, 						— Eyeballed average amount of airplanes in wing. Used when calculating air volunteer.

AIR_WING_AVERAGE_SIZE = 100, —— 目测估算的航空联队平均飞机数量。用于计算航空志愿兵力时参考。

AIR_WING_BOMB_DAMAGE_FACTOR = 2,					— Used to balance the damage done while bombing.

AIR_WING_BOMB_DAMAGE_FACTOR = 2, —— 用于平衡轰炸时造成的伤害。

BIGGEST_AGILITY_FACTOR_DIFF = 4.0,					— biggest factor difference in agility for doing damage (caps to this)

最大敏捷系数差 = 4.0, —— 造成伤害时敏捷系数的最大差异（以此值为上限）

BIGGEST_SPEED_FACTOR_DIFF = 3.5,					— biggest factor difference in speed for doing damage (caps to this)

最大速度差异系数 = 3.5, — 造成伤害时速度的最大差异系数（以此为上限）

TOP_SPEED_DAMAGE_BONUS_FACTOR = 0.025,				— A factor for scaling the top speed of a plane into damage buff. If an attacking wing has a speed advantage of any form their speed value will be converted into a percentage bonus with this modifier

TOP_SPEED_DAMAGE_BONUS_FACTOR = 0.025, —— 将飞机最高速度转化为伤害增益的系数。若攻击方机翼拥有任何形式的速度优势，其速度值将通过此修正系数转换为百分比加成

COMBAT_DAMAGE_STATS_MULTILPIER = 0.2,

战斗伤害统计倍数 = 0.2,

COMBAT_BETTER_AGILITY_DAMAGE_REDUCTION = 0.45, 		— How much the better agility (than opponent’s) can reduce their damage to us.

COMBAT_BETTER_AGILITY_DAMAGE_REDUCTION = 0.45, — 较高的敏捷值（相对于对手）能减少对手对我们造成伤害的比例。

COMBAT_BETTER_SPEED_DAMAGE_INCREASE = 0.65, 		— How much the better Speed (than opponent’s) can reduce increase our damage to them.

COMBAT_BETTER_SPEED_DAMAGE_INCREASE = 0.65, — 优于对手的速度能在多大程度上增加我们对他们造成的伤害。

— Both of these defines are combined with their sister FACTOR_DIFF defines to create defense or offensive buffs

——这两个定义与其对应的FACTOR_DIFF定义相结合，用于创建防御或攻击增益效果

— In both cases the maximum bonus or reduction is (BIGGEST_X_FACTOR_DIFF - 1) * COMBAT_BETTER_X_DAMAGE_Y * Damage

——在这两种情况下，最大增益或减益均为（BIGGEST_X_FACTOR_DIFF - 1）* COMBAT_BETTER_X_DAMAGE_Y * 伤害值

COMBAT_MAX_WINGS_AT_ONCE = 10000, 						— Max amount of air wings in one combat simulation. The higher value, the quicker countries may loose their wings. It’s a gameplay balance value.

COMBAT_MAX_WINGS_AT_ONCE = 10000, — 单次战斗模拟中的最大航空联队数量。数值越高，国家可能更快损失其航空联队。这是一个游戏平衡参数。

COMBAT_MAX_WINGS_AT_GROUND_ATTACK = 10000,	 	— we can really pounce a land strike and escalate

COMBAT_MAX_WINGS_AT_GROUND_ATTACK = 10000, —— 我们可以真正发动地面打击并升级局势

COMBAT_MAX_WINGS_AT_ONCE_PORT_STRIKE = 10000, — we can really pounce a naval strike and escalate

COMBAT_MAX_WINGS_AT_ONCE_PORT_STRIKE = 10000, — 我们可以真正发动一次海上突袭并升级局势

AIR_REGION_SUPERIORITY_PIXEL_SCALE = 0.04, — air superiority scale = superiority/(pixels*this)

AIR_REGION_SUPERIORITY_PIXEL_SCALE = 0.04, — 制空权比例 = 制空权值/(像素数*此值)

COMBAT_MULTIPLANE_CAP = 3.0,						— How many planes can shoot at each plane on other side ( if there are 100 planes we are atttacking COMBAT_MULTIPLANE_CAP * 100 of our planes can shoot )

COMBAT_MULTIPLANE_CAP = 3.0, —— 每架敌方飞机可同时遭受多少架己方飞机的攻击（若有100架敌方飞机，则最多可投入COMBAT_MULTIPLANE_CAP * 100架己方飞机参与攻击）

COMBAT_DAMAGE_SCALE = 1,							— Higher value = more shot down planes

战斗伤害比例 = 1, — 数值越高，被击落的飞机越多

COMBAT_DAMAGE_SCALE_CARRIER = 5,					— same as above but used inside naval combat for carrier battles

COMBAT_DAMAGE_SCALE_CARRIER = 5, ——同上，但在海军战斗中专用于航母对战

DETECT_CHANCE_FROM_OCCUPATION = 0.10, 				— How much the controlled provinces in area affects the air detection base value.

DETECT_CHANCE_FROM_OCCUPATION = 0.10, —— 区域内被控制的省份对空中侦察基础值的影响程度。

DETECT_CHANCE_FROM_RADARS = 0.5, 					— How much the radars in area affects detection chance.

DETECT_CHANCE_FROM_RADARS = 0.5, —— 区域内雷达对探测几率的影响程度。

DETECT_CHANCE_FROM_AIRCRAFTS_EFFECTIVE_COUNT = 3000, — Max amount of aircrafts in region to give full detection bonus.

DETECT_CHANCE_FROM_AIRCRAFTS_EFFECTIVE_COUNT = 3000, — 区域内航空器数量上限，以提供完整的探测加成。

DETECT_CHANCE_FROM_AIRCRAFTS = 0.8,					— How much aircrafts in region improves air detection (up to effective count).

DETECT_CHANCE_FROM_AIRCRAFTS = 0.8, —— 区域内飞机数量对空中侦查效果的提升程度（上限为有效数量）。

DETECT_CHANCE_FROM_NIGHT = -0.2,					— How much the night can reduce the air detection. (see static modifiers to check how weather affects it too.)

DETECT_CHANCE_FROM_NIGHT = -0.2, —— 夜晚对空中侦测的降低效果。（另见静态修饰符以了解天气如何影响此数值。）

DETECT_EFFICIENCY_BASE = 0.1,						— Base value for detection efficiency (once something detected, efficiency says how many airplanes was detected).

DETECT_EFFICIENCY_BASE = 0.1, — 检测效率的基础值（一旦检测到目标，效率值表示有多少架飞机被检测到）。

DETECT_EFFICIENCY_FROM_RADAR = 0.7,					— How much radars affect the efficiency.

DETECT_EFFICIENCY_FROM_RADAR = 0.7, — 雷达对效率的影响程度。

DETECT_EFFICIENCY_RANDOM_FACTOR = 0.1,				— How much randomness is in amount of detected aircrafts.

DETECT_EFFICIENCY_RANDOM_FACTOR = 0.1, —— 检测到的飞机数量中包含多少随机性。

DAY_NIGHT_COVERAGE_FACTOR = 0.5,					— The max night coverage in a region that is still considered to be day-time when determining if day/night air missions shall run.

昼夜覆盖系数 = 0.5, —— 在判断是否执行昼夜空袭任务时，某区域夜间覆盖范围仍被视为白天的最大阈值。

HOURS_DELAY_AFTER_EACH_COMBAT = 4,					— How many hours needs the wing to be ready for the next combat. Use for tweaking if combats happens too often. (generally used as double because of roundtrip)

HOURS_DELAY_AFTER_EACH_COMBAT = 4, — 机翼需要多少小时才能准备好进行下一次战斗。用于调整战斗发生过于频繁的情况。（通常由于往返时间而加倍使用）

PORT_STRIKES_DELAY_MULTIPLIER = 2,					— multplies HOURS_DELAY_AFTER_EACH_COMBAT if port strikes

港口空袭延迟倍数 = 2, —— 每次战斗后延迟小时数的乘数（若发生港口空袭）

CARRIER_HOURS_DELAY_AFTER_EACH_COMBAT = 3, — how often carrier planes do battle inside naval combat

航母每次战斗后的延迟小时数 = 3, — 航母舰载机在海上战斗中出击的频率

CARRIER_SIZE_STAT_INCREMENT = 10,					— Each Point of carrier_size state adds capacity for this many planes

CARRIER_SIZE_STAT_INCREMENT = 10, — 运输舰尺寸状态每提升一点，即可为此数量的飞机增加容量

MISSILE_LAUNCHER_CAPACITY = 10, — The number of missiles per slot

导弹发射器容量 = 10, —— 每个槽位的导弹数量

MISSILE_LAUNCHER_SLOTS = 1, — The number of missile slots a missile launcher unit can have

MISSILE_LAUNCHER_SLOTS = 1, — 导弹发射器单元可拥有的导弹槽数量

NAVAL_STRIKE_TARGETTING_TO_AMOUNT = 0.3,			— Balancing value to convert the naval_strike_targetting equipment stats to chances of how many airplanes managed to do successfull strike.

海军打击目标命中率转换为飞机成功执行打击的概率的平衡值 = 0.3,

NAVAL_STRIKE_DAMAGE_TO_STR = 1.0,					— Balancing value to convert damage ( naval_strike_attack * hits ) to Strength reduction.

海军打击对力量的伤害转换系数 = 1.0, ——平衡值，用于将伤害（海军打击攻击次数 * 命中次数）转化为力量削减。

NAVAL_STRIKE_DAMAGE_TO_ORG = 1.5,					— Balancing value to convert damage ( naval_strike_attack * hits ) to Organisation reduction.

NAVAL_STRIKE_DAMAGE_TO_ORG = 1.5, —— 平衡值，用于将伤害（海军打击攻击力 * 命中次数）转换为组织度降低。

NAVAL_STRIKE_CARRIER_MULTIPLIER = 10.0, — damage bonus when planes are in naval combat where their carrier is present (and can thus sortie faster and more effectively)

NAVAL_STRIKE_CARRIER_MULTIPLIER = 10.0, — 当飞机处于其航母所在的海战区域时（因此能更快更有效地出击）获得的伤害加成

FIELD_EXPERIENCE_SCALE = 0.0004,

FIELD_EXPERIENCE_SCALE = 0.0004,

FIELD_EXPERIENCE_MAX_PER_DAY = 2,					— Most xp you can gain per day

FIELD_EXPERIENCE_MAX_PER_DAY = 2, — 每日可获取的最大经验值

CLOSE_AIR_SUPPORT_EXPERIENCE_SCALE = 0.0005,		— How much the experinence gained by CAS is scaled

近距离空中支援经验值比例 = 0.0005, — 用于调整CAS所获经验值的缩放比例

PARADROP_EXPERIENCE_SCALE = 0.03,					— How much the experinence gained by paradropping is scaled

PARADROP_EXPERIENCE_SCALE = 0.03, — 伞降获得的经验值缩放比例

BOMBING_DAMAGE_EXPERIENCE_SCALE = 0.0002, — How much the experinence gained by bombing is scaled

BOMBING_DAMAGE_EXPERIENCE_SCALE = 0.0002, — 轰炸所获经验值的缩放比例



EXPERIENCE_SCALE_ATTACK_LOGISTICS_NO_TRUCK_CONSUMERS = 0.0001, — How much country experinence gained by attacking consumers who aren’t motorized

攻击非机动化消费者时国家获得的经验值 = 0.0001

EXPERIENCE_SCALE_ATTACK_LOGISTICS_NODE_AND_TRAINS = 0.0002, — How much country experinence gained by attacking node/trains

攻击节点/火车所获国家经验值 = 0.0002

EXPERIENCE_SCALE_ATTACK_LOGISTICS_TRUCKS = 0.0002, — How much country experinence gained by attacking trucks

EXPERIENCE_SCALE_ATTACK_LOGISTICS_TRUCKS = 0.0002, —— 国家通过攻击卡车获得多少经验值



FIELD_EXPERIENCE_FACTOR = 0.7,						— Factor all air experience gain from missions by this

FIELD_EXPERIENCE_FACTOR = 0.7, —— 所有来自任务的空中经验获取均按此系数调整



AI_ALLOWED_PLANES_KEPT_IN_RESERVE = 0.10,			—AI allowed planes is reduced by this percentage. Overflow will be distributed to the next valid order. Worst case, this will result in this % of planes no being assigned any order.

AI_ALLOWED_PLANES_KEPT_IN_RESERVE = 0.10，——AI允许的飞机数量将按此百分比减少。溢出的部分将分配给下一个有效指令。最坏情况下，这将导致该百分比的飞机未被分配任何指令。



ACCIDENT_CHANCE_BASE = 0.1,							— Base chance % (0 - 100) for accident to happen. Reduced with higher reliability stat.

ACCIDENT_CHANCE_BASE = 0.1, —— 基础事故发生率%（0-100）。可靠性属性越高，该值越低。

ACCIDENT_CHANCE_CARRIER_MULT = 1.5,					— The total accident chance is scaled up when it happens on the carrier ship.

ACCIDENT_CHANCE_CARRIER_MULT = 1.5, —— 当事故发生在航母上时，总事故概率会被按此比例放大。

ACCIDENT_CHANCE_BALANCE_MULT = 0.10,				— Multiplier for balancing how often the air accident really happens. The higher mult, the more often.

ACCIDENT_CHANCE_BALANCE_MULT = 0.10， — 用于平衡空难实际发生频率的乘数。该数值越高，发生频率越高。

ACCIDENT_CHANCE_RELIABILITY_MULT = 2.0,				— Multiplier to accident chance per point of missing reliability.

ACCIDENT_CHANCE_RELIABILITY_MULT = 2.0, — 每缺失一点可靠性对应的事故概率乘数。

ACCIDENT_EFFECT_MULT = 0.007,						— Multiplier for balancing the effect of accidents

ACCIDENT_EFFECT_MULT = 0.007, — 用于平衡事故影响效果的乘数

ACE_DEATH_CHANCE_BASE = 0.005,						— Base chance % for ace pilot die when an airplane is shot down in the Ace wing.

ACE_DEATH_CHANCE_BASE = 0.005, — 在王牌飞行中队中，当一架飞机被击落时，王牌飞行员死亡的基础概率百分比。

ACE_DEATH_BY_OTHER_ACE_CHANCE = 1.0,				— chance to an ace dying by another ace if it was hit by ace in combat

ACE_DEATH_BY_OTHER_ACE_CHANCE = 1.0, —— 王牌在战斗中被另一王牌击中时的阵亡概率

ACE_DEATH_CHANCE_PLANES_MULT = 0.001,				— The more airplanes was lost in a single airplanes (more bloody it was) the higher chance of Ace to die.

ACE_DEATH_CHANCE_PLANES_MULT = 0.001, —— 单次空战中损失的飞机越多（战况越惨烈），王牌飞行员阵亡的几率越高。

AIR_AGILITY_TO_NAVAL_STRIKE_AGILITY = 0.02, 		— conversion factor to bring agility in line with ship AA

AIR_AGILITY_TO_NAVAL_STRIKE_AGILITY = 0.02, — 用于使机动性与舰船防空能力协调的转换系数

ACE_EARN_CHANCE_BASE = 0.01,						— Base chance % for ace pilot creation roll to happen. Happens only when successfully kill airplane/ship or damage the buildings.

ACE_EARN_CHANCE_BASE = 0.01, —— 产生王牌飞行员的基础概率%，仅在成功击落飞机/舰船或对建筑造成伤害时触发判定。

ACE_EARN_CHANCE_PLANES_MULT = 0.005,				— Ace generation chance per aircraft. Chance is rolled twice because decimal numbers can’t be small enough

ACE_EARN_CHANCE_PLANES_MULT = 0.005, —— 每架飞机产生王牌飞行员的概率。由于小数精度限制，概率会进行两次判定

AIR_DAMAGE_TO_DIVISION_LOSSES = 1.0,				— factor for conversion air damage to division losses for details statistics of air wings

AIR_DAMAGE_TO_DIVISION_LOSSES = 1.0, — 用于将空中伤害转换为师级单位损失的系数，用于空军联队详细统计

AIR_NAVAL_KAMIKAZE_DAMAGE_MULT = 20.0,				— Balancing value to increase usual damage to Strength for Kamikaze

AIR_NAVAL_KAMIKAZE_DAMAGE_MULT = 20.0, —— 用于调整神风特攻队对舰船强度的常规伤害倍率

AIR_NAVAL_KAMIKAZE_LOSSES_MULT = 4.0, 			— Balancing value to increase usual losses if Kamikaze participating in the battle

AIR_NAVAL_KAMIKAZE_LOSSES_MULT = 4.0, —— 平衡值，用于在神风特攻队参战时增加常规损失

BASE_KAMIKAZE_DAMAGE = 2.0, 				— Base Kamikaze death rate

BASE_KAMIKAZE_DAMAGE = 2.0, —— 基础神风特攻死亡率

BASE_KAMIKAZE_TARGETING = 2.0,			 		— Kamikaze can’t be a bad target

BASE_KAMIKAZE_TARGETING = 2.0, — 神风特攻队不可能是个坏目标

BASE_STRATEGIC_BOMBING_HIT_SHIP_CHANCE = 0.01,		— Chance to hit a ship in port when it is bombed.

BASE_STRATEGIC_BOMBING_HIT_SHIP_CHANCE = 0.01, —— 港口遭轰炸时船只被命中的基础概率。

BASE_STRATEGIC_BOMBING_HIT_SHIP_DAMAGE_FACTOR = 50,

BASE_STRATEGIC_BOMBING_HIT_SHIP_DAMAGE_FACTOR = 50,

BASE_STRATEGIC_BOMBING_HIT_PLANE_CHANCE = 0.5,		— Chance to hit a plane in airbase when it is bombed.

BASE_STRATEGIC_BOMBING_HIT_PLANE_CHANCE = 0.5, —— 当空军基地遭轰炸时命中停放飞机的概率。

BASE_STRATEGIC_BOMBING_HIT_PLANE_DAMAGE_FACTOR = 0.2,

BASE_STRATEGIC_BOMBING_HIT_PLANE_DAMAGE_FACTOR = 0.2,

AGGRESSION_THRESHOLD = { 0.0, 0.25, 0.5 },			— Threshold levels for mission aggressivity for air

攻击性阈值 = { 0.0, 0.25, 0.5 }, — 空中任务攻击性的阈值等级



ACE_WING_SIZE =	100,								— size of wing ace bonuses are set up for. if lower more bonus, if higher less bonus

ACE_WING_SIZE = 100, — 机翼王牌加成的基准尺寸。数值越小加成越大，数值越大加成越小。

ACE_WING_SIZE_MAX_BONUS = 2, 	 — biggest bonus we can get from having a small wing with an ace on

ACE_WING_SIZE_MAX_BONUS = 2, —— 拥有带王牌的小型机翼所能获得的最大加成

NO_SEARCH_MISSION_DETECT_FACTOR = -0.5,				— value of planes not on active search missions for detection

NO_SEARCH_MISSION_DETECT_FACTOR = -0.5, — 非执行主动搜索任务的飞机对探测的影响值

SUPPLY_NEED_FACTOR = 0.28, 							— multiplies supply usage

SUPPLY_NEED_FACTOR = 0.28, — 乘以物资使用量

SUPPLY_PRIO_FACTOR = 100.0,							— Effect of supply need per unit for target province picking for air supply

SUPPLY_PRIO_FACTOR = 100.0, —— 影响空中补给目标省份选择中每单位补给需求的权重系数

CAPACITY_PENALTY = 2,								— scales penalty of having overcrowded bases.

容量惩罚 = 2，——用于调整基地过度拥挤的惩罚系数。

AIR_COMBAT_FINAL_DAMAGE_SCALE = 0.015, — % how many max disrupted only planes are alloed to die in a single combat

空战最终伤害比例 = 0.015, —— % 单次战斗中最多仅允许被击溃的飞机损失的百分比

AIR_COMBAT_FINAL_DAMAGE_PLANES = 50, — scaling/control for when only very few planes exist to stop roundoff issues

AIR_COMBAT_FINAL_DAMAGE_PLANES = 50, —— 当仅存极少数飞机时为防止舍入误差而设的缩放/控制参数

AIR_COMBAT_FINAL_DAMAGE_PLANES_FACTOR = 0.1,

空中战斗最终伤害飞机系数 = 0.1,

AA_INDUSTRY_AIR_DAMAGE_FACTOR = -0.12,				— 5x levels = 60% defense from bombing

AA_INDUSTRY_AIR_DAMAGE_FACTOR = -0.12, — 5级防空 = 60%轰炸防御

NAVAL_STRIKE_DETECTION_BALANCE_FACTOR = 0.5,		— Value used to scale the surface_visibility stats to balance the gameplay, so 100% detection chance still won’t spam the strikes.

NAVAL_STRIKE_DETECTION_BALANCE_FACTOR = 0.5, —— 此数值用于调节水面可见度属性以平衡游戏性，因此即使100%的探测概率也不会频繁触发空袭。

NAVAL_RECON_DETECTION_BALANCE_FACTOR = 0.5,			— Value used to scale the surface_visibility stats to balance the gameplay, so 100% detection chance still won’t spam spotting.

NAVAL_RECON_DETECTION_BALANCE_FACTOR = 0.5，——该数值用于调节水面可见度参数以实现游戏平衡，因此即便100%的探测概率也不会导致频繁的侦察发现。

LEND_LEASED_EQUIPMENT_EXPERIENCE_GAIN = 0.5,		— Value used for equipment

LEND_LEASED_EQUIPMENT_EXPERIENCE_GAIN = 0.5, — 用于装备的经验值系数

ANTI_AIR_PLANE_DAMAGE_FACTOR = 0.8,					— Anti Air Gun Damage factor

ANTI_AIR_PLANE_DAMAGE_FACTOR = 0.8, — 防空炮伤害系数

ANTI_AIR_PLANE_DAMAGE_CHANCE = 0.1,					— Anti Air Gun hit chance

ANTI_AIR_PLANE_DAMAGE_CHANCE = 0.1, — 防空炮命中概率

ANTI_AIR_ATTACK_TO_DAMAGE_REDUCTION_FACTOR = 1.0,	— Balancing value to convert equipment stat anti_air_attack to the damage reduction modifier apply to incoming air attacks against units with AA.

ANTI_AIR_ATTACK_TO_DAMAGE_REDUCTION_FACTOR = 1.0, —— 平衡数值，用于将装备属性中的防空攻击力转换为对具备防空能力单位所受空袭伤害的减免修正系数。

ANTI_AIR_MAXIMUM_DAMAGE_REDUCTION_FACTOR = 0.75,	— Maximum damage reduction factor applied to incoming air attacks against units with AA.

ANTI_AIR_MAXIMUM_DAMAGE_REDUCTION_FACTOR = 0.75, —— 对具备防空能力的单位，所承受空袭伤害的最大减免系数。

AIR_DEPLOYMENT_DAYS = 2,							— Days to deploy one air wing

AIR_DEPLOYMENT_DAYS = 2, — 部署一个航空联队所需天数

NAVAL_STRIKE_BASE_STR_TO_PLANES_RATIO = 0.03,		— Max airbombers to do port strike comparing to strength

NAVAL_STRIKE_BASE_STR_TO_PLANES_RATIO = 0.03, — 执行港口空袭时，最大轰炸机数量与基地实力的比例

NAVAL_COMBAT_EXTERNAL_PLANES_JOIN_RATIO = 0.05,		— Max planes that can join a combat comparing to the total strength of the ships

NAVAL_COMBAT_EXTERNAL_PLANES_JOIN_RATIO = 0.05，—— 可加入战斗的飞机数量与舰船总实力的最大比例

NAVAL_COMBAT_EXTERNAL_PLANES_JOIN_RATIO_PER_DAY = 0.2, — max extra plane % that can join every day

NAVAL_COMBAT_EXTERNAL_PLANES_JOIN_RATIO_PER_DAY = 0.2, — 每天可加入的最大额外飞机百分比

NAVAL_COMBAT_EXTERNAL_PLANES_MIN_CAP = 20,			— Min cap for planes that can join naval combat

NAVAL_COMBAT_EXTERNAL_PLANES_MIN_CAP = 20, — 可参与海战飞机的最小上限数值



AIR_MORE_GROUND_CREWS_COST = 20.0,					— CP cost to maintain more ground crews

AIR_MORE_GROUND_CREWS_COST = 20.0, —— 维持更多地勤人员的指挥点数消耗

AIR_MORE_GROUND_CREWS_BOOST = 0.1,					— Efficienct boost for more ground crews

AIR_MORE_GROUND_CREBS_BOOST = 0.1, — 增加地勤人员带来的效率提升



EFFICIENCY_REGION_CHANGE_PENALTY_FACTOR = 0.9,				— Penalty applied for changing region

EFFICIENCY_REGION_CHANGE_PENALTY_FACTOR = 0.9, — 区域变更惩罚系数

— Gain should be changed in increments of 0.024 due to precision.

— 由于精度要求，增益应以0.024为步进值进行调整。

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_DEFAULT = 1,	— Default how much efficiency to regain per day. Gain applied hourly.

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_DEFAULT = 1, — 默认每日恢复的效率值。该增益按小时计算。

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_CAS = 0.888,				— How much efficiency to regain per day. Gain applied hourly.

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_CAS = 0.888, — 每日恢复多少效率。每小时应用增益。

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_NAVAL_BOMBER = 0.192,		— How much efficiency to regain per day. Gain applied hourly.

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_NAVAL_BOMBER = 0.192, —— 每天恢复多少效率。增益按小时应用。

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_TACTICAL_BOMBER = 0.192,	— How much efficiency to regain per day. Gain applied hourly.

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_TACTICAL_BOMBER = 0.192, —— 每日恢复多少效率。每小时应用增益。

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_FIGHTER = 0.888,			— How much efficiency to regain per day. Gain applied hourly.

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_FIGHTER = 0.888, — 每日恢复多少效率。增益每小时应用一次。

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_STRATEGIC_BOMBER = 0.072,	— How much efficiency to regain per day. Gain applied hourly.

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_STRATEGIC_BOMBER = 0.072, —— 每日恢复的效率值。增益按小时应用。

EFFICIENCY_REGION_CHANGE_DAILY_GAIN_MARITIME_PATROL_PLANE = 1,

效率_区域_变更_每日_增益_海上_巡逻_飞机 = 1,



AIR_WING_XP_MAX = 1000.0, 											—Per plane XP.

AIR_WING_XP_MAX = 1000.0, —每架飞机的经验值上限。

AIR_WING_XP_LEVELS = { 100, 300, 700, 900 }, 						—Experience needed to progress to the next level

AIR_WING_XP_LEVELS = { 100, 300, 700, 900 }, —升级至下一等级所需的经验值

AIR_WING_XP_LOSS_WHEN_KILLED = 300,									—if a plane dies, the game assumes that a pilot with this amount of xp died and recalcs average.

AIR_WING_XP_LOSS_WHEN_KILLED = 300, ——若飞机被击毁，游戏将假定一名拥有此经验值的飞行员阵亡并重新计算平均值。

AIR_WING_XP_TRAINING_MAX = 300.0, 									—Max average XP achieved with training.

AIR_WING_XP_TRAINING_MAX = 300.0, ——通过训练可达到的最大平均经验值。



AIR_WING_XP_TRAINING_MISSION_GAIN_DAILY = 7.0, 						—Daily gain when running training exercise mission

AIR_WING_XP_TRAINING_MISSION_GAIN_DAILY = 7.0, ——执行训练任务时每日获得经验值

AIR_WING_XP_AIR_VS_AIR_COMBAT_GAIN = 0.8, 							—Wings in combat gain extra XP

AIR_WING_XP_AIR_VS_AIR_COMBAT_GAIN = 0.8, —参与空战的航空联队获得额外经验值

AIR_WING_XP_GROUND_MISSION_COMPLETED_GAIN = 0.28, 					—Bombers bombing, CAS cassing, NBs nbing, kamikazees kamikazeeing, etc.

AIR_WING_XP_GROUND_MISSION_COMPLETED_GAIN = 0.28, ——轰炸机执行轰炸任务、近空支援机执行近空支援、夜袭轰炸机执行夜袭任务、神风特攻队进行特攻等。

AIR_WING_XP_RECON_MISSION_COMPLETED_GAIN = 0.05, 					—recon mission

AIR_WING_XP_RECON_MISSION_COMPLETED_GAIN = 0.05, —侦察任务完成



AIR_WING_COUNTRY_XP_FROM_TRAINING_FACTOR = 0.003, 					—Factor on country Air XP gained from wing training

AIR_WING_COUNTRY_XP_FROM_TRAINING_FACTOR = 0.003, ——飞行联队训练对国家空军经验值获取的影响系数

AIR_WING_XP_TRAINING_MISSION_ACCIDENT_FACTOR = 0.2, 				—Training exercises cause more accidents

AIR_WING_XP_TRAINING_MISSION_ACCIDENT_FACTOR = 0.2, ——训练任务导致更多事故

AIR_WING_XP_LOSS_REDUCTION_OVER_FRIENDLY_TERRITORY_FACTOR = 0.3, 	—Reduction on XP loss over friendly territory

AIR_WING_XP_LOSS_REDUCTION_OVER_FRIENDLY_TERRITORY_FACTOR = 0.3, —在友方领土上空经验值损失降低系数



DISRUPTION_FACTOR = 4.0,									— multiplier on disruption damage to scale its effects on planes

DISRUPTION_FACTOR = 4.0, ——干扰伤害的乘数，用于调整其对飞机的影响程度

DISRUPTION_FACTOR_CARRIER = 6.0,							— multiplier on disruption damage to scale its effects on carrier vs carrier planes

DISRUPTION_FACTOR_CARRIER = 6.0, — 对航母与舰载机间干扰伤害效果的放大系数

DISRUPTION_SPEED_FACTOR = 1.0,

中断速度系数 = 1.0，

DISRUPTION_AGILITY_FACTOR = 0.0,

破坏_敏捷_系数 = 0.0,

DISRUPTION_ATTACK_FACTOR = 0.0,

DISRUPTION_ATTACK_FACTOR = 0.0,

DISRUPTION_DETECTION_FACTOR = 1.0,

中断检测因子 = 1.0，

ESCORT_FACTOR = 2.0,

护送系数 = 2.0,

ESCORT_SPEED_FACTOR = 1.0,

护送速度系数 = 1.0,

ESCORT_AGILITY_FACTOR = 1.0,

ESCORT_AGILITY_FACTOR = 1.0,

ESCORT_ATTACK_FACTOR = 1.0,

ESCORT_ATTACK_FACTOR = 1.0,

DISRUPTION_DEFENCE_DEFENCE_FACTOR = 0.5,

DISRUPTION_DEFENCE_DEFENCE_FACTOR = 0.5,

DISRUPTION_DEFENCE_SPEED_FACTOR = 1.0,

DISRUPTION_DEFENCE_SPEED_FACTOR = 1.0,

DISRUPTION_DEFENCE_ATTACK_FACTOR = 0.5,

DISRUPTION_DEFENCE_ATTACK_FACTOR = 0.5,



CARRIER_PLANES_AMOUNT_FOR_POSITIONING = 50, — below this amount of planes on a carrier we no longer get max benefit on enemy positioning

CARRIER_PLANES_AMOUNT_FOR_POSITIONING = 50, —— 当航母上的飞机数量低于此数值时，我们无法再获得对敌军部署的最大优势。



CAS_NIGHT_ATTACK_FACTOR = 0.1, — CAS damaged get multiplied by this in land combats at night

CAS_NIGHT_ATTACK_FACTOR = 0.1, —— 夜间地面战斗中，CAS（近距离空中支援）所受伤害将乘以该系数



AIR_WING_ATTACK_LOGISTICS_NO_TRUCK_DISRUPTION_FACTOR = 0.02, — If a unit isn’t motorized, still disrupt its supply by damage * this

AIR_WING_ATTACK_LOGISTICS_NO_TRUCK_DISRUPTION_FACTOR = 0.02, — 若单位未机械化，仍以伤害值乘以该系数干扰其补给

AIR_WING_ATTACK_LOGISTICS_TRUCK_DAMAGE_FACTOR = 0.27,

AIR_WING_ATTACK_LOGISTICS_TRUCK_DAMAGE_FACTOR = 0.27,

AIR_WING_ATTACK_LOGISTICS_INFRA_DAMAGE_SPILL_FACTOR = 0.0016, — Portion of truck damage to additionally deal to infrastructure

AIR_WING_ATTACK_LOGISTICS_INFRA_DAMAGE_SPILL_FACTOR = 0.0016, —— 对基础设施额外造成的卡车损坏比例

AIR_WING_ATTACK_LOGISTICS_TRAIN_DAMAGE_FACTOR = 0.040,

空军联队攻击后勤列车损伤系数 = 0.040,

AIR_WING_ATTACK_LOGISTICS_TRAIN_DAMAGE_DISRUPTION_MITIGATION = 6.0, — Multiply Train Damage by (Smooth / (Smooth + (Disruption * Mitigation)))

AIR_WING_ATTACK_LOGISTICS_TRAIN_DAMAGE_DISRUPTION_MITIGATION = 6.0, — 列车伤害乘以（平滑值 / (平滑值 + (干扰 * 缓解值))）

AIR_WING_ATTACK_LOGISTICS_TRAIN_DAMAGE_DISRUPTION_SMOOTHING = 5.0,

空军联队攻击后勤列车损害破坏平滑系数 = 5.0,

AIR_WING_ATTACK_LOGISTICS_RAILWAY_DAMAGE_SPILL_FACTOR = 0.006, — Portion of train damage to additionally deal to railways

AIR_WING_ATTACK_LOGISTICS_RAILWAY_DAMAGE_SPILL_FACTOR = 0.006, —— 对铁路额外造成的火车损坏比例



AIR_WING_ATTACK_LOGISTICS_DISRUPTION_MIN_DAMAGE_FACTOR = 0.1, — Multiply train damage by this factor, scale from 1.0 at 0 disruption to this at AIR_WING_ATTACK_LOGISTICS_MAX_DISRUPTION_DAMAGE_TO_CONSIDER

AIR_WING_ATTACK_LOGISTICS_DISRUPTION_MIN_DAMAGE_FACTOR = 0.1, — 将此因子乘以列车损伤值，比例从1.0（0干扰时）到当前值（达到AIR_WING_ATTACK_LOGISTICS_MAX_DISRUPTION_DAMAGE_TO_CONSIDER时的干扰水平）

AIR_WING_ATTACK_LOGISTICS_MAX_DISRUPTION_DAMAGE_TO_CONSIDER = 15.0, — see above

AIR_WING_ATTACK_LOGISTICS_MAX_DISRUPTION_DAMAGE_TO_CONSIDER = 15.0, —— 同上

AIR_WING_ATTACK_LOGISTICS_DIRECT_DISRUPTION_DAMAGE_FACTOR = 0.01, — Disruption damage to supply throughput done by bombing damage, not dependant on killing trains which also causes diruption.

AIR_WING_ATTACK_LOGISTICS_DIRECT_DISRUPTION_DAMAGE_FACTOR = 0.01, —— 轰炸造成的后勤供应中断损伤系数，与摧毁火车（同样会导致中断）无关。



AIR_WING_ATTACK_LOGISTICS_TRUCK_MAX_FACTOR = 0.3, — max trucks we can destroy in one instance of a logistics strike

AIR_WING_ATTACK_LOGISTICS_TRUCK_MAX_FACTOR = 0.3, —— 在一次后勤打击中我们最多能摧毁的卡车数量上限系数



SECONDARY_DAMAGE_STRAT = 0.2, — how much damage gets translated to railway guns for strat bombing

次要损害策略 = 0.2, ——战略轰炸时有多少伤害会转化为对铁路炮的伤害

SECONDARY_DAMAGE_LOGISTICS = 1.0, — how much damage gets translated to railway guns for logistic strike

次要伤害对后勤影响系数 = 1.0, — 物流打击中铁路炮受到的伤害转化比例



INTERCEPTION_DISTANCE_SCALE = 50, — At this many pixels of path length, full interception efficiency is applied to air missions. Lerp from 0.

INTERCEPTION_DISTANCE_SCALE = 50, —— 当路径长度达到这么多像素时，将完全拦截效率应用于空中任务。从0开始线性插值。

INTERCEPTION_DAMAGE_SCALE = 0.3, — Multiply the interception damage with this value. Works as a cap when interception distance is at maximum.

INTERCEPTION_DAMAGE_SCALE = 0.3, — 拦截伤害乘以该值。当拦截距离达到最大值时，此值作为上限。



MIN_PLANE_COUNT_PARADROP = 50,

最小空投飞机数量 = 50,

MIN_PLANE_COUNT_AIR_SUPPLY = 1,

MIN_PLANE_COUNT_AIR_SUPPLY = 1,

BASE_UNIT_WEIGHT_IN_TRANSPORT_PLANES = 45.0,

BASE_UNIT_WEIGHT_IN_TRANSPORT_PLANES = 45.0,



MANPOWER_LOSS_RATIO_PLANE_SHOT = 0.10,	— The loss ratio of manpower for a shot plane.

MANPOWER_LOSS_RATIO_PLANE_SHOT = 0.10, — 被击落飞机的人力损失比例。



MISSION_COMMAND_POWER_COSTS = { — command power cost per plane to create a mission

MISSION_COMMAND_POWER_COSTS = { — 创建任务时每架飞机的指挥能量消耗

0.0, — AIR_SUPERIORITY

0.0，— 空中优势

0.0, — CAS

0.0, — 中国科学院

0.0, — INTERCEPTION

0.0，——拦截

0.0, — STRATEGIC_BOMBER

0.0，——战略轰炸机

0.0, — NAVAL_BOMBER

0.0, — 海军轰炸机

0.0, — DROP_NUKE

0.0, — 投放核弹

0.0, — PARADROP

0.0，— 空投

0.0, — NAVAL_KAMIKAZE

0.0, — 海军神风

0.0, — PORT_STRIKE

0.0, — 端口罢工

0.0, — ATTACK_LOGISTICS

0.0，— 攻击后勤

0.05, — AIR_SUPPLY

0.05, — 空气供应

0.0, — TRAINING

0.0，—— 训练

0.0, — NAVAL_MINES_PLANTING

0.0，— 海军_布雷_布置

0.0, — NAVAL_MINES_SWEEPING

0.0，——扫雷行动

0.0, — RECON

0.0，——侦察





0.0, — NAVAL_PATROL


0.0, — 海军巡逻


0,0, — BARRAGE

0，0，——弹幕

0,0, — SAM

0,0, — 山姆

},



MISSION_FUEL_COSTS = { — fuel cost per plane for each mission

MISSION_FUEL_COSTS = { — 每种任务每架飞机的燃料成本

1.0, — AIR_SUPERIORITY

1.0，— 空中优势

1.0, — CAS

1.0，—— CAS

0.2, — INTERCEPTION

0.2，——拦截

1.0, — STRATEGIC_BOMBER

1.0, — 战略轰炸机

1.0, — NAVAL_BOMBER

1.0，— 海军轰炸机

1.0, — DROP_NUKE

1.0, — 投放核弹

1.0, — PARADROP

1.0，——空投

0.75, — NAVAL_KAMIKAZE

0.75，— 海军神风

1.2, — PORT_STRIKE

1.2，——港口罢工

1.2, — ATTACK_LOGISTICS

1.2，——攻击后勤

1.0, — AIR_SUPPLY

1.0，— 空气补给

0.6, — TRAINING

0.6，——训练

1.0, — NAVAL_MINES_PLANTING

1.0, — 海军水雷布设

1.0, — NAVAL_MINES_SWEEPING

1.0，— 海军扫雷行动

1.0, — RECON

1.0，— 侦察

1.0, — NAVAL_PATROL

1.0，—海军巡逻队





0.0, — BARRAGE


0.0，— 弹幕


0,0, — NUCLEAR

0，0，——核能

0,0, — SAM

0,0, — 山姆

},

MAX_FUEL_FLOW_MULT = 1.0, — max fuel flow ratio for planes, which will be multiplied by supply

MAX_FUEL_FLOW_MULT = 1.0, — 飞机最大燃油流量比率，将乘以补给量



FUEL_COST_MULT = 0.35, — fuel multiplier for all air missions

FUEL_COST_MULT = 0.35, — 所有空中任务的燃油消耗乘数



MISSION_EFFICIENCY_MULT_AT_LACK_OF_FUEL = 0.25, 				— multiplier for mission efficiency when a base lacks fuel

MISSION_EFFICIENCY_MULT_AT_LACK_OF_FUEL = 0.25, —— 当基地缺乏燃料时的任务效率乘数



STRATEGIC_BOMBING_PROV_BUILD_PRIO_SCALE = 1.5,					— Scale of the selected priority for provincial buildings

STRATEGIC_BOMBING_PROV_BUILD_PRIO_SCALE = 1.5, — 省级建筑选定优先级的比例

STRATEGIC_BOMBING_STATE_BUILD_PRIO_SCALE = 1.5,					— Scale of the selected priority for state buildings

STRATEGIC_BOMBING_STATE_BUILD_PRIO_SCALE = 1.5, — 国家建筑优先级的选定比例

STRATEGIC_BOMBING_INFRA_PRIO_SCALE = 0.7,						— Scale of the selected priority for infrastructure

STRATEGIC_BOMBING_INFRA_PRIO_SCALE = 0.7, —— 基础设施选定优先级的比例

STRATEGIC_BOMBING_RAILWAY_PRIORITY_SCALE = 0.2,					— The scale of extra priority assigned to railway for strategic bombing

STRATEGIC_BOMBING_RAILWAY_PRIORITY_SCALE = 0.2, —— 铁路在战略轰炸中获得的额外优先级比例

STRATEGIC_BOMBING_STATE_BUILDING_SCALE = 1.0,					— The scale of state building priority for strategic bombing

STRATEGIC_BOMBING_STATE_BUILDING_SCALE = 1.0, — 战略轰炸对国家建设优先级的规模系数



NAVAL_MINES_PLANTING_SPEED_MULT = 0.025,						— Value used to overall balance of the speed of planting naval mines

NAVAL_MINES_PLANTING_SPEED_MULT = 0.025, —— 用于整体平衡海军布雷速度的数值

NAVAL_MINES_SWEEPING_SPEED_MULT = 0.025,						— Value used to overall balance of the speed of sweeping naval mines

NAVAL_MINES_SWEEPING_SPEED_MULT = 0.025, —— 用于整体平衡扫雷速度的数值

NON_CORE_STRATEGIC_IMPACT = 0.5, — multiplier for strategic impact of non-core bombing

非核心战略影响系数 = 0.5, — 非核心轰炸战略影响的乘数

RECON_LAND_SPOT_CHANCE = 0.02, 				— scale factor on spotting lan

RECON_LAND_SPOT_CHANCE = 0.02, — 对陆地侦察发现概率的比例因子



REINFORCEMENT_DISABLING_DURATION_IN_LAND_CARRIER_TRANSFER = 48,	— The reinforcement disabling duration in hours when transfering from land to carrier and vice versa

REINFORCED_DISABLING_DURATION_IN_LAND_CARRIER_TRANSFER = 48, — 陆地运输工具与航母间互相转移时，增援失效持续时间（单位：小时）



THRUST_WEIGHT_AGILITY_FACTOR = 0.5,								— For plane designs, additive agility bonus per point of thrust exceeding weight

推力重量敏捷系数 = 0.5, —— 用于飞行器设计，推力超过重量每点提供的附加敏捷加成

MAX_QUICK_WING_SELECTION = 3,									— Max possible selection for airwing quick deploy

MAX_QUICK_WING_SELECTION = 3, — 快速部署航空联队的最大可选数量



USE_SINGLE_NAVAL_ARMAMENT_CATEGORY = true,						— If true, only the armament module category that inflicts the greatest damage to naval targets will contribute naval strike and port strike mission specific stats. Only modules with both naval_strike_attack and naval_strike_targetting are considered. This is used to prevent torpedo_mounting and bomb_locks stats from stacking.

USE_SINGLE_NAVAL_ARMAMENT_CATEGORY = true, ——若为真，则仅对海军目标造成最大伤害的武装模块类别会贡献海军打击和港口打击任务特定属性。仅同时具备naval_strike_attack和naval_strike_targetting属性的模块会被纳入考量。此设置用于防止鱼雷挂架和炸弹锁具属性叠加。



PORT_STRIKE_DAMAGE_FACTOR = 1.0,								— How much damage is dealt to ports during a port strike (per plane damage [complex number] * num flying planes * define)

PORT_STRIKE_DAMAGE_FACTOR = 1.0, — 港口打击中对港口造成的伤害系数（每架飞机伤害[复数] * 飞行飞机数量 * 定义值）

},



NNavy = {

海军 = {

— Peace Conference

— 和平会议

WAR_SCORE_GAIN_FOR_SUNK_SHIP_MANPOWER_FACTOR = 0.004,			— war score gained for every manpower killed when sinking a ship

WAR_SCORE_GAIN_FOR_SUNK_SHIP_MANPOWER_FACTOR = 0.004, —— 每击沉一艘舰船造成人员伤亡时获得的战争分数

WAR_SCORE_GAIN_FOR_SUNK_SHIP_PRODUCTION_COST_FACTOR = 0.020,		— war score gained for every IC of the sunk ship

WAR_SCORE_GAIN_FOR_SUNK_SHIP_PRODUCTION_COST_FACTOR = 0.020, — 每击沉一单位工业成本船只所获得的战争分数

WAR_SCORE_GAIN_FOR_SUNK_CONVOY = 0.08,							— war score gained for every sunk convoy

WAR_SCORE_GAIN_FOR_SUNK_CONVOY = 0.08, —— 每击沉一支运输船队所获得的战争分数

WAR_SCORE_DECAY_FOR_BUILT_CONVOY = 0.01, 						— war score deducted when convoy-raided enemy produces one new convoy

WAR_SCORE_DECAY_FOR_BUILT_CONVOY = 0.01, — 当被护航舰袭击的敌方生产一艘新护航舰时扣除的战争分数

PEACE_ACTION_TRANSFER_NAVY_EXPERIENCE_RETAINED = 0.25,			— % of experience to retain after being transferred in a peace conference

PEACE_ACTION_TRANSFER_NAVY_EXPERIENCE_RETAINED = 0.25, —— 和平会议中转交后保留的经验百分比



— Convoy Priorities START

—— 护航任务优先级 开始

NAVAL_INVASION_PRIORITY = 1,									— Default convoy priority for naval invasions

NAVAL_INVASION_PRIORITY = 1, — 海军入侵的默认护航优先级

NAVAL_TRANSFER_PRIORITY = 1,									— Default convoy priority for naval transports

NAVAL_TRANSFER_PRIORITY = 1, —— 海军运输船队的默认优先级

SUPPLY_PRIORITY = 2,											— Default convoy priority for supplying units via sea

SUPPLY_PRIORITY = 2, — 通过海路为部队补给时的默认护航优先级

RESOURCE_LENDLEASE_PRIORITY = 3,								— Default convoy priority for export lend lease

资源_租借法案_优先级 = 3, — 出口租借的默认运输船优先级

RESOURCE_EXPORT_PRIORITY = 4,									— Default convoy priority for export trade

RESOURCE_EXPORT_PRIORITY = 4, —— 出口贸易的默认护航优先级

RESOURCE_ORIGIN_PRIORITY = 5,									— Default convoy priority for resources shipped internally

RESOURCE_ORIGIN_PRIORITY = 5, —— 内部运输资源的默认护航优先级

RESOURCE_PURCHASE_PRIORITY = 6,									— Default convoy priority for export equipment purchase

资源采购优先级 = 6, — 出口装备采购默认护航优先级

UNDERWAY_REPLENISHMENT_PRIORITY = 7,							— Default convoy priority for underway replenishment

UNDERWAY_REPLENISHMENT_PRIORITY = 7, — 海上补给车队的默认优先级

— Convoy Priorities END

— 车队优先事项 结束



ADMIRAL_TASKFORCE_CAP = 10,										— admirals will start getting penalties after this amount of taskforces

ADMIRAL_TASKFORCE_CAP = 10, — 当任务编队数量超过此值时，海军上将将开始受到惩罚



DETECTION_CHANCE_MULT_BASE = 0.1,								— base multiplier value for detection chance. Later the chance is an average between our detection and enemy visibility, mult by surface/sub detection chance in the following defines.

DETECTION_CHANCE_MULT_BASE = 0.1, —— 探测几率的基础乘数值。后续几率将基于我方探测值与敌方可见度的平均值，再乘以以下定义中地表/水下探测几率得出。

DETECTION_CHANCE_MULT_RADAR_BONUS = 0.1,						— detection chance bonus from radars.

DETECTION_CHANCE_MULT_RADAR_BONUS = 0.1, —— 雷达提供的侦测几率加成。

DETECTION_CHANCE_MULT_AIR_SUPERIORITY_BONUS = 0.25,			— bonus from air superiority.

DETECTION_CHANCE_MULT_AIR_SUPERIORITY_BONUS = 0.25, ——来自空中优势的加成。



MAX_CAPITALS_PER_AUTO_TASK_FORCE = 5,							— maximum number of capital ships the auto-task force creation will put together when designing SurfaceActionGroup

MAX_CAPITALS_PER_AUTO_TASK_FORCE = 5，——自动特遣舰队创建在设计水面行动群时组合的最大主力舰数量

MAX_SUBMARINES_PER_AUTO_TASK_FORCE = 30,						— maximum number of submarines the auto-task force creation will put together when designing wolfpack

MAX_SUBMARINES_PER_AUTO_TASK_FORCE = 30, —— 自动特遣部队创建时设计狼群战术所允许的最大潜艇数量

BEST_CAPITALS_TO_CARRIER_RATIO = 1,							— capitals / carriers ratio used when auto-task force creation designs CarrierTaskForce

最佳首都与航母比例 = 1，——自动创建航母特遣舰队设计时使用的首都/航母比例

BEST_CAPITALS_TO_SCREENS_RATIO = 0.25, 							— capitals / screens ratio used for creating FEX groups in naval combat

BEST_CAPITALS_TO_SCREENS_RATIO = 0.25, —— 用于海战中创建FEX群组时主力舰与护航舰的比例

COMBAT_BASE_HIT_CHANCE = 0.1,									— base chance for hit

COMBAT_BASE_HIT_CHANCE = 0.1, —— 基础命中概率



COMBAT_MIN_HIT_CHANCE = 0.05,									— never less hit chance then this?

COMBAT_MIN_HIT_CHANCE = 0.05, — 命中率永远不会低于这个值？

COMBAT_EVASION_TO_HIT_CHANCE = 0.007,							— we take ship evasion stats, and mult by this value, so it gives hit chance reduction. So if reduction is 0.025 and ship evasion = 10, then there will be 0.25 (25%) lower hit chance. (Fe. 50% base -25% from evasion +10% bcoz it’s very close).

COMBAT_EVASION_TO_HIT_CHANCE = 0.007，——我们取船只的闪避属性值，乘以这个系数，即可得到命中概率的降低值。例如若降低系数为0.025且船只闪避值为10，则会有0.25（即25%）的命中率下降（举例说明：基础命中率50% - 闪避带来的25% + 由于距离极近增加的10%）。

COMBAT_EVASION_TO_HIT_CHANCE_TORPEDO_MULT = 10.0,				— the above evasion hit chance is multiplied by 400% if shooting with torpedoes. Torpedoes are slow, so evasion matters more.

COMBAT_EVASION_TO_HIT_CHANCE_TORPEDO_MULT = 10.0, ——若使用鱼雷攻击，上述闪避命中率将乘以400%。鱼雷速度较慢，因此闪避的影响更为显著。

MIN_HIT_PROFILE_MULT = 0.0,										— largest hit profile penalty to hitting

MIN_HIT_PROFILE_MULT = 0.0, — 命中配置惩罚对命中的最大影响

COMBAT_LOW_ORG_HIT_CHANCE_PENALTY = -0.5,						— % of penalty applied to hit chance when ORG is very low.

COMBAT_LOW_ORG_HIT_CHANCE_PENALTY = -0.5, — 当组织度极低时，对命中率施加的惩罚百分比。

COMBAT_LOW_MANPOWER_HIT_CHANCE_PENALTY = -0.25,					— % of penalty applied to hit chance when manpower is very low.

COMBAT_LOW_MANPOWER_HIT_CHANCE_PENALTY = -0.25, — 当人力极低时，应用于命中率的惩罚百分比。

COMBAT_DAMAGE_RANDOMNESS = 0.5,									— random factor in damage. So if max damage is fe. 10, and randomness is 30%, then damage will be between 7-10.

COMBAT_DAMAGE_RANDOMNESS = 0.5, —— 伤害的随机因子。例如最大伤害为10且随机性为30%时，实际伤害将在7-10之间浮动。

COMBAT_TORPEDO_CRITICAL_CHANCE = 0.1,							— chance for critical hit from torpedo.

COMBAT_TORPEDO_CRITICAL_CHANCE = 0.1, —— 鱼雷造成致命一击的概率。

COMBAT_TORPEDO_CRITICAL_DAMAGE_MULT = 2.0,						— multiplier to damage when got critical hit from torpedo. (Critical hits are devastating as usualy torpedo_attack are pretty high base values).

COMBAT_TORPEDO_CRITICAL_DAMAGE_MULT = 2.0, —— 鱼雷造成致命一击时的伤害倍数。（由于鱼雷攻击的基础值通常较高，致命一击往往具有毁灭性效果）。



COMBAT_DAMAGE_TO_STR_FACTOR = 0.6,								— casting damage value to ship strength multiplier. Use it ot balance the game difficulty.

COMBAT_DAMAGE_TO_STR_FACTOR = 0.6, —— 将伤害值转换为舰船强度系数的乘数。用于调整游戏难度平衡。

COMBAT_DAMAGE_TO_ORG_FACTOR = 1.0,								— casting damage value to ship organisation multiplier. Use it to balance the game difficulty.

COMBAT_DAMAGE_TO_ORG_FACTOR = 1.0, ——将伤害值转换为舰船组织度的乘数。用于调整游戏难度。



NAVY_MAX_XP = 100,

海军最大经验值 = 100,

COMBAT_ON_THE_WAY_INIT_DISTANCE_BALANCE = 0.25, 				— Value to balance initial distance to arrive for ships that are “on the way”

COMBAT_ON_THE_WAY_INIT_DISTANCE_BALANCE = 0.25， —— 用于平衡“行进中”舰船初始抵达距离的数值

COMBAT_CHASE_RESIGNATION_HOURS = 8,								— Before we resign chasing enemy, give them some minimum time so the combat doesn’t end instantly.

COMBAT_CHASE_RESIGNATION_HOURS = 8, —— 在放弃追击敌人前，给予一定的最低时间限制，以避免战斗立即结束。



COMBAT_MAX_GROUPS = 1,											— Max amount of “Fire Exchange” groups (FEX).

COMBAT_MAX_GROUPS = 1, — “火力交换”小组（FEX）的最大数量。

COMBAT_MIN_DURATION = 8,										— Min combat duration before we can retreat. It’s a balancing variable so it’s not possible to always run with our weak ships agains big flotillas.

COMBAT_MIN_DURATION = 8, —— 最小战斗持续时间，之后才能撤退。这是一个平衡变量，防止我们总是能用弱小舰船对抗大型舰队时轻易逃脱。

COMBAT_INITIAL_DURATION = 6,									— Number of hours that is considered the “initial phase” of naval combat, used for modifiers like surprise attack during “initial combat”

COMBAT_INITIAL_DURATION = 6, — 被视为海战“初始阶段”的小时数，用于“战斗初期”的突袭等修正计算

COMBAT_RETREAT_DECISION_CHANCE = 0.22, 							— There is also random factor in deciding if we should retreat or not. That causes a delay in taking decision, that sooner or later will be picked. It’s needed so damaged fast ships won’t troll the combat.

COMBAT_RETREAT_DECISION_CHANCE = 0.22, —— 决定是否撤退时还存在随机因素。这会导致决策延迟，但迟早会做出选择。此机制旨在防止受损的快速舰船干扰战斗。

COMBAT_DETECTED_CONVOYS_FROM_SURFACE_DETECTION_STAT = 0.1,		— Each 1.0 of surface_detection that ship has (equipment stat), gives x% of convoys discovered from total travelling along the route.

COMBAT_DETECTED_CONVOYS_FROM_SURFACE_DETECTION_STAT = 0.1, — 舰船每拥有1.0点水面探测属性值（装备属性），就能从航线总运输量中发现x%的护航船队。

COMBAT_BASE_CRITICAL_CHANCE = 0.05,								— Base chance for receiving a critical chance. It get’s scaled down with ship reliability.

COMBAT_BASE_CRITICAL_CHANCE = 0.05, — 基础暴击几率。此数值会随着舰船可靠性按比例降低。

COMBAT_CRITICAL_DAMAGE_MULT = 5.0,								— Multiplier for the critical damage. Scaled down with the ship reliability.

COMBAT_CRITICAL_DAMAGE_MULT = 5.0, — 暴击伤害的倍数。随舰船可靠性降低而按比例减少。

COMBAT_ARMOR_PIERCING_CRITICAL_BONUS = 1.0,						— Bonus to critical chance when shooter armor piercing is higher then target armor.

COMBAT_ARMOR_PIERCING_CRITICAL_BONUS = 1.0, — 当射击者护甲穿透高于目标护甲时，暴击几率的加成。

COMBAT_ARMOR_PIERCING_DAMAGE_REDUCTION = 0,					— All damage reduction % when target armor is >= then shooter armor piercing. (depricated)

COMBAT_ARMOR_PIERCING_DAMAGE_REDUCTION = 0, —— 当目标护甲值 >= 射击者穿甲值时，所有伤害减免百分比。（已弃用）

REPAIR_AND_RETURN_PRIO_LOW = 0.2,								— % of total Strength. When below, navy will go to home base to repair.

REPAIR_AND_RETURN_PRIO_LOW = 0.2, —— 占总兵力百分比。低于此值时，海军将返回母港维修。

REPAIR_AND_RETURN_PRIO_MEDIUM = 0.5,							— % of total Strength. When below, navy will go to home base to repair.

REPAIR_AND_RETURN_PRIO_MEDIUM = 0.5, —— 占总强度的百分比。当低于此值时，海军将返回母港进行维修。

REPAIR_AND_RETURN_PRIO_HIGH = 0.9,								— % of total Strength. When below, navy will go to home base to repair.

REPAIR_AND_RETURN_PRIO_HIGH = 0.9, —— 占总兵力的百分比。低于此值时，海军将返回基地进行维修。

REPAIR_AND_RETURN_PRIO_LOW_COMBAT = 0.6,						— % of total Strength. When below, navy will go to home base to repair (in combat).

REPAIR_AND_RETURN_PRIO_LOW_COMBAT = 0.6，——占总战力的百分比。当低于此值时，海军将返回母港进行维修（战斗中）。

REPAIR_AND_RETURN_PRIO_MEDIUM_COMBAT = 0.3,						— % of total Strength. When below, navy will go to home base to repair (in combat).

REPAIR_AND_RETURN_PRIO_MEDIUM_COMBAT = 0.3, —— 占总力量的百分比。当低于此值时，海军将返回基地进行修理（战斗中）。

REPAIR_AND_RETURN_PRIO_HIGH_COMBAT = 0.1,						— % of total Strength. When below, navy will go to home base to repair (in combat).

REPAIR_AND_RETURN_PRIO_HIGH_COMBAT = 0.1, —— 占总战力的百分比。低于此值时，海军将在战斗中返回母港修理。

REPAIR_AND_RETURN_AMOUNT_SHIPS_LOW = 0.2,						— % of total damaged ships, that will be sent for repair-and-return in one call.

REPAIR_AND_RETURN_AMOUNT_SHIPS_LOW = 0.2, — 受损舰船总数中，单次调用将送修并返回的比例。

REPAIR_AND_RETURN_AMOUNT_SHIPS_MEDIUM = 0.4,					— % of total damaged ships, that will be sent for repair-and-return in one call.

REPAIR_AND_RETURN_AMOUNT_SHIPS_MEDIUM = 0.4, — 受损船只总数中，单次调用将送修并返回的比例。

REPAIR_AND_RETURN_AMOUNT_SHIPS_HIGH = 0.8,						— % of total damaged ships, that will be sent for repair-and-return in one call.

REPAIR_AND_RETURN_AMOUNT_SHIPS_HIGH = 0.8, — 受损舰船总数中，单次调用将送修并返回的比例。

REPAIR_AND_RETURN_UNIT_DYING_STR = 0.2,							— Str below this point is considering a single ship “dying”, and a high priority to send to repair.

REPAIR_AND_RETURN_UNIT_DYING_STR = 0.2, — 当舰船强度低于此值时，视为该舰船“濒危”，需优先送往维修。

EXPERIENCE_LOSS_FACTOR = 1.00, 					— percentage of experienced solders who die when manpower is removed

经验损失系数 = 1.00，——当人力被移除时，经验丰富的士兵的死亡百分比

NAVY_EXPENSIVE_IC = 5500,										— How much IC is considering the fleet to be expensive. Those expensive will triger the alert, when are on low STR.

NAVY_EXPENSIVE_IC = 5500, —— 舰队被视为昂贵所需的IC数值。当这些昂贵舰队的强度（STR）较低时，将触发警报。

MISSION_MAX_REGIONS = 0,										— Limit of the regions that can be assigned to naval mission. Set to 0 for unlimited.

MISSION_MAX_REGIONS = 0, — 可分配给海军任务的区域数量上限。设为0表示无限制。

CONVOY_EFFICIENCY_LOSS_MODIFIER = 1.25,							— How much efficiency drops when losing convoys. If modifier is 0.5, then losing 100% of convoys in short period, the efficiency will drop by 50%.

CONVOY_EFFICIENCY_LOSS_MODIFIER = 1.25, —— 当运输船队损失时效率下降的程度。若修正值为0.5，则在短时间内损失100%运输船队时，效率将下降50%。

CONVOY_EFFICIENCY_REGAIN_AFTER_DAYS = 7,						— Convoy starts regaining it’s efficiency after X days without any convoys being sink.

CONVOY_EFFICIENCY_REGAIN_AFTER_DAYS = 7, — 护航队在不被击沉X天后开始恢复其效率。

CONVOY_EFFICIENCY_REGAIN_BASE_SPEED = 0.04,						— How much efficiency regains every day.

CONVOY_EFFICIENCY_REGAIN_BASE_SPEED = 0.04, — 每天恢复多少效率。

CONVOY_EFFICIENCY_MIN_VALUE = 0.05,								— To avoid complete 0% efficiency, set the lower limit.

CONVOY_EFFICIENCY_MIN_VALUE = 0.05, —— 为避免效率完全为零，设置此下限。

CONVOY_ROUTE_SIZE_CONVOY_SCALE = 0.5, — scales impact of convoy route size (0 to turn off)

CONVOY_ROUTE_SIZE_CONVOY_SCALE = 0.5, — 控制护航路线规模的影响系数（设为0可关闭此效果）

ANTI_AIR_TARGETTING_TO_CHANCE = 0.2,							— Balancing value to convert averaged equipment stats (anti_air_targetting and naval_strike_agility) to probability chances of airplane being hit by navies AA.

ANTI_AIR_TARGETTING_TO_CHANCE = 0.2, —— 平衡值，用于将平均装备属性（防空锁定和海军打击机动性）转换为飞机被海军防空火力击中的概率。

ANTI_AIR_ATTACK_TO_AMOUNT = 0.01,								— Balancing value to convert equipment stat anti_air_attack to the random % value of airplanes being hit.

ANTI_AIR_ATTACK_TO_AMOUNT = 0.01, — 平衡数值，用于将装备属性中的防空攻击力转换为击中飞机随机百分比的数值。

CONVOY_SINKING_SPILLOVER = 0.5, 				— Damaged convoys roll for if they sink in the end of combat by accumulating the damage. This scales that chance.

CONVOY_SINKING_SPILLOVER = 0.5, —— 受损的运输船队在战斗结束时根据累计伤害进行沉没判定。此数值调整该概率。

UNIT_EXPERIENCE_PER_COMBAT_HOUR = 10,

每战斗小时单位经验值 = 10,

UNIT_EXPERIENCE_SCALE = 1,

单位经验比例 = 1,

EXPERIENCE_FACTOR_CONVOY_ATTACK = 0.04,

经验系数_车队攻击 = 0.04,

EXPERIENCE_FACTOR_NON_CARRIER_GAIN = 0.04,						— Xp gain by non-carrier ships in the combat

EXPERIENCE_FACTOR_NON_CARRIER_GAIN = 0.04, — 非航母舰船在战斗中获得的经验值

EXPERIENCE_FACTOR_CARRIER_GAIN = 0.08,							— Xp gain by carrier ships in the combat

EXPERIENCE_FACTOR_CARRIER_GAIN = 0.08, —— 航母在战斗中获得的经验值系数

FIELD_EXPERIENCE_SCALE = 0.075,

FIELD_EXPERIENCE_SCALE = 0.075,

FIELD_EXPERIENCE_MAX_PER_DAY = 50,								— Most xp you can gain per day

每天最多可获得的经验值 = 50

LEADER_EXPERIENCE_SCALE = 1.0,

领导者经验比例 = 1.0,

BATTLE_NAME_VP_FACTOR = 100,									— Name is given by ((VP value) * BATTLE_NAME_VP_FACTOR) / (Distance VP -> battle)

BATTLE_NAME_VP_FACTOR = 100, — 名称由 ((VP值) * BATTLE_NAME_VP_FACTOR) / (VP到战斗的距离) 给出

BATTLE_NAME_VP_CUTOFF = 1.0,									— If best score of above calculation is below this, name will be that of region.

BATTLE_NAME_VP_CUTOFF = 1.0，——若上述计算的最佳得分低于此值，名称将采用区域名称。

AMPHIBIOUS_LANDING_PENALTY = -0.5,								— amphibious landing penalty

两栖登陆惩罚 = -0.5, — 两栖登陆惩罚

AMPHIBIOUS_INVADE_SPEED_BASE = 0.5, 							— every hour movement progress on amphibious invasion

两栖入侵基础速度 = 0.5，——每小时两栖入侵的移动进度

AMPHIBIOUS_INVADE_MOVEMENT_COST = 24.0, 						— total progress cost of movement while amphibious invading

两栖入侵移动成本 = 24.0, ——两栖入侵期间移动的总进度消耗

AMPHIBIOUS_INVADE_ATTACK_LOW = 0.2, 							— low and high cap of attack modifier scale. Scale interpolated by invasion progress.

AMPHIBIOUS_INVADE_ATTACK_LOW = 0.2, ——攻击修正比例尺的上下限。比例尺根据入侵进度进行插值。

AMPHIBIOUS_INVADE_ATTACK_HIGH = 1.0,

两栖入侵攻击强度高 = 1.0,

AMPHIBIOUS_INVADE_DEFEND_LOW = 1.5, 							— low and high cap of defend modifier scale. Scale interpolated by invasion progress.

两栖入侵防御低值 = 1.5, ——防御修正比例尺的上下限。比例尺根据入侵进度进行插值。

AMPHIBIOUS_INVADE_DEFEND_HIGH = 1.0,

两栖入侵防御强度 = 1.0,

AMPHIBIOUS_INVADE_LANDING_PENALTY_DECREASE = 3.5, 				— scale of bonus that decreases “amphibious penalty” during combat, relative to invading transporter tech.

两栖登陆惩罚减少 = 3.5, ——根据入侵运输技术，降低战斗中“两栖惩罚”的奖励比例。

BASE_CARRIER_SORTIE_EFFICIENCY = 0.5,							— factor of planes that can sortie by default from a carrier

BASE_CARRIER_SORTIE_EFFICIENCY = 0.5, —— 航母默认可出动飞机的系数

CONVOY_ATTACK_BASE_FACTOR = 0.15, — base % of convoys that get intercepted

CONVOY_ATTACK_BASE_FACTOR = 0.15, — 被拦截运输船队的基础百分比

NAVAL_SPEED_MODIFIER = 0.1,	 				— basic speed control

NAVAL_SPEED_MODIFIER = 0.1, — 基本速度控制

NAVAL_RANGE_TO_INGAME_DISTANCE = 0.12,							— Scale the ship stats “naval_range” to the ingame distance

NAVAL_RANGE_TO_INGAME_DISTANCE = 0.12, — 将舰船属性中的“naval_range”按比例转换为游戏内距离

NAVAL_INVASION_PREPARE_HOURS = 168,								— base hours needed to prepare an invasion

NAVAL_INVASION_PREPARE_HOURS = 168, — 准备入侵所需的基础小时数

NAVAL_COMBAT_RESULT_TIMEOUT_YEARS = 2,							— after that many years, we clear the naval combat results, so they don’t get stuck forever in the memory.

NAVAL_COMBAT_RESULT_TIMEOUT_YEARS = 2, —— 经过这些年数后，我们将清除海战结果，使其不会永远停留在记忆中。

CONVOY_LOSS_HISTORY_TIMEOUT_MONTHS = 24,						— after this many months remove the history of lost convoys to not bloat savegames and memory since there is no way to see them anyway

CONVOY_LOSS_HISTORY_TIMEOUT_MONTHS = 24，——超过此月数后移除丢失护航队的历史记录，以避免存档和内存膨胀，反正也无法查看这些记录

NAVAL_TRANSFER_BASE_SPEED = 6, — base speed of units on water being transported

NAVAL_TRANSFER_BASE_SPEED = 6, —— 水上被运输单位的基础速度

NAVAL_TRANSFER_BASE_NAVAL_DIST_ADD = 100,						— Extra cost for naval movement ( compared to land movement ) when deciding what ports to use for a naval transfer

NAVAL_TRANSFER_BASE_NAVAL_DIST_ADD = 100, — 在决定使用哪些港口进行海军转移时，相比陆地移动，海上移动的额外成本

NAVAL_TRANSFER_BASE_NAVAL_DIST_MULT = 20,						— Multiplier for the cost of naval movement ( compared to land movement ) when deciding what ports to use for naval transfer

NAVAL_TRANSFER_BASE_NAVAL_DIST_MULT = 20, — 决定使用哪些港口进行海军转移时，海军移动成本（与陆地移动相比）的乘数

NAVAL_SUPREMACY_CAN_INVADE = 0.5,								— required naval supremacy to perform invasions on an area

NAVAL_SUPREMACY_CAN_INVADE = 0.5, —— 执行区域入侵所需的海军优势值

CARRIER_STACK_PENALTY = 4,										— The most efficient is 4 carriers in combat. 5+ brings the penalty to the amount of wings in battle.

CARRIER_STACK_PENALTY = 4, — 最有效的战斗配置是4艘航母。超过5艘将根据参战机翼数量施加惩罚。

CARRIER_STACK_PENALTY_EFFECT = 0.2,								— Each carrier above the optimal amount decreases the amount of airplanes being able to takeoff by such %.

CARRIER_STACK_PENALTY_EFFECT = 0.2, —— 每超出最佳航母数量一艘，可起飞飞机数量将减少相应百分比。

SHORE_BOMBARDMENT_CAP = 0.25,

海岸轰炸上限 = 0.25,

ANTI_AIR_TARGETING = 0.9, — how good ships are at hitting aircraft

ANTI_AIR_TARGETING = 0.9, — 舰船对空攻击的命中率

MIN_TRACTED_ASSIST_DAMAGE_RATIO = 0.05,							— How much damage counts as assist damage

MIN_TRACTED_ASSIST_DAMAGE_RATIO = 0.05, — 多少伤害算作助攻伤害

SUPPLY_NEED_FACTOR = 4,										 — multiplies supply usage

SUPPLY_NEED_FACTOR = 4, —— 供给需求系数（用于倍增资源消耗量）

DECRYPTION_SPOTTING_BONUS = 0.2,

DECRYPTION_SPOTTING_BONUS = 0.2,

DISBAND_MANPOWER_LOSS = 0.0,

解散兵力损失 = 0.0,

MANPOWER_LOSS_RATIO_ON_SUNK = 0.5,								— sunk ships will lose this ratio of their current manpower

MANPOWER_LOSS_RATIO_ON_SUNK = 0.5, — 被击沉的舰船将损失当前人力中的这一比例

MANPOWER_LOSS_RATIO_ON_STR_LOSS = 0.5,							— losing strength will make you also lose manpower at this ratio of total manpower

MANPOWER_LOSS_RATIO_ON_STR_LOSS = 0.5, —— 当力量损失时，将按此比例从总人力中相应扣除

MIN_MANPOWER_RATIO_TO_DROP = 0.1,								— ships will not lose man power to below this ratio

MIN_MANPOWER_RATIO_TO_DROP = 0.1, —— 舰船的人力不会低于此比例

DAILY_MANPOWER_GAIN_RATIO = 0.05,								— the ships not in combat will be able to gain this ratio of their max manpower

DAILY_MANPOWER_GAIN_RATIO = 0.05, —— 未处于战斗状态的舰船将能恢复其最大人力值的这一比例

PRIDE_OF_THE_FLEET_UNASSIGN_COST = 100,							— cost to unassign/replace pride of the fleet

PRIDE_OF_THE_FLEET_UNASSIGN_COST = 100, — 解除或替换舰队之傲的消耗

PRIDE_OF_THE_FLEET_LOST_TEMP_MODIFIER_DURATION = 30,			— duration for temp modifiers that you get when you lose your pride of the fleet

PRIDE_OF_THE_FLEET_LOST_TEMP_MODIFIER_DURATION = 30, —— 失去舰队骄傲时获得的临时修正效果持续时间

XP_GAIN_FACTOR = 1.0,	 			 							— xp gain factor for navy

XP_GAIN_FACTOR = 1.0, — 海军经验值获取系数



NAVAL_TRANSFER_DAMAGE_REDUCTION = 0.25,							— its hard to specifically balance 1-tick naval strikes vs unit transports so here is a factor for it

NAVAL_TRANSFER_DAMAGE_REDUCTION = 0.25, —— 很难精确平衡单次海军打击对单位运输的影响，因此这里设定了一个调整系数

CARRIER_ONLY_COMBAT_ACTIVATE_TIME = 0,							— hours from start of combat when carriers get to fight

CARRIER_ONLY_COMBAT_ACTIVATE_TIME = 0, — 战斗开始后航母参战的小时数

CAPITAL_ONLY_COMBAT_ACTIVATE_TIME = 6, — hours from start of combat when only carriers, capitals and subs get to attack

CAPITAL_ONLY_COMBAT_ACTIVATE_TIME = 6, —— 战斗开始后仅航空母舰、主力舰和潜艇可参与攻击的小时数

ALL_SHIPS_ACTIVATE_TIME = 8, — hours where all get to attack

ALL_SHIPS_ACTIVATE_TIME = 8, — 所有船只开始攻击的小时数



MINIMUM_SHIP_SPEED = 1.0,										— slowest speed a ship can have

MINIMUM_SHIP_SPEED = 1.0, — 船只所能达到的最低速度



REPAIR_SPLIT_TASKFORCE_SIZE = 5,								— if a country does not have empty naval naval bases for repairs, it will split ships with this sizes and distribute them around

REPAIR_SPLIT_TASKFORCE_SIZE = 5, ——若某国无空闲海军基地可供维修，将按此规模拆分舰队并分散至各处

NAVY_REPAIR_BASE_SEARCH_SCORE_PER_SHIP_WAITING_EXTRA_SHIP = 5, — if a naval base has more ships than it can repair, it will get penalties

海军修理基地每艘等待额外舰船的搜索分数 = 5，——如果海军基地需要修理的舰船数量超过其容量，将受到惩罚

NAVY_REPAIR_BASE_SEARCH_SCORE_PER_SLOT = 1.0,					— while searching for a naval base for repairs, the bases gets a bonus to their scores per empty slot they have

NAVY_REPAIR_BASE_SEARCH_SCORE_PER_SLOT = 1.0, ——在搜寻海军基地进行维修时，基地每有一个空槽位，其得分将获得加成。

NAVY_REPAIR_BASE_SEARCH_BOOST_FOR_SAME_COUNTRY = 5,				— while searching for a naval base for repairs, your own bases gets a bonus

NAVY_REPAIR_BASE_SEARCH_BOOST_FOR_SAME_COUNTRY = 5, ——在寻找海军基地进行维修时，己方基地将获得加成



CONVOY_SPOTTING_COOLDOWN = 0.3, — % of travel time

CONVOY_SPOTTING_COOLDOWN = 0.3, — 旅行时间的百分比

CONVOY_SPOTTING_COOLDOWN_MIN = 36, — minimum cooldown time

CONVOY_SPOTTING_COOLDOWN_MIN = 36, — 最小冷却时间

CONVOY_SPOTTING_COOLDOWN_MAX = 168, — maximum cooldown time

CONVOY_SPOTTING_COOLDOWN_MAX = 168, — 最大冷却时间

CONVOY_SPOTTING_COOLDOWN_MIN_FROM_EFFICIENCY = 15, — clamped min value after screening efficiency has been applied

CONVOY_SPOTTING_COOLDOWN_MIN_FROM_EFFICIENCY = 15, —— 应用筛选效率后的钳制最小值



MISSION_FUEL_COSTS = { — fuel cost for each mission

MISSION_FUEL_COSTS = { — 每次任务的燃料消耗

0.0, — HOLD (consumes fuel HOLD_MISSION_MOVEMENT_COST fuel while moving)

0.0, — 保持（移动时消耗燃料 HOLD_MISSION_MOVEMENT_COST 燃料）





1.0, — PATROL


1.0, — 巡逻


1.0, — STRIKE FORCE (does not cost fuel at base, and uses IN_COMBAT_FUEL_COST in combat. this is just for the movement in between)

1.0, — 打击部队（在基地不消耗燃料，战斗中采用IN_COMBAT_FUEL_COST。此设置仅适用于两者间的移动）

1.0, — CONVOY RAIDING

1.0, —— 护航突袭

1.0, — CONVOY ESCORT

1.0，— 护航队

1.0, — MINES PLANTING

1.0，——地雷布设

1.0, — MINES SWEEPING

1.0，—扫雷





0.6, — TRAIN


0.6，——训练


0.0, — RESERVE_FLEET (consumes fuel HOLD_MISSION_MOVEMENT_COST fuel while moving)

0.0，— 储备舰队（移动时消耗燃料HOLD_MISSION_MOVEMENT_COST燃料）

1.0, — NAVAL_INVASION_SUPPORT (does not cost fuel at base, only costs while doing bombardment and escorting units)

1.0，— 海军入侵支援（基地内不消耗燃料，仅在进行轰炸和护航单位时产生消耗）

},



HOLD_MISSION_MOVEMENT_COST = 1.0,								— ships on hold cost this much fuel while moving

HOLD_MISSION_MOVEMENT_COST = 1.0, — 待命状态的舰船移动时消耗此数值的燃料

ON_BASE_FUEL_COST = 0.0,										— ships that waits at naval bases cost this ratio

ON_BASE_FUEL_COST = 0.0， — 停泊在海军基地的舰船按此比例消耗燃料

IN_COMBAT_FUEL_COST = 2.0,										— ships in combat will get this ratio for fuel cost

战斗中燃料消耗 = 2.0, — 处于战斗状态的舰船将按此比例计算燃料消耗

TRAINING_FUEL_COST_FOR_ESCORT_SHIPS = 0.15,						— ships that are on training mission but not training (ie they are at max xp and training will cancel at max xp) will consume this ratio of fuel

训练任务中护航舰船的燃料消耗比例 = 0.15, —— 执行训练任务但实际未在进行训练的舰船（即经验值已达上限，训练将在经验值满时自动取消）将按此比例消耗燃料



MAX_FUEL_FLOW_MULT = 2.0, — max fuel flow ratio for ships, which will be multiplied by supply

MAX_FUEL_FLOW_MULT = 2.0, ——舰船的最大燃料流量系数，将与补给量相乘

FUEL_COST_MULT = 0.10, — fuel multiplier for all naval missions

FUEL_COST_MULT = 0.10, ——所有海军任务的燃油消耗系数



OUT_OF_FUEL_SPEED_FACTOR = -0.75,

燃油耗尽速度系数 = -0.75,

OUT_OF_FUEL_RANGE_FACTOR = -0.75,

燃油耗尽范围系数 = -0.75,

OUT_OF_FUEL_ATTACK_FACTOR = -0.5,

OUT_OF_FUEL_ATTACK_FACTOR = -0.5,

OUT_OF_FUEL_TORPEDO_FACTOR = -0.8,

OUT_OF_FUEL_TORPEDO_FACTOR = -0.8,



UNDERWAY_REPLENISHMENT_RANGE_FACTOR = 0.4,			— bonus factor applied to task force’s range when underway replenishment is activated (e.g. 0.2 means +20%)

UNDERWAY_REPLENISHMENT_RANGE_FACTOR = 0.4, —— 当进行海上补给时，作用于舰队航程的加成系数（例如0.2表示+20%）

UNDERWAY_REPLENISHMENT_CONVOY_COST_PER_FUEL = 0.28,	— Cost in convoys for underway replenishment multiplied by max daily fuel consumption (rounded up)

UNDERWAY_REPLENISHMENT_CONVOY_COST_PER_FUEL = 0.28, — 海上补给队成本乘以每日最大燃料消耗量（向上取整）的数值



MISSION_SPREADS = { — mission spreads in the case a ship join combat, which is calculated for number of ships that will be in combat. 1 means no ship will be at start

MISSION_SPREADS = { — 当舰船加入战斗时的任务散布，此数值将根据参与战斗的舰船数量计算。1表示初始状态下无舰船

0.0, — HOLD

0.0，——持有

0.0, — PATROL

0.0，——巡逻

0.0, — STRIKE FORCE

0.0，—— 突击部队

0.0, — CONVOY RAIDING

0.0，— 护航突袭

0.0, — CONVOY ESCORT

0.0，——护航编队

0.7, — MINES PLANTING

0.7，——地雷布设

0.7, — MINES SWEEPING

0.7，——扫雷

0.5, — TRAIN

0.5，——火车

0.0, — RESERVE_FLEET

0.0, — 后备舰队





0.0, — NAVAL_INVASION_SUPPORT


0.0，—海军入侵支援


},

MISSION_DEFAULT_SPREAD_BASE = 1.0, — multiplier for mission spreads. higher = less ships on start

MISSION_DEFAULT_SPREAD_BASE = 1.0, — 任务扩散的基础乘数。数值越高 = 初始飞船数量越少



AGGRESSION_SETTINGS_VALUES = { — ships will use this values while deciding to attack enemies

AGGRESSION_SETTINGS_VALUES = { — 舰船在决定攻击敌人时将使用这些数值

0,		— do not engage

0，—— 不要参与

0.5,	— low

0.5，— 低

0.9,	— medium

0.9，——中等





2.0,	— high


2.0，——高


10000,	— I am death incarnate!

一万，——我是死亡的化身！

},



AGGRESION_MULTIPLIER_FOR_COMBAT = 1.2,				— ships are more aggresive in combat

AGGRESION_MULTIPLIER_FOR_COMBAT = 1.2, — 舰船在战斗中更具攻击性



AGGRESSION_ARMOR_EFFICIENCY_MULTIPLIER = 1.0,		— armor to enemy piercing ratio is multiplied by this value, which will increase the strength of ships while considering them for aggression

AGGRESSION_ARMOR_EFFICIENCY_MULTIPLIER = 1.0, ——装甲对敌方穿透率的比值将乘以该数值，此操作会在评估舰船攻击性时增强其强度

AGGRESSION_MIN_ARMOR_EFFICIENCY = 0.5, — armor multiplier has a min and max caps while being factored in aggression

AGGRESSION_MIN_ARMOR_EFFICIENCY = 0.5, —— 在计算侵略性时，装甲倍率设有最小和最大上限

AGGRESSION_MAX_ARMOR_EFFICIENCY = 1.5, — armor multiplier has a min and max caps while being factored in aggression

AGGRESSION_MAX_ARMOR_EFFICIENCY = 1.5, —— 护甲倍率在计算侵略性时有最小和最大上限



AGGRESSION_LIGHT_GUN_EFFICIENCY_ON_LIGHT_SHIPS = 1.0, — ratio for scoring for different gun types against light ships

AGGRESSION_LIGHT_GUN_EFFICIENCY_ON_LIGHT_SHIPS = 1.0, — 轻型舰炮对轻型舰艇的评分比例

AGGRESSION_HEAVY_GUN_EFFICIENCY_ON_LIGHT_SHIPS = 0.25,— ratio for scoring for different gun types against light ships

AGGRESSION_HEAVY_GUN_EFFICIENCY_ON_LIGHT_SHIPS = 0.25，— 针对轻型舰船不同火炮类型的评分比率

AGGRESSION_TORPEDO_EFFICIENCY_ON_LIGHT_SHIPS = 0.1, — ratio for scoring for different gun types against light ships

AGGRESSION_TORPEDO_EFFICIENCY_ON_LIGHT_SHIPS = 0.1, —— 针对轻型舰船不同火炮类型的得分比率



AGGRESSION_LIGHT_GUN_EFFICIENCY_ON_HEAVY_SHIPS = 0.1, — ratio for scoring for different gun types against heavy ships

AGGRESSION_LIGHT_GUN_EFFICIENCY_ON_HEAVY_SHIPS = 0.1, —— 轻型火炮对重型舰船的不同射击效率评分比例

AGGRESSION_HEAVY_GUN_EFFICIENCY_ON_HEAVY_SHIPS = 1.0, — ratio for scoring for different gun types against heavy ships

AGGRESSION_HEAVY_GUN_EFFICIENCY_ON_HEAVY_SHIPS = 1.0, — 针对重型舰船不同火炮类型的得分比例

AGGRESSION_TORPEDO_EFFICIENCY_ON_HEAVY_SHIPS = 1.1, — ratio for scoring for different gun types against heavy ships

AGGRESSION_TORPEDO_EFFICIENCY_ON_HEAVY_SHIPS = 1.1, —— 针对重型舰船的不同武器类型的得分比例



AGGRESSION_CONVOY_STRENGTH_FACTOR = 0.3,			 — convoys in combat gets a penalty to their strength in aggression calculations

AGGRESSION_CONVOY_STRENGTH_FACTOR = 0.3, — 在侵略计算中，护航船队在战斗时会受到战斗力惩罚



SUBMARINE_ESCAPE_RATIOS = { — subs will escape battle in convoy raid if there are enemies that can attack

潜艇逃脱比例 = { — 在护航袭击中，若有敌方单位可发动攻击，潜艇将逃离战斗

1000, — do not engage

1000，——请勿参与

15, — low

15，——低

3.0, — medium

3.0，——中等





1.0, — high


1.0，——高


0.1, — I am death incarnate!

0.1，——我是死亡的化身！

},



MIN_REPAIR_FOR_JOINING_COMBATS = { — strikeforces/patrol forces will not join combats if they are not repaired enough

MIN_REPAIR_FOR_JOINING_COMBATS = { — 打击部队/巡逻部队若未充分修复将不会加入战斗

0.0,	— do not repair

0.0, —— 勿修复

0.5,	— low

0.5，— 低

0.7,	— medium

0.7，——中等





0.9,	— high


0.9，——高


},



ORG_COST_WHILE_MOVING = { — org cost while the ships are moving

ORG_COST_WHILE_MOVING = { —— 船只移动时的组织成本

0.3, — HOLD

0.3，——持有

0.2, — PATROL

0.2，——巡逻

0.25, — STRIKE FORCE

0.25，— 突击队

0.2, — CONVOY RAIDING

0.2，—— 护航突袭

0.2, — CONVOY ESCORT

0.2，—护航任务

0.2, — MINES PLANTING

0.2，——地雷布设

0.2, — MINES SWEEPING

0.2，——扫雷

0.2, — TRAIN

0.2，——训练

0.3, — RESERVE_FLEET

0.3，—后备舰队





0.2, — NAVAL_INVASION_SUPPORT


0.2，—海军入侵支援


},



ORG_COST_WHILE_MOVING_IN_MISSION_ZONE = { — org cost while moving in mission zone

ORG_COST_WHILE_MOVING_IN_MISSION_ZONE = { — 任务区域内移动时的组织成本

0.0, — HOLD

0.0，——持有

0.0, — PATROL

0.0，——巡逻

0.0, — STRIKE FORCE

0.0，—— 突击部队

0.0, — CONVOY RAIDING

0.0，— 护航突袭

0.0, — CONVOY ESCORT

0.0，——护航编队

0.0, — MINES PLANTING

0.0，——地雷布设

0.0, — MINES SWEEPING

0.0，——扫雷

0.0, — TRAIN

0.0，——火车

0.0, — RESERVE_FLEET

0.0, — 后备舰队





0.0, — NAVAL_INVASION_SUPPORT


0.0，—海军入侵支援


},



MAX_ORG_ON_MANUAL_MOVE = 0.66,	— org will clamped to this ratio on manual move

MAX_ORG_ON_MANUAL_MOVE = 0.66, —— 手动移动时，org将被限制在此比例

MIN_ORG_ON_MANUAL_MOVE = 0.1,	— org will clamped to this ratio on manual move

MIN_ORG_ON_MANUAL_MOVE = 0.1, —— 手动移动时组织将被限制在此比例



INITIAL_ALLOWED_DOCKYARD_RATIO_FOR_REPAIRS = 0.25,				— initially countries will allocate this ratio of dockyards for repairs

INITIAL_ALLOWED_DOCKYARD_RATIO_FOR_REPAIRS = 0.25, —— 初始状态下国家将分配此比例的船坞用于维修



MISSION_SUPREMACY_RATIOS = { — supremacy multipliers for different mission types

MISSION_SUPREMACY_RATIOS = { — 不同任务类型的统治力倍数

0.0, — HOLD

0.0，——持有

1.0, — PATROL

1.0, — 巡逻

1.0, — STRIKE FORCE

1.0，——特遣部队

0.5, — CONVOY RAIDING

0.5，— 护航突袭

0.5, — CONVOY ESCORT

0.5，——护航队

0.3, — MINES PLANTING

0.3，——地雷布设

0.3, — MINES SWEEPING

0.3，——扫雷

0.0, — TRAIN

0.0，——火车

0.0, — RESERVE_FLEET

0.0, — 后备舰队





1.0, — NAVAL_INVASION_SUPPORT


1.0，— 海军入侵支援


},



SUPREMACY_PER_SHIP_PER_MANPOWER = 0.05,							— supremacy of a ship is calculated using its IC, manpower and a base define

SUPREMACY_PER_SHIP_PER_MANPOWER = 0.05, —— 舰船的霸权值基于其工业成本（IC）、人力消耗及基础定义计算得出。

SUPREMACY_PER_SHIP_PER_IC = 0.005,

每舰船每工业能力至高权值 = 0.005,

SUPREMACY_PER_SHIP_BASE = 0,

SUPREMACY_PER_SHIP_BASE = 0,



NAVAL_MINES_IN_REGION_MAX = 1000.0,								— Max number of mines that can be layed by the ships. The value should be hidden from the user, as we present % so it’s an abstract value that should be used for balancing.

NAVAL_MINES_IN_REGION_MAX = 1000.0, — 船只可布设水雷的最大数量。该数值应对用户隐藏，因为我们以百分比形式呈现，这是一个用于平衡的抽象值。

NAVAL_MINES_PLANTING_SPEED_MULT = 0.01,						— Value used to overall balance of the speed of planting naval mines

NAVAL_MINES_PLANTING_SPEED_MULT = 0.01, —— 用于整体平衡海军布雷速度的数值

NAVAL_MINES_SWEEPING_SPEED_MULT = 0.009,						— Value used to overall balance of the speed of sweeping naval mines

NAVAL_MINES_SWEEPING_SPEED_MULT = 0.009, —— 用于整体平衡扫除海军水雷速度的数值

NAVAL_MINES_DECAY_AT_PEACE_TIME = 0.25,							— How fast mines are decaying in peace time. Planting mines in peace time may be exploitable, so it’s blocked atm. That’s why after war we should decay them too.

NAVAL_MINES_DECAY_AT_PEACE_TIME = 0.25, —— 和平时期水雷的衰减速度。和平时期布设水雷可能存在滥用风险，因此当前已被禁止。正因如此，战后我们也需让它们逐渐失效。

NAVAL_MINES_SWEEPERS_REDUCTION_ON_PENALTY_EFFECT = 3.3,			— How much is the task force’s sweeping attribute reducing the penalty effect.

NAVAL_MINES_SWEEPERS_REDUCTION_ON_PENALTY_EFFECT = 3.3, —— 任务部队的扫雷属性在多大程度上减轻了惩罚效果。

NAVAL_MINES_INTEL_DIFF_FACTOR = 0.5,							— Better our decryption over enemy encryption will reduce the penalties from the enemy mines in the region. This value is a factor to be used for balancing.

NAVAL_MINES_INTEL_DIFF_FACTOR = 0.5, ——我方解密能力优于敌方加密时，将减轻该区域敌方水雷造成的惩罚。此数值为用于平衡的系数。

NAVAL_MINES_NAVAL_SUPREMACY_FACTOR = 1.0,						— Factor for max amount of mines increasing naval supremacy

NAVAL_MINES_NAVAL_SUPREMACY_FACTOR = 1.0, —— 影响水雷最大数量提升海军优势的系数



ATTRITION_WHILE_MOVING_FACTOR = 1.5,							— attrition multiplier while moving & doing missions

移动时损耗系数 = 1.5, —— 执行任务及移动时的损耗乘数

ATTRITION_DAMAGE_ORG = 0.01,					 				— damage from attrition to Organisation (relative to max org)

ATTRITION_DAMAGE_ORG = 0.01, — 损耗对组织度的伤害（相对于最大组织度的比例）

ATTRITION_DAMAGE_STR = 0.03,					 				— damage from attrition to str (relative to max str)

ATTRITION_DAMAGE_STR = 0.03, — 损耗对兵力的伤害（相对于最大兵力）

ATTRITION_STR_DAMAGE_CHANCE = 0.2,								— chance to get damaged at highest attrition

ATTRITION_STR_DAMAGE_CHANCE = 0.2, — 在最高损耗状态下遭受损伤的几率



NAVAL_ACCIDENT_CHANCE_REDUCTION_ON_POTF = 0.01,					— Scale of the current chance for an accident to happen, applied for the pride of the fleet.

NAVAL_ACCIDENT_CHANCE_REDUCTION_ON_POTF = 0.01, — 当前事故发生概率的调整系数，适用于舰队旗舰。

NAVAL_ACCIDENT_CRITICAL_HIT_CHANCE_REDUCTION_POTF = 0.01,		— Scale of the current chance for a critical hit when an accident happens, applied for the pride of the fleet.

NAVAL_ACCIDENT_CRITICAL_HIT_CHANCE_REDUCTION_POTF = 0.01, — 舰队荣耀状态下发生事故时当前暴击几率的调整系数。



NAVAL_MINES_ACCIDENT_CRITICAL_HIT_CHANCES = 0.14,				— If an accident happens, how likely it is to be a critical hit (caused by naval mines)

NAVAL_MINES_ACCIDENT_CRITICAL_HIT_CHANCES = 0.14, —— 若发生事故，其为关键命中（由水雷造成）的概率

NAVAL_MINES_ACCIDENT_CRITICAL_HIT_DAMAGE_SCALE = 5.0,			— Scale the value below in case of critical hit (caused by naval mines)

NAVAL_MINES_ACCIDENT_CRITICAL_HIT_DAMAGE_SCALE = 5.0, — 在暴击情况下（由海军水雷引发）缩放以下数值

NAVAL_MINES_ACCIDENT_STRENGTH_LOSS = 50.0,						— Amount of strength loss when hit by naval mine

NAVAL_MINES_ACCIDENT_STRENGTH_LOSS = 50.0, — 被海军水雷击中时的强度损失量

NAVAL_MINES_ACCIDENT_ORG_LOSS_FACTOR = 0.5,						— Amount of strength loss when hit by naval mine

NAVAL_MINES_ACCIDENT_ORG_LOSS_FACTOR = 0.5, —— 被海军水雷击中时的组织度损失量



TRAINING_ACCIDENT_CHANCES = 0.02,						— Chances one ship get damage each hour while on training

训练事故概率 = 0.02，——每艘船在训练时每小时受损的几率

TRAINING_ACCIDENT_CRITICAL_HIT_CHANCES = 0.3,					— If an accident happens, how likely it is to be a critical hit

TRAINING_ACCIDENT_CRITICAL_HIT_CHANCES = 0.3, —— 若发生意外，造成致命一击的概率

TRAINING_ACCIDENT_CRITICAL_HIT_DAMAGE_SCALE = 4.0,				— Scale the value below in case of critical hit

TRAINING_ACCIDENT_CRITICAL_HIT_DAMAGE_SCALE = 4.0，——在暴击时调整以下数值的比例

TRAINING_ACCIDENT_STRENGTH_LOSS = 4.0,							— Amount of strength loss in a training accident

训练事故导致的力量损失 = 4.0, —— 训练事故中力量损失的数值

TRAINING_ACCIDENT_STRENGTH_LOSS_FACTOR = 0.05,						— Amount of strength loss in a training accident, propotional to the maximum strength of the ship

TRAINING_ACCIDENT_STRENGTH_LOSS_FACTOR = 0.05, —— 训练事故中舰船强度损失量，与舰船最大强度成正比

TRAINING_ACCIDENT_ORG_LOSS_FACTOR = 0.3,						— Amount of current organization the ship lose

TRAINING_ACCIDENT_ORG_LOSS_FACTOR = 0.3, — 舰船当前组织度损失比例



ACCIDENTS_CHANCE_BALANCE_FACTOR = 0.04,							— General chance for naval accidents for balancing the gameplay.

ACCIDENTS_CHANCE_BALANCE_FACTOR = 0.04, — 用于平衡游戏体验的海军事故基础概率。



— The Formula: Min( TRAINING_MAX_DAILY_COUNTRY_EXP Ratio, TRAINING_DAILY_COUNTRY_EXP_FACTOR ( TRAINING_DAILY_COUNTRY_EXP_SHIP_RATIO_FACTOR * TrainingShipCount / CountryShipCount

公式：取（训练每日国家经验上限比率，训练每日国家经验系数（训练每日国家经验舰船比率系数 × 训练舰船数 / 国家舰船数））中的较小值

— + TRAINING_DAILY_COUNTRY_EXP_MANPOWER_FACTOR * Manpower + TRAINING_DAILY_COUNTRY_EXP_MANPOWER_RATIO_FACTOR * Manpower / CountryShipCount ) )

— + 训练每日国家经验人力系数 * 人力 + 训练每日国家经验人力比例系数 * 人力 / 国家舰船数量 ) )

TRAINING_EXPERIENCE_FACTOR = 0.3,								— Amount of exp each ship gain every 24h while training (before modifiers)

TRAINING_EXPERIENCE_FACTOR = 0.3, — 每艘舰船在训练期间每24小时获得的基础经验值（未计算修正系数前）

TRAINING_DAILY_COUNTRY_EXP_FACTOR = 0.001,						— Factor used to scale the Daily Country Navy XP gain

TRAINING_DAILY_COUNTRY_EXP_FACTOR = 0.001, — 用于调整每日国家海军经验值获取的缩放因子

TRAINING_DAILY_COUNTRY_EXP_MANPOWER_FACTOR = 0.006,					— Factor used to scale the sum of the training manpower for the Daily Country Navy XP gain

TRAINING_DAILY_COUNTRY_EXP_MANPOWER_FACTOR = 0.006, —— 用于调节海军每日国家经验值获取中训练人力总和的缩放因子

TRAINING_DAILY_COUNTRY_EXP_MANPOWER_RATIO_FACTOR = 0.01,				— Factor used to scale the sum of the manpower divided by the country’s number of ship for the Daily Country Navy XP gain

TRAINING_DAILY_COUNTRY_EXP_MANPOWER_RATIO_FACTOR = 0.01, —— 用于调整人力总和除以国家舰船数量所得值的比例因子，影响每日国家海军经验获取

TRAINING_DAILY_COUNTRY_EXP_SHIP_RATIO_FACTOR = 300.0,					— Factor used to scale the ratio of training ships for the Daily Country Navy XP gain

TRAINING_DAILY_COUNTRY_EXP_SHIP_RATIO_FACTOR = 300.0, — 用于缩放每日国家海军经验获取中训练舰船比例系数的因子

TRAINING_MAX_DAILY_COUNTRY_EXP = 3.5,							— Maximum navy XP daily gain

TRAINING_MAX_DAILY_COUNTRY_EXP = 3.5, — 每日海军经验获取上限

TRAINING_MIN_STRENGTH = 0.1,									— if strength is less than this, the unit will not contribute to training and cant be damaged by training

TRAINING_MIN_STRENGTH = 0.1, ——若强度低于此值，该单位将无法参与训练且不会因训练受到损伤



TRAINING_ORG = 0.2,												— max organization on traiaing mission

训练组织度 = 0.2，——训练任务中的最大组织度



BASE_SPOTTING = 1,												— base spotting percentage for navy

BASE_SPOTTING = 1, ——海军的基础侦察百分比

BASE_SPOTTING_FROM_RADAR = 5,									— base spotting percentage that comes from full radar coverage

BASE_SPOTTING_FROM_RADAR = 5, —— 来自完整雷达覆盖的基础发现百分比

NAVY_SPOTTER_DETECTION_FACTOR = 0.1,							— multiplier for task forces’ detection value before logistic transform

NAVY_SPOTTER_DETECTION_FACTOR = 0.1, —— 对特遣部队探测值进行逻辑转换前的乘数系数

BASE_SPOTTING_FROM_NAVY = 10,									— base spotting percentage that comes from task forces in area

BASE_SPOTTING_FROM_NAVY = 10, —— 来自该区域海军特遣部队的基础发现概率百分比

AIR_SPOTTER_NORMALIZED_AIRWING_SIZE = 100,						— each plane will contribute 1/this of the airwing’s detection stat

AIR_SPOTTER_NORMALIZED_AIRWING_SIZE = 100, —— 每架飞机将为航空联队的侦察属性贡献其值的1/this

AIR_SPOTTER_DETECTION_FACTOR = 0.025,							— multiplier for airwings’ detection value before logistic transform

AIR_SPOTTER_DETECTION_FACTOR = 0.025，——对空翼侦查值进行逻辑转换前的乘数

BASE_SPOTTING_FROM_AIR = 20,									— base spotting percentage that comes from airwings in area

BASE_SPOTTING_FROM_AIR = 20, —— 来自该区域航空联队的基础发现百分比

BASE_SPOTTING_FROM_DECRYPTION = 10,								— base spotting percentage that comes from decryption, can go negative (enemy decryption is subtracted)

BASE_SPOTTING_FROM_DECRYPTION = 10, ——来自解密的基础发现率百分比，可为负值（敌方解密值会从中扣除）

MIN_SPOTTING_PROGRESS = 0.01,									— Minimum spotting progress (in percent) per hourly tick

MIN_SPOTTING_PROGRESS = 0.01, — 每小时最小侦察进度（百分比）

AIR_MISSION_SPOTTING_FACTORS = {								— Multiplier for airwings’ spotting contribution per mission type

空中任务侦察系数 = { —— 按任务类型对航空联队侦察贡献的乘数





0.50, — AIR_SUPERIORITY


0.50，— 空中优势


0, — CAS

0，— CAS





0.25, — INTERCEPTION


0.25，——拦截


0, — STRATEGIC_BOMBER

0，—战略轰炸机





0.50, — NAVAL_BOMBER


0.50，—海军轰炸机


0, — DROP_NUKE

0，—— 投放核弹

0, — PARADROP

0，——空投





0.25, — NAVAL_KAMIKAZE


0.25，— 海军神风


0, — PORT_STRIKE

0，— 港口罢工

0, — ATTACK_LOGISTICS

0, — 攻击后勤

0, — AIR_SUPPLY

0，— 空气补给

0, — TRAINING

0，—— 训练

0.25, — NAVAL_MINES_PLANTING

0.25，—海军水雷布设

0.50, — NAVAL_MINES_SWEEPING

0.50，—扫雷

1.00, — RECON

1.00，— 侦察





1.50, — NAVAL_PATROL


1.50，—海军巡逻队


},



MIN_HOURS_TO_SHUFFLE_NEWLY_ASSIGNED_PATROLS = 7 * 24,			— if a fleet has less patrol than it needs to cover all of it areas, it will shuffle the patrols around. it will wait this much hour before shuffling a task force to new area

MIN_HOURS_TO_SHUFFLE_NEWLY_ASSIGNED_PATROLS = 7 * 24, —— 如果一支舰队的巡逻力量不足以覆盖其所有区域，系统将重新调配巡逻任务。在将特遣部队调往新区域前，系统会等待上述时长的小时数。

SPOTTING_ENEMY_SPOTTING_MULTIPLIER_FOR_RUNNING_AWAY = 0.80,		— enemy spotting is multiplied by this value to simulate running away

SPOTTING_ENEMY_SPOTTING_MULTIPLIER_FOR_RUNNING_AWAY = 0.80, — 敌方侦查值乘以该系数以模拟逃跑行为

SPOTTING_MULTIPLIER_FOR_SURFACE = 1.0,							— task force surface spotting value is multiplied by this and added to spotting percentage every hour

SPOTTING_MULTIPLIER_FOR_SURFACE = 1.0, — 水面特遣部队的侦察值将乘以该系数，并每小时累加到侦察百分比上

SPOTTING_MULTIPLIER_FOR_SUB = 1.0,								— task force sub spotting value is multiplied by this and added to spotting percentage every hour

SPOTTING_MULTIPLIER_FOR_SUB = 1.0, —— 潜艇的侦察值每小时将乘以该系数并累加到侦察百分比中

SPOTTING_SPEED_MULT_FOR_RUNNING_AWAY = 0.5,						— task forces that does not want to engage will reduce enemy spotting rate every hour by speed diff mult this ratio

SPOTTING_SPEED_MULT_FOR_RUNNING_AWAY = 0.5, —— 不愿接战的部队将每小时按速度差乘以该比率降低敌方侦察效率

SPOTTING_SPEED_MULT_FOR_CATCHING_UP = 0.2,						— speed diff bonus rate that is added to spotting every hour

SPOTTING_SPEED_MULT_FOR_CATCHING_UP = 0.2, —— 每小时添加到侦察中的速度差异加成率

SPOTTING_MISSION_DETECTION_THRESHOLD_LOW = 10.0,					— value between 0 and 100 above which to show very coarse information about the spotted task force

SPOTTING_MISSION_DETECTION_THRESHOLD_LOW = 10.0, —— 介于0到100之间的值，超过该值将显示关于发现的特遣部队的非常粗略的信息

SPOTTING_MISSION_DETECTION_THRESHOLD_MEDIUM = 70.0,					— value between 0 and 100 above which to show coarse information about the spotted task force. Note: accurate information are shown when spotting reach 100.

SPOTTING_MISSION_DETECTION_THRESHOLD_MEDIUM = 70.0，——介于0到100之间的数值，超过该值将显示有关发现的特遣部队的粗略信息。注意：当发现度达到100时才会显示准确信息。

NAVY_VISIBILITY_BONUS_ON_RETURN_FOR_REPAIR = 0.9,				— Multiplier for the surface/sub visiblity when the heavily damaged fleet is returning to the home base for reparation. 1.0 = no bonus. 0.0 = invisible.

NAVY_VISIBILITY_BONUS_ON_RETURN_FOR_REPAIR = 0.9, —— 受损舰队返航修理时水面/水下可见度的乘数。1.0 = 无加成。0.0 = 完全隐形。

VISIBILITY_MULTIPLIER_FOR_SPOTTING = 0.1,						— multiplier for visibility stat

VISIBILITY_MULTIPLIER_FOR_SPOTTING = 0.1, —— 用于可见度属性的乘数

INTEL_LEVEL_LOW_HALF_RANGE_PERCENTAGE = 10,							— Integer representing the maximum offset of the displayed value to the original, in percentage (divided by 100 in code). For spotting level “low”.

INTEL_LEVEL_LOW_HALF_RANGE_PERCENTAGE = 10, — 整型数值，表示显示值相对于原始值的最大偏移百分比（代码中会除以100）。用于标识“低”级别。

INTEL_LEVEL_MEDIUM_HALF_RANGE_PERCENTAGE = 5,							— Same as above but for the spotting level “medium”

INTEL_LEVEL_MEDIUM_HALF_RANGE_PERCENTAGE = 5, — 同上，但针对“中等”侦察级别

INTEL_LEVEL_LOW_HALF_RANGE_MIN_SHIPS = 3,							— If the percentage of the value is lower than this, use this value instead. For spotting level “low”

INTEL_LEVEL_LOW_HALF_RANGE_MIN_SHIPS = 3, —— 如果该数值的百分比低于此值，则改用此值。适用于“低”级侦察水平

INTEL_LEVEL_LOW_HALF_RANGE_MIN_CAPITALS = 1,							— Same as above but for capital ships

INTEL_LEVEL_LOW_HALF_RANGE_MIN_CAPITALS = 1, —— 同上，但适用于主力舰

INTEL_LEVEL_MEDIUM_HALF_RANGE_MIN_SHIPS = 1,							— If the percentage of the value is lower than this, use this value instead. For spotting level “medium”

INTEL_LEVEL_MEDIUM_HALF_RANGE_MIN_SHIPS = 1, —— 若该值的百分比低于此数值，则改用此值。适用于侦察等级“中等”

INTEL_LEVEL_MEDIUM_HALF_RANGE_MIN_CAPITALS = 1,							— Same as above but for capital ships. NOTE: overriden to 0 if the total number of ships in the task force is less than four.

INTEL_LEVEL_MEDIUM_HALF_RANGE_MIN_CAPITALS = 1, — 同上，但适用于主力舰。注意：如果任务舰队中舰船总数少于四艘，此值将被覆盖为0。

INTEL_LEVEL_LOW_STRENGTH_ESTIMATE_HALF_RANGE_PERCENTAGE = 20,					— Integer representing the maximum offset of the estimated enemy strength to the original, in percentage (divided by 100 in code). For spotting level “low”.

INTEL_LEVEL_LOW_STRENGTH_ESTIMATE_HALF_RANGE_PERCENTAGE = 20, —— 整数，表示对敌方原始实力估计的最大偏差百分比（代码中需除以100）。适用于侦察等级“低”。

INTEL_LEVEL_MEDIUM_STRENGTH_ESTIMATE_HALF_RANGE_PERCENTAGE = 10,					— Same as above for spotting level “medium”

INTEL_LEVEL_MEDIUM_STRENGTH_ESTIMATE_HALF_RANGE_PERCENTAGE = 10, — 与上述“中等”侦察级别相同

BASE_SPOTTING_SPEED = 0.0,										— daily base spotting speed

BASE_SPOTTING_SPEED = 0.0, ——每日基础侦察速度

BASE_ESCAPE_SPEED = 0.045,										— daily base escape speed (gained as percentagE)

BASE_ESCAPE_SPEED = 0.045, ——每日基础逃脱速度（按百分比计算获得）

SPEED_TO_ESCAPE_SPEED = 0.95,									— ratio to converstion from ship speed to escape speed (divided by hundred)

SPEED_TO_ESCAPE_SPEED = 0.95, — 飞船速度转换为逃逸速度的比率（除以100）

ESCAPE_SPEED_PER_COMBAT_DAY = 0.01,								— daily increase in escape speed during combat duration

ESCAPE_SPEED_PER_COMBAT_DAY = 0.01, ——战斗期间每日逃跑速度的增量

MAX_ESCAPE_SPEED_FROM_COMBAT_DURATION = 0.15,					— max escape speed that will be gained from combat duration

MAX_ESCAPE_SPEED_FROM_COMBAT_DURATION = 0.15, — 从战斗持续时间中获得的最大逃脱速度

ESCAPE_SPEED_SUB_BASE = 0.08,									— subs get faster escape speed. gets replaced by hidden version below if hidden

ESCAPE_SPEED_SUB_BASE = 0.08, —— 潜艇获得更快的逃脱速度。若处于隐藏状态，将被下方隐藏版本替代

ESCAPE_SPEED_HIDDEN_SUB = 0.18,									— hidden subs get faster escape speed

ESCAPE_SPEED_HIDDEN_SUB = 0.18, —— 隐藏潜艇获得更快的逃脱速度



SUB_DETECTION_CHANCE_BASE = 5,									— to start spotting a submarine, a dice is rolled and checked if it succeeds this percentage. if not, that enemy sub force won’t be spotted on this tick

SUB_DETECTION_CHANCE_BASE = 5, —— 开始探测潜艇时，会掷骰子并检查是否成功通过此百分比。若未通过，该敌方潜艇部队在此刻将不会被发现。

SUB_DETECTION_CHANCE_BASE_SPOTTING_EFFECT = 0.5,				— effect of base spotting for initial spotting of pure submarine forces. this along with next value is added together and rolled against a random to start spotting

SUB_DETECTION_CHANCE_BASE_SPOTTING_EFFECT = 0.5，—— 基础侦查效果对纯潜艇部队初始侦查的影响。此值与下一个数值相加后，与随机数进行对比以启动侦查。

SUB_DETECTION_CHANCE_SPOTTING_SPEED_EFFECT = 2.0,				— effect of spotting speed for initial spotting of pure submarine forces. this along with prev value is added together and rolled against a random to start spotting

SUB_DETECTION_CHANCE_SPOTTING_SPEED_EFFECT = 2.0, —— 纯潜艇部队初始发现速度的影响系数。该值与前一数值相加后，与随机数进行比对以决定是否开始发现目标

SUB_DETECTION_CHANCE_BASE_SPOTTING_POW_EFFECT = 1.5,			— effect of spotting speed will be powered by this for initial spotting of pure submarine forces. this along with prev value is added together and rolled against a random to start spotting

SUB_DETECTION_CHANCE_BASE_SPOTTING_POW_EFFECT = 1.5, —— 针对纯潜艇部队初始侦察时，侦察速度的效果将以此值为幂进行计算。此值与先前值相加后，将与随机数进行对比以触发侦察判定。



BASE_CONVOY_SPOTTING_SPEED = 0.0,								— daily base spotting speed against convoys

BASE_CONVOY_SPOTTING_SPEED = 0.0, — 每日对运输船队的基础侦察速度

BASE_UNIT_TRANSFER_SPOTTING_SPEED = 0.0,						— daily base spotting speed against unit trans

BASE_UNIT_TRANSFER_SPOTTING_SPEED = 0.0, — 针对单位转移的每日基础侦察速度

BASE_NAVAL_INVASION_SPOTTING_SPEED = 0.0,						— daily base spotting speed against unit transfers

海军入侵单位转移的基础每日侦察速度 = 0.0，



CONVOY_SPOTTING_SPEED_MULT = 1.0,								— spotting speed mult against convoys

CONVOY_SPOTTING_SPEED_MULT = 1.0, — 针对车队的侦察速度倍数

UNIT_TRANSFER_SPOTTING_SPEED_MULT = 5.0,						— spotting speed mult against unit transfers

单位转移侦察速度倍数 = 5.0, —— 针对单位转移的侦察速度倍数

NAVAL_INVASION_SPOTTING_SPEED_MULT = 10.0,						— spotting speed mult against naval invasion armies

海军入侵侦察速度倍数 = 10.0，——针对海军入侵部队的侦察速度倍数



CONVOY_DETECTION_CHANCE_BASE = 4.12,							— regular convoy base chance detection percentage (if this fails, no detection is done on that tick)

CONVOY_DETECTION_CHANCE_BASE = 4.12, ——常规护航船队基础发现几率百分比（若此项失败，则当前周期内不会执行发现检测）

BASE_SPOTTING_EFFECT_FOR_INITIAL_CONVOY_SPOTTING = 0.05,		— effect of base convoy spotting for initial spotting of regular convoys. this along with next value is added together and rolled a random once for every convoy to check for spotting

BASE_SPOTTING_EFFECT_FOR_INITIAL_CONVOY_SPOTTING = 0.05, —— 基础护航船队初始发现效果，针对常规护航船队。此值与下一个值相加后，为每支护航船队进行一次随机判定以检查是否被发现

SPOTTING_SPEED_EFFECT_FOR_INITIAL_CONVOY_SPOTTING = 0.50,		— effect of convoy spotting speed for initial spotting of regular convoys. this along with prev value is added together and rolled a random once for every convoy to check for spotting

SPOTTING_SPEED_EFFECT_FOR_INITIAL_CONVOY_SPOTTING = 0.50, —— 常规船队初始侦察时的船队侦察速度影响系数。该值与前一数值相加后，针对每支船队进行一次随机判定以计算侦察概率。

SPOTTING_MOD_FOR_CONVOY_COUNT = 0.2,							— a modifier for scaling the count of convoys on a parabolic curve (counvoy_count ^ SPOTTING_MOD_FOR_CONVOY_COUNT)

SPOTTING_MOD_FOR_CONVOY_COUNT = 0.2, —— 一个用于按抛物线比例调整护航队数量的修正因子（护航队数量^ SPOTTING_MOD_FOR_CONVOY_COUNT）



UNIT_TRANSFER_DETECTION_CHANCE_BASE = 8.0,							— unit transfer and naval invasion base chance detection percentage (if this fails, no detection is done on that tick)

UNIT_TRANSFER_DETECTION_CHANCE_BASE = 8.0, — 单位转移与海军入侵的基础侦测几率百分比（若此项失败，该次检测将不会执行）

BASE_SPOTTING_EFFECT_FOR_INITIAL_UNIT_TRANSFER_SPOTTING = 2.4,		— same as BASE_SPOTTING_EFFECT_FOR_INITIAL_CONVOY_SPOTTING, but for naval transfer convoys

BASE_SPOTTING_EFFECT_FOR_INITIAL_UNIT_TRANSFER_SPOTTING = 2.4, — 与BASE_SPOTTING_EFFECT_FOR_INITIAL_CONVOY_SPOTTING相同，但针对海军运输船队

SPOTTING_SPEED_EFFECT_FOR_INITIAL_UNIT_TRANSFER_SPOTTING = 0.12,	— same as SPOTTING_SPEED_EFFECT_FOR_INITIAL_CONVOY_SPOTTING, but for naval transfer convoys

SPOTTING_SPEED_EFFECT_FOR_INITIAL_UNIT_TRANSFER_SPOTTING = 0.12, — 与 SPOTTING_SPEED_EFFECT_FOR_INITIAL_CONVOY_SPOTTING 相同，但适用于海军运输船队

BASE_SPOTTING_EFFECT_FOR_INITIAL_NAVAL_INVASION_SPOTTING = 2.4,		— same as BASE_SPOTTING_EFFECT_FOR_INITIAL_CONVOY_SPOTTING, but for naval invasion convoys

BASE_SPOTTING_EFFECT_FOR_INITIAL_NAVAL_INVASION_SPOTTING = 2.4，——与BASE_SPOTTING_EFFECT_FOR_INITIAL_CONVOY_SPOTTING相同，但适用于海军入侵运输船队

SPOTTING_SPEED_EFFECT_FOR_INITIAL_NAVAL_INVASION_SPOTTING = 0.12,	— same as SPOTTING_SPEED_EFFECT_FOR_INITIAL_CONVOY_SPOTTING, but for naval invasion convoys

初始海军入侵侦察速度效果 = 0.12, — 与初始护航舰队侦察速度效果相同，但适用于海军入侵舰队



MIN_GUN_COOLDOWN = 0.1,											— minimum cooldown for a gun

MIN_GUN_COOLDOWN = 0.1, — 枪械的最小冷却时间

BASE_GUN_COOLDOWNS = { — number of hours for a gun to be ready after shooting

BASE_GUN_COOLDOWNS = { — 射击后枪支准备就绪所需的小时数

1.0,	— big guns

1.0，—— 大炮

4.0,	— torpedoes

4.0，——鱼雷





1.0,	— small guns


1.0，——小型枪械


},



BASE_JOIN_COMBAT_HOURS						= 2,				— the taskforces that wants to join existing combats will wait for at least this amount

BASE_JOIN_COMBAT_HOURS = 2, —— 想要加入现有战斗的特遣队将至少等待这个时长

LOW_ORG_FACTOR_ON_JOIN_COMBAT_DURATION		= 4.0,				— low org of the ships will be factored in when a taskforce wants to join combat

LOW_ORG_FACTOR_ON_JOIN_COMBAT_DURATION = 4.0, — 当特遣舰队希望加入战斗时，舰船的低组织度将被纳入考量



BASE_POSITIONING												= 1.0,	— base value for positioning

BASE_POSITIONING = 1.0, —— 定位的基础值



RELATIVE_SURFACE_DETECTION_TO_POSITIONING_FACTOR				= 0.01,	— multiples the surface detection difference between two sides. the side with higher detection will get a bonus of this value

RELATIVE_SURFACE_DETECTION_TO_POSITIONING_FACTOR = 0.01， —— 将两侧表面检测差异乘以该系数。检测值较高的一侧将获得此数值的加成

MAX_POSITIONING_BONUS_FROM_SURFACE_DETECTION					= 0.0, — will clamp the bonus that you get from detection

MAX_POSITIONING_BONUS_FROM_SURFACE_DETECTION = 0.0，——将限制从表面检测获得的奖励上限



HIGHER_SHIP_RATIO_POSITIONING_PENALTY_FACTOR					= 0.25, — if one side has more ships than the other, that side will get this penalty for each +100% ship ratio it has

HIGHER_SHIP_RATIO_POSITIONING_PENALTY_FACTOR = 0.25, —— 如果一方拥有的舰船数量超过另一方，该方将因每多出100%的舰船比例而受到此惩罚系数影响

MAX_POSITIONING_PENALTY_FROM_HIGHER_SHIP_RATIO					= 0.75, — maximum penalty to get from larger fleets

MAX_POSITIONING_PENALTY_FROM_HIGHER_SHIP_RATIO = 0.75, —— 来自更大舰队比例的最大惩罚值

MIN_SHIPS_FOR_HIGHER_SHIP_RATIO_PENALTY = 0, — the minimum fleet size in ships that a fleet must be before having the large fleet penalty applied to them

MIN_SHIPS_FOR_HIGHER_SHIP_RATIO_PENALTY = 0, —— 舰队规模需达到的最低舰船数量阈值，超过此值的大型舰队将受到惩罚



HIGHER_CARRIER_RATIO_POSITIONING_PENALTY_FACTOR					= 0.2; — penalty if other side has stronger carrier air force

HIGHER_CARRIER_RATIO_POSITIONING_PENALTY_FACTOR = 0.2; — 当对方拥有更强航母空军时的惩罚系数

MAX_CARRIER_RATIO_POSITIONING_PENALTY_FACTOR 					= 0.2; — max penalty from stronger carrier air force

MAX_CARRIER_RATIO_POSITIONING_PENALTY_FACTOR = 0.2; —— 由更强航母航空部队带来的最大惩罚系数



POSITIONING_PENALTY_FOR_SHIPS_JOINED_COMBAT_AFTER_IT_STARTS		= 0.01, — each ship that joins the combat will have this penalty to be added into positioning

POSITIONING_PENALTY_FOR_SHIPS_JOINED_COMBAT_AFTER_IT_STARTS = 0.01, —— 每艘加入战斗的舰船都会在阵型位置计算时附加此惩罚值

MAX_POSITIONING_PENALTY_FOR_NEWLY_JOINED_SHIPS 					= 0.25, — the accumulated penalty from new ships will be clamped to this value

MAX_POSITIONING_PENALTY_FOR_NEWLY_JOINED_SHIPS = 0.25，——新加入舰船的累计惩罚将被限制在此数值内

POSITIONING_PENALTY_HOURLY_DECAY_FOR_NEWLY_JOINED_SHIPS			= 0.05,— the accumulated penalty from new ships will decay hourly by this value

POSITIONING_PENALTY_HOURLY_DECAY_FOR_NEWLY_JOINED_SHIPS = 0.05，——新加入船只的累计惩罚值将每小时按此数值衰减。



DAMAGE_PENALTY_ON_MINIMUM_POSITIONING 							= 0.5,	— damage penalty at 0% positioning

最低定位时的伤害惩罚 = 0.5, —— 定位为0%时的伤害惩罚

SCREENING_EFFICIENCY_PENALTY_ON_MINIMUM_POSITIONING				= 0.5, — screening efficiency (screen to capital ratio) at 0% positioning

SCREENING_EFFICIENCY_PENALTY_ON_MINIMUM_POSITIONING = 0.5, —— 在0%定位时的筛选效率（筛选资本比）

AA_EFFICIENCY_PENALTY_ON_MINIMUM_POSITIONING					= 0.7, — AA penalty at 0% positioning

AA_EFFICIENCY_PENALTY_ON_MINIMUM_POSITIONING = 0.7, —— 在定位为0%时的AA效率惩罚

SUBMARINE_REVEAL_ON_MINIMUM_POSITIONING = 2.0, — submarine reveal change on 0% positioning

SUBMARINE_REVEAL_ON_MINIMUM_POSITIONING = 2.0, — 潜艇在0%定位时的暴露几率



SHIP_TO_FLEET_ANTI_AIR_RATIO									= 0.25,	— total sum of fleet’s anti air will be multiplied with this ratio and added to calculations anti-air of individual ships while air damage reduction

SHIP_TO_FLEET_ANTI_AIR_RATIO = 0.25, —— 舰队整体防空值的总和将乘以该比率，并计入各舰船防空计算中对空伤害减免的部分



ANTI_AIR_POW_ON_INCOMING_AIR_DAMAGE								= 0.225,	— received air damage is calculated using following: 1 - ( (ship_anti_air + fleet_anti_air SHIP_TO_FLEET_ANTI_AIR_RATIO )^ANTI_AIR_POW_ON_INCOMING_AIR_DAMAGE ) ANTI_AIR_MULT_ON_INCOMING_AIR_DAMAGE

对空火力对承受空袭伤害的影响系数 = 0.225, — 承受的空袭伤害按以下公式计算: 1 - ( (舰船对空值 + 舰队对空值 * 舰船对舰队对空比率 )^对空火力对承受空袭伤害的影响系数 ) * 对空倍率对承受空袭伤害的影响系数

ANTI_AIR_MULT_ON_INCOMING_AIR_DAMAGE							= 0.18,

ANTI_AIR_MULT_ON_INCOMING_AIR_DAMAGE = 0.18,



MAX_ANTI_AIR_REDUCTION_EFFECT_ON_INCOMING_AIR_DAMAGE 			= 0.75,	— damage reduction for incoming air attacks is clamped to this value at maximum.

MAX_ANTI_AIR_REDUCTION_EFFECT_ON_INCOMING_AIR_DAMAGE = 0.75, —— 对空袭伤害的减免效果上限值。



CHANCE_TO_DAMAGE_PART_ON_CRITICAL_HIT							= 0.1,	— the game will roll between 0-1 and will damage a random part if below this val on naval critical hits

暴击命中时部件损坏几率 = 0.1, —— 游戏将在0-1之间随机取值，若海战暴击时低于此值则损坏随机部件

CHANCE_TO_DAMAGE_PART_ON_CRITICAL_HIT_FROM_AIR					= 0.1,	— the game will roll between 0-1 and will damage a random part if below this val on air critical hits

CHANCE_TO_DAMAGE_PART_ON_CRITICAL_HIT_FROM_AIR = 0.1, —— 游戏将在0-1之间随机掷数，若空战暴击时掷得数值低于此值，则随机损伤一个部件



SCREEN_RATIO_FOR_FULL_SCREENING_FOR_CAPITALS 					= 3.0,	— this screen ratio to num capital/carriers is needed for full screening beyond screen line

全屏显示首都所需屏幕比例 = 3.0，即达到此屏幕比例（首都/航母数量）方能实现屏幕线外的完全屏蔽效果

SCREEN_RATIO_FOR_FULL_SCREENING_FOR_CONVOYS 					= 0.5,	— this screen ratio to num convoys is needed for full screening beyond screen line

全屏护航所需的屏幕比例至护航数量 = 0.5，——超出警戒线实现完全护航需满足此屏幕比例与护航数量的对应关系

CAPITAL_RATIO_FOR_FULL_SCREENING_FOR_CARRIERS 					= 1.0, — this capital ratio to num carriers is needed for full screening beyond screen line

CAPITAL_RATIO_FOR_FULL_SCREENING_FOR_CARRIERS = 1.0, —— 此资本比例对应承运商数量，用于实现超出筛查线外的全面筛查

CAPITAL_RATIO_FOR_FULL_SCREENING_FOR_CONVOYS 					= 0.25, — this capital ratio to num convoys is needed for full screening beyond screen line

全护航筛查所需资本比例 = 0.25, ——此资本比例与护航舰队数量之比需超出警戒线方能实现全面护航筛查



TASK_FORCE_ROLE_TO_INSIGNIA = {								— define the index of the insignia to use for a task force designed for a specific role

TASK_FORCE_ROLE_TO_INSIGNIA = { — 定义用于特定角色设计的任务部队所使用徽章的索引

6,	— Role undefined

6，——角色未定义

15,	— Wolfpack

15，——狼群

22,	— Carrier task force

22，—— 航母特遣舰队

26,	— Surface action group

26，——水面行动群

16,	— Mine layers

16，——布雷舰

17,	— Mine sweepers

17，——扫雷舰

29,	— Patrol task force

29，——巡逻特遣队

1,	— Convoy escort

1，— 护航编队

},



— NOTE: you can see the effect of changing the values down below by running the command tfria with a task force selected

— 注意：通过选中任务部队并运行命令tfria，你可以在下方看到改变数值的效果。

MIN_SHIP_COUNT_FOR_TASK_FORCE_ROLE_ASSIGNMENT = 4,					— define the minimum number of ship that should be in a task force for it to be considered a patrol or an escort task force (used to the insignia assignment, see TASK_FORCE_ROLE_TO_INSIGNIA)

MIN_SHIP_COUNT_FOR_TASK_FORCE_ROLE_ASSIGNMENT = 4, — 定义特遣舰队被视为巡逻或护航编队时应包含的最少舰船数量（用于徽章分配逻辑，参见TASK_FORCE_ROLE_TO_INSIGNIA）

SURFACE_DETECTION_STAT_FOR_SHIP_TO_BE_PATROL = 16,					— amount of surface detection required for a ship to be considered as part of a patrol task force

SURFACE_DETECTION_STAT_FOR_SHIP_TO_BE_PATROL = 16, —— 舰船被视作巡逻特遣队成员所需的水面探测数值

DEPTH_CHARGE_STAT_FOR_SHIP_TO_BE_SUB_HUNTER = 15,					— amount of depth charge required for a ship to be considred a sub hunter and so good for convoy escort

DEPTH_CHARGE_STAT_FOR_SHIP_TO_BE_SUB_HUNTER = 15, —— 一艘船被视为潜艇猎手并因此适合护航所需的深水炸弹数量

SUB_DETECTION_STAT_FOR_SHIP_TO_BE_SUB_HUNTER = 2,					— amount of sub detection required for a ship to be considered a sub hunter

SUB_DETECTION_STAT_FOR_SHIP_TO_BE_SUB_HUNTER = 2, —— 舰船被视为反潜舰所需的反潜探测数值



HEAVY_GUN_ATTACK_TO_SHORE_BOMBARDMENT							= 0.1, — heavy gun attack value is divided by this value * 100 and added to shore bombardment modifier

重型火炮攻击对岸轰击效果 = 0.1, — 重型火炮攻击值除以该值乘以100后加入岸轰修正系数

LIGHT_GUN_ATTACK_TO_SHORE_BOMBARDMENT							= 0.05, — light gun attack value is divided by this value * 100 and added to shore bombardment modifier

轻型火炮攻击对岸轰加成 = 0.05, — 轻型火炮攻击值除以该值乘以100后加到岸轰修正上



GUN_HIT_PROFILES = { — hit profiles for guns, if target ih profile is lower the gun will have lower accuracy

GUN_HIT_PROFILES = { — 枪支的命中属性配置，若目标的防护属性低于此值，枪支的精准度将降低

80.0,	— big guns

80.0，——重量级人物

100.0,	— torpedoes

100.0，——鱼雷





45.0,	— small guns


45.0，——小型枪支


},



DEPTH_CHARGES_HIT_CHANCE_MULT 									= 1.1, 		— multiplies hit chance of small guns

DEPTH_CHARGES_HIT_CHANCE_MULT = 1.1, — 小型火炮命中率倍率

DEPTH_CHARGES_DAMAGE_MULT 										= 0.7, 		— multiplies damage of depth charges

DEPTH_CHARGES_DAMAGE_MULT = 0.7, — 深水炸弹伤害倍数

DEPTH_CHARGES_HIT_PROFILE 										= 100.0,	— hit profile for depth charges

DEPTH_CHARGES_HIT_PROFILE = 100.0, —— 深水炸弹的命中参数



CONVOY_HIT_PROFILE												= 85.0, 	— convoys has this contant hit profile

CONVOY_HIT_PROFILE = 85.0, —— 护航舰队拥有固定的受击判定值

HIT_PROFILE_MULT 												= 100.0, 	— multiplies hit profile of every ship

HIT_PROFILE_MULT = 100.0, — 将每艘舰船的命中轮廓乘以该系数

HIT_PROFILE_SPEED_FACTOR										= 0.5,		— factors speed value when determining it profile (Vis HIT_PROFILE_MULT Ship Hit Profile Mult)

命中轮廓速度因子 = 0.5, ——在确定命中轮廓时影响速度值的因子（参见 舰船命中轮廓倍数 HIT_PROFILE_MULT）

HIT_PROFILE_SPEED_BASE											= 20,		— Base value added to hitprofile speed calulation

HIT_PROFILE_SPEED_BASE = 20, —— 基础值，添加到命中档案速度计算中



CONVOY_RAID_MAX_REGION_TO_TASKFORCE_RATIO						= 1.5,		— each taskforce in convoy raid mission can at most cover this many regions without losing efficiency

CONVOY_RAID_MAX_REGION_TO_TASKFORCE_RATIO = 1.5, —— 在护航舰队袭击任务中，每支特遣部队最多可覆盖此数量的区域而不损失效率

CONVOY_DEFENSE_MAX_CONVOY_TO_SHIP_RATIO							= 12.0,		— each ship in convoy defense mission can at most cover this many convoys without losing efficiency

CONVOY_DEFENSE_MAX_CONVOY_TO_SHIP_RATIO = 12.0, — 护航防御任务中每艘舰船最多可保护如此数量的运输船而不损失效率

CONVOY_DEFENSE_MAX_REGION_TO_TASKFORCE_RATIO					= 5.0,		— each taskforce in convoy defense mission can at most cover this many regions without losing efficiency

CONVOY_DEFENSE_MAX_REGION_TO_TASKFORCE_RATIO = 5.0, —— 每支护航防御任务中的特遣舰队最多可高效覆盖的区域数量上限为此数值



MINE_SWEEPING_SUPREMACY_EFFICIENCY_MAX_REGION_TO_TASKFORCE_RATIO = 1.0,		— mine missions will get lower supremacies if they are assigned more regions than this

MINE_SWEEPING_SUPREMACY_EFFICIENCY_MAX_REGION_TO_TASKFORCE_RATIO = 1.0, — 如果扫雷任务被分配超过此比例的区域数，其至高效率将降低

MINE_PLANTING_SUPREMACY_EFFICIENCY_MAX_REGION_TO_TASKFORCE_RATIO = 1.0,		— mine missions will get lower supremacies if they are assigned more regions than this

MINE_PLANTING_SUPREMACY_EFFICIENCY_MAX_REGION_TO_TASKFORCE_RATIO = 1.0, — 若分配给矿区的区域超过此比例，矿任务将获得较低的主导权



EFFICIENCY_TO_JOIN_COMBAT_RATIO_PENALTY							= 1.0,		— at lower efficiencies less ships will be able to join combat

EFFICIENCY_TO_JOIN_COMBAT_RATIO_PENALTY = 1.0, — 效率较低时，能参战的舰船数量将减少

EFFICIENCY_TO_TIME_TO_JOIN_COMBAT_PENALTY 						= 100.0,	— at lower efficiencies less time to join combat hour will be increased

EFFICIENCY_TO_TIME_TO_JOIN_COMBAT_PENALTY = 100.0, — 效率越低，加入战斗所需时间的小时惩罚将增加



COORDINATION_EFFECT_ON_CONVOY_RAID_EFFICIENCY					= 1.5,		— coordination will increase the number of areas you can cover in convoy raid

COORDINATION_EFFECT_ON_CONVOY_RAID_EFFICIENCY = 1.5, —— 协调性将提升你在护航袭击任务中的覆盖区域数量

COORDINATION_EFFECT_ON_CONVOY_DEFENSE_EFFICIENCY				= 1.5,		— coordination will increase the number of convoys you can cover in convoy defense

协调对护航防御效率的影响 = 1.5，——协调将增加你在护航防御中能覆盖的护航船队数量



COORDINATION_EFFECT_ON_TIME_TO_JOIN_COMBAT						= 1.0,		— coordination will reduce the time to join combat penalties

COORDINATION_EFFECT_ON_TIME_TO_JOIN_COMBAT = 1.0, — 协调性将减少加入战斗的惩罚时间

COORDINATION_EFFECT_ON_MINE_LAYING_SPEED 						= 0.5, — affect of coordination modifier in mine laying speed

COORDINATION_EFFECT_ON_MINE_LAYING_SPEED = 0.5, —— 协调性修正值对布雷速度的影响

COORDINATION_EFFECT_ON_MINE_SWEEPING_SPEED 						= 0.5, — affect of coordination modifier in mine sweeping speed

COORDINATION_EFFECT_ON_MINE_SWEEPING_SPEED = 0.5, — 协调度对扫雷速度的影响系数

COORDINATION_EFFECT_ON_PATROL_SPOTTING 							= 1.0,		— affect of coordination modifier in spotting speed

协调对巡逻发现的加成效果 = 1.0, — 协调修正值对发现速度的影响



COORDINATION_EFFECT_ON_MINE_SWEEPING_SUPREMACY_EFFICIENCY		= 1.0, — mine missions supremacy can be buffed by coordination

COORDINATION_EFFECT_ON_MINE_SWEEPING_SUPREMACY_EFFICIENCY = 1.0, — 协调能力可提升扫雷任务的统治效率

COORDINATION_EFFECT_ON_MINE_PLANTING_SUPREMACY_EFFICIENCY		= 1.0, — mine missions supremacy can be buffed by coordination

COORDINATION_EFFECT_ON_MINE_PLANTING_SUPREMACY_EFFICIENCY = 1.0, — 协调能提升布雷任务的主导效率



MISSION_EFFICIENCY_POW_FACTOR									= 1.7,		— mission efficiencies will be powered up by this to further penalize low efficiencies

MISSION_EFFICIENCY_POW_FACTOR = 1.7, — 任务效率将通过此值进行幂运算，进一步惩罚低效率情况



NAVAL_COMBAT_SUB_DETECTION_FACTOR = 1.0, — balance value for sub detection in combat by ships

NAVAL_COMBAT_SUB_DETECTION_FACTOR = 1.0, — 用于舰艇在战斗中潜艇探测的平衡值

SUBMARINE_HIDE_TIMEOUT 											= 20,		— Amount of in-game-hours that takes the submarine (with position unrevealed), to hide.

SUBMARINE_HIDE_TIMEOUT = 20, — 潜艇（位置未被发现时）隐藏所需的游戏内小时数。

SUBMARINE_REVEALED_TIMEOUT 										= 16,		— Amount of in-game-hours that makes the submarine visible if it is on the defender side.

SUBMARINE_REVEALED_TIMEOUT = 16, —— 潜艇若处于防守方时，使其可见的游戏内小时数。

SUBMARINE_REVEAL_BASE_CHANCE 									= 11,		— Base factor for submarine detection. It’s modified by the difference of a spotter’s submarines detection vs submarine visibility. Use this variable for game balancing. setting this too low will cause bad spotting issues.

SUBMARINE_REVEAL_BASE_CHANCE = 11, ——潜艇发现的基础概率系数。此数值会根据侦查者的潜艇探测能力与潜艇隐蔽性的差异进行调整。用于游戏平衡性调整，若设置过低会导致侦查效果不佳的问题。

SUBMARINE_REVEAL_POW 											= 3.0,		— A scaling factor that is applied to the reveal chance in order to make large differences in detection vs visibility more pronounced

SUBMARINE_REVEAL_POW = 3.0, — 一个应用于暴露几率的比例系数，旨在使探测与可见性之间的巨大差异更加显著

SUBMARINE_BASE_TORPEDO_REVEAL_CHANCE 							= 0.035,		— Chance of a submarine being revealed when it fires. 1.0 is 100%. this chance is then multiplied with modifier created by comparing firer’s visibiility and target’s detection

SUBMARINE_BASE_TORPEDO_REVEAL_CHANCE = 0.035, —— 潜艇发射鱼雷时被发现的概率。1.0 表示 100%。此概率随后会乘以根据发射者能见度与目标探测能力对比生成的修正系数。



MAX_NUM_HOURS_TO_WAIT_AT_ALLY_DOCKYARDS_FOR_REPAIRS 			= 48,		— taskforces will wait at most this amount of hours in ally bases for repairs before switching to another base for repairs

MAX_NUM_HOURS_TO_WAIT_AT_ALLY_DOCKYARDS_FOR_REPAIRS = 48, — 特遣舰队在盟军船坞等待维修的最长时间（小时），超时将转往其他基地进行维修



COMBAT_RESULT_PRIORITY_THRESHOLDS = { 										— the game will use this thresholds to define importance of a naval combat result. it will use the highest level that has higher threshold than the amount of production lost in combat

COMBAT_RESULT_PRIORITY_THRESHOLDS = { ——游戏将使用此阈值来定义海战结果的重要性。它将采用比战斗中损失的生产力数值更高的最高阈值等级。

0, 		— low (keep at zero)

0，— 低（保持为零）

4000, — medium

4000，——中等

20000, — high

20000，— 高

},

COMBAT_RESULT_PRIORITY_DAY_TO_LIVE = { 										— the game will delete the combat results after some duration depending on its importance

COMBAT_RESULT_PRIORITY_DAY_TO_LIVE = { —— 游戏将根据战斗结果的重要性，在一定时间后删除这些战斗结果

7,

30,

120,

},

NAVAL_ACCIDENTS_DAYS_TO_LIVE = 120,

NAVAL_ACCIDENTS_DAYS_TO_LIVE = 120,



NAVAL_MINE_DANGER_RATIOS = {

海军水雷危险比例 = {

0.1,		— not owned

0.1，—未拥有

0.5,		— near controlled

0.5，——接近受控

1.0,		— near owned

1.0，——近乎拥有

1.0,		— controlled

1.0，— 受控





3.0,		— owned


3.0，— 拥有


},

NAVAL_MINE_DANGER_TRIGGER_MIN = 0.0,

NAVAL_MINE_DANGER_TRIGGER_MIN = 0.0,

NAVAL_MINE_DANGER_TRIGGER_MAX = 2.0,

NAVAL_MINE_DANGER_TRIGGER_MAX = 2.0,



NAVAL_CONVOY_DANGER_RATIOS = {

海军护航危险比率 = {

0.10,		— not owned

0.10，—— 未拥有

0.10,		— near controlled

0.10，——接近受控

0.10,		— near owned

0.10，——接近拥有

0.15,		— controlled

0.15，——受控





0.15,		— owned


0.15，——已拥有


},

NAVAL_CONVOY_DANGER_TRIGGER_MIN = 0.0,

NAVAL_CONVOY_DANGER_TRIGGER_MIN = 0.0,

NAVAL_CONVOY_DANGER_TRIGGER_MAX = 100.0,

NAVAL_CONVOY_DANGER_TRIGGER_MAX = 100.0,



— those two work together in the formula f(x) = Y(x/(x+X)) where Y is MAX and X is SLOPE

这两个变量在公式f(x) = Y(x/(x+X))中共同作用，其中Y代表最大值，X代表斜率。

NAVAL_COMBAT_AIR_SUB_DETECTION_MAX = 10.0,

NAVAL_COMBAT_AIR_SUB_DETECTION_MAX = 10.0,

NAVAL_COMBAT_AIR_SUB_DETECTION_SLOPE = 10.0,						— lower means sharper curve (ramps up very fast, then flatten out very fast). Must be >0

NAVAL_COMBAT_AIR_SUB_DETECTION_SLOPE = 10.0, — 数值越小曲线越陡峭（急速攀升后迅速趋于平缓）。必须大于0。



NAVAL_COMBAT_AIR_SUB_DETECTION_EXTERNAL_FACTOR = 1.0,					— Factor applied to the stats of external air planes

NAVAL_COMBAT_AIR_SUB_DETECTION_EXTERNAL_FACTOR = 1.0, —— 应用于外部飞机状态的因素

NAVAL_COMBAT_AIR_SUB_DETECTION_INTERNAL_EFFICIENCY_FACTOR = 1.0,			— Factor of Carrier’s sortie efficiency on the stats bellow

NAVAL_COMBAT_AIR_SUB_DETECTION_INTERNAL_EFFICIENCY_FACTOR = 1.0, — 舰载机出动效率对下方统计数据的修正系数

NAVAL_COMBAT_AIR_AGILITY_TO_SUB_DETECTION = 0.0,					— Factor to apply to the agility of air planes active in a naval combat to deduce their contibution to sub detection

NAVAL_COMBAT_AIR_AGILITY_TO_SUB_DETECTION = 0.0, — 应用于海军战斗中活跃飞机的机动性因子，用于计算其对潜艇探测的贡献

NAVAL_COMBAT_AIR_STRIKE_ATTACK_TO_SUB_DETECTION = 0.0,					— Same, but for strike attack (aka naval attack)

NAVAL_COMBAT_AIR_STRIKE_ATTACK_TO_SUB_DETECTION = 0.0, —— 同理，但针对打击攻击（即海军攻击）

NAVAL_COMBAT_AIR_STRIKE_TARGETING_TO_SUB_DETECTION = 0.0,				— Same, but for strike targeting (aka naval targeting)

NAVAL_COMBAT_AIR_STRIKE_TARGETING_TO_SUB_DETECTION = 0.0, — 同上，但针对打击目标（即海军目标）

NAVAL_COMBAT_AIR_MAX_SPEED_TO_SUB_DETECTION = 0.0,					— Same, but for Max Speed

NAVAL_COMBAT_AIR_MAX_SPEED_TO_SUB_DETECTION = 0.0, — 同上，但针对最大速度

NAVAL_COMBAT_AIR_PLANE_COUNT_TO_SUB_DETECTION = 1.0,					— Factor applied to the number of active plane in a naval combat to deduce their contribution to sub detection

NAVAL_COMBAT_AIR_PLANE_COUNT_TO_SUB_DETECTION = 1.0, —— 应用于海军战斗中活跃飞机数量的因子，用于推算其对潜艇探测的贡献

NAVAL_COMBAT_AIR_SUB_DETECTION_DECAY_RATE = 1.0,					— Factor to decay the value of sub detection contributed by planes on the last hour. Note: the maximum value between the decayed value and the newly computed one is taken into account. A decay rate of 1 means that nothing is carried over, the previous value is zerod out. A decay rate of 0 means that the previous value is carried over as is.

NAVAL_COMBAT_AIR_SUB_DETECTION_DECAY_RATE = 1.0, — 用于衰减过去一小时中飞机贡献的潜艇探测值的系数。注意：系统会取衰减值与新计算值之间的较大值。衰减率为1表示不保留任何先前值，之前的值会被清零。衰减率为0则表示完全保留之前的值不做衰减。

NAVAL_COMBAT_AIR_SUB_DETECTION_FACTOR = 0.0,						— A global factor that applies after all others, right before the sub detection contributed by plane is added to the global sub detection of a combatant

NAVAL_COMBAT_AIR_SUB_DETECTION_FACTOR = 0.0, —— 一个全局因子，在所有其他计算之后应用，正好在飞机贡献的潜艇探测值被添加到战斗方的全局潜艇探测值之前。



NAVAL_COMBAT_AIR_SUB_TARGET_SCORE = 10, — scoring for target picking for planes inside naval combat, one define per ship typ

NAVAL_COMBAT_AIR_SUB_TARGET_SCORE = 10, — 海战中选择飞机攻击目标的评分标准，每种舰船类型对应一个定义

NAVAL_COMBAT_AIR_CAPITAL_TARGET_SCORE = 50,

NAVAL_COMBAT_AIR_CAPITAL_TARGET_SCORE = 50,

NAVAL_COMBAT_AIR_CARRIER_TARGET_SCORE = 200,

NAVAL_COMBAT_AIR_CARRIER_TARGET_SCORE = 200,

NAVAL_COMBAT_AIR_CONVOY_TARGET_SCORE = 1.0,

NAVAL_COMBAT_AIR_CONVOY_TARGET_SCORE = 1.0,

NAVAL_COMBAT_AIR_STRENGTH_TARGET_SCORE = 5, — how much score factor from low health (scales between 0->this number)

NAVAL_COMBAT_AIR_STRENGTH_TARGET_SCORE = 5, —— 低生命值时的分数因子（范围从0到此数值）

NAVAL_COMBAT_AIR_LOW_AA_TARGET_SCORE = 5, — how much score factor from low AA guns (scales between 0->this number)

NAVAL_COMBAT_AIR_LOW_AA_TARGET_SCORE = 5, —— 低防空炮的得分系数（范围从0到此数值）



NEW_NAVY_LEADER_LEVEL_CHANCES = {									— chances for new navy leaders to start at a given level

新海军领袖初始等级概率 = { —— 新海军领袖以特定等级开始的概率

0.95, — 95% for level one

0.95，即一级水平为95%

0.05 — 5% for level two

0.05 —— 二级5%

— 0% for level three to ten

— 3级至10级为0%

},



NAVY_PIERCING_THRESHOLDS = {					— Our piercing / their armor must be this value to deal damage fraction equal to the index in the array below [higher number = higher penetration]. If armor is 0, 1.00 will be returned.

NAVY_PIERCING_THRESHOLDS = { —— 我们的穿透力与对方装甲值的比值需达到此数组下标对应的数值，才能造成相应比例的伤害[数值越高代表穿透力越强]。若装甲值为0，则返回1.00。

2.00,

1.00,

0.75,

0.50,





0.10,


0.00 —there isn’t much point setting this higher than 0

0.00 ——将其设置得高于0没有太大意义

},



NAVY_PIERCING_THRESHOLD_CRITICAL_VALUES = {	— 0 armor will always receive maximum damage (so add overmatching at your own peril). the system expects at least 2 values, with no upper limit.

NAVY_PIERCING_THRESHOLD_CRITICAL_VALUES = { —— 0护甲值将始终承受最大伤害（因此过度匹配需自行承担风险）。系统要求至少提供2个数值，无上限限制。

2.00,

1.00,

0.75,

0.50,





0.10,


0.00 — For criticals, you could reduce crit chance unlike damage in army combat, but we do not for now.

0.00 —— 对于暴击效果，你可以像陆军战斗中的伤害那样降低暴击几率，但目前我们并未这样做。

},



NAVY_PIERCING_THRESHOLD_DAMAGE_VALUES = {	— 0 armor will always receive maximum damage (so add overmatching at your own peril). the system expects at least 2 values, with no upper limit.

NAVY_PIERCING_THRESHOLD_DAMAGE_VALUES = { — 0护甲值将始终承受最大伤害（因此自行承担过度匹配的风险）。系统要求至少提供2个数值，无上限。

1.00,

1.00,

0.70,

0.40,

0.30,





0.10 —


},



— all of these NEED to be the same size!!!!

— 所有这些必须大小一致！！！！



},



NRailwayGun = {

NRailwayGun = {

RAILWAY_GUN_POSSIBLE_RANGES = { 30, 15, 45 },	— Possible values for railway gun range in pixel.

RAILWAY_GUN_POSSIBLE_RANGES = { 30, 15, 45 }, —— 铁路炮射程的可能值（以像素为单位）。

— For optimization reasons, they are listed here and equipment DB must use one of those.

— 出于优化考虑，此处列出设备数据库必须使用的选项。

— when writing railway gun in equipment, use the index in this array

— 在装备中书写铁道炮时，请使用此数组中的索引

— the first value in array is the default value

数组中的第一个值是默认值

ATTACK_TO_FORTS_MODIFIER_FACTOR = 1.333,		— Forts modifier is calculated by multiplying railway gun attack value with this and dividing by 100

攻击要塞修正系数 = 1.333，——要塞修正值通过将铁道炮攻击力乘以此系数并除以100计算得出

ATTACK_TO_ENTRENCHMENT_MODIFIER_FACTOR = 0.8,		— Entrenchment modifier is calculated by multiplying railway gun attack value with this and dividing by 100

ATTACK_TO_ENTRENCHMENT_MODIFIER_FACTOR = 0.8, —— 通过将铁道炮攻击值乘以该系数并除以100来计算防御工事修正值

ATTACK_TO_BOMBARDMENT_MODIFIER_FACTOR = 0.4,	— Bombardment modifier is calculated by multiplying railway gun attack value with this and dividing by 100

ATTACK_TO_BOMBARDMENT_MODIFIER_FACTOR = 0.4, — 轰炸修正系数由铁道炮攻击值乘以该系数后除以100得出

DAILY_MANPOWER_GAIN_RATIO = 0.05,				— Railway Guns will be able to gain this ratio of their max manpower daily

DAILY_MANPOWER_GAIN_RATIO = 0.05, —— 铁路炮每日可补充其最大人力值的这一比例

DISBAND_MANPOWER_LOSS = 0.0,					— The ration of manpower lost on disbanding railway guns

解散人力损失比例 = 0.0，——铁路炮解散时损失的人力比例

ENCIRCLED_DISBAND_MANPOWER_FACTOR = 0.2,		— The percentage of manpower returned when an encircled unit is disbanded

ENCIRCLED_DISBAND_MANPOWER_FACTOR = 0.2, — 被包围部队解散时返还的人力百分比

OUT_OF_SUPPLY_SPEED = -0.8,						— Max speed reduction from supply for railway guns

OUT_OF_SUPPLY_SPEED = -0.8, —— 铁路炮因补给不足的最大速度降低

BASE_CAPTURE_CHANCE = 0.2,						— The base chance of railway guns being captured during an overrrun. Will be further modified by the equipment capture chance of the capturing unit.

BASE_CAPTURE_CHANCE = 0.2, —— 铁路炮在遭到突袭时的基础被俘获几率。该数值将进一步受到俘获方部队装备缴获几率的影响。

DISTRIBUTION_RAILWAY_GUN_PRESENCE_SCORE = -100,					— Score for Railway Guns in nearby provs. x3 if on that province. x2 if adjacent. x1 if 2 away.

DISTRIBUTION_RAILWAY_GUN_PRESENCE_SCORE = -100, —— 铁路炮在邻近省份的存在分数。若位于该省份则乘3。若相邻则乘2。若相隔两省则乘1。

DISTRIBUTION_OUR_UNITS_PRESENCE_SCORE = 1,	 					— Score for our units in province when distributing Railway Guns

DISTRIBUTION_OUR_UNITS_PRESENCE_SCORE = 1, — 在分配铁路炮时，我方单位在省份的存在分数

DISTRIBUTION_FRIENDLY_UNITS_PRESENCE_SCORE = 0,					— Score for friendly units in province when distributing Railway Guns

DISTRIBUTION_FRIENDLY_UNITS_PRESENCE_SCORE = 0, — 铁路炮分配时省份内友方单位存在得分

DISTRIBUTION_HOSTILE_UNITS_PRESENCE_SCORE = -45,				— Score for hostile units in province when distributing Railway Guns

DISTRIBUTION_HOSTILE_UNITS_PRESENCE_SCORE = -45, —— 分配铁路炮时省份存在敌对单位的评分

DISTRIBUTION_COMBATS_PRESENCE_SCORE = -30,						— Score for combats in province when distributing Railway Guns

DISTRIBUTION_COMBATS_PRESENCE_SCORE = -30, ——在分配铁路炮时，省份内战斗存在的分数

DISTRIBUTION_COMBATS_INRANGE_SCORE = 15,						— Score for combats in range when distributing Railway Guns

DISTRIBUTION_COMBATS_INRANGE_SCORE = 15, —— 分配铁路炮时范围内战斗的得分

DISTRIBUTION_OUR_UNITS_INRANGE_SCORE = 2.5,						— Score for our units in range when distributing Railway Guns

DISTRIBUTION_OUR_UNITS_INRANGE_SCORE = 2.5, —— 分配铁路炮时我方单位在射程内的得分

DISTRIBUTION_FRIENDLY_UNITS_INRANGE_SCORE = 1.5,				— Score for friendly units in range when distributing Railway Guns

DISTRIBUTION_FRIENDLY_UNITS_INRANGE_SCORE = 1.5, — 分配铁路炮时，范围内友方单位的得分

DISTRIBUTION_HOSTILE_UNITS_INRANGE_SCORE = 6,					— Score for hostile units in range when distributing Railway Guns

DISTRIBUTION_HOSTILE_UNITS_INRANGE_SCORE = 6, ——铁路炮分配时范围内敌对单位的评分

DISTRIBUTION_DISTANCE_SCORE = -0.08,							— Score for distance to province when distributing Railway Guns

DISTRIBUTION_DISTANCE_SCORE = -0.08, —— 分配铁路炮时距省份距离的得分

DISTRIBUTION_PROVINCE_CONTROLLED_BY_ENEMY_SCORE = -3,			— Score for staying in province controlled by enemy

DISTRIBUTION_PROVINCE_CONTROLLED_BY_ENEMY_SCORE = -3, — 停留在敌方控制省份的得分

DISTRIBUTION_PROVINCES_CONTROLLED_BY_ENEMY_INRANGE_SCORE = 15,	— Score for provinces controlled by enemy in range when distributing Railway Guns

DISTRIBUTION_PROVINCES_CONTROLLED_BY_ENEMY_INRANGE_SCORE = 15, —— 分配铁路炮时，范围内由敌方控制的省份得分

DISTRIBUTION_HOLD_POSITION_SCORE = 30,							— Score for staying in the same province when distributing Railway Guns

DISTRIBUTION_HOLD_POSITION_SCORE = 30, —— 分配铁路炮时保持在同一省份的得分

DISTRIBUTION_NO_RAILWAY_SCORE = -500,							— Score for provinces with no railways (need to be low, but we allow RG to enter port provinces without railways)

DISTRIBUTION_NO_RAILWAY_SCORE = -500, —— 无铁路省份的评分（需设为低值，但允许铁路政府进入无铁路的港口省份）

DISTRIBUTION_SUPPLY_DEFICIT_SCORE = -100,						— Score for provinces without sufficient supply cap

DISTRIBUTION_SUPPLY_DEFICIT_SCORE = -100, —— 供应能力不足省份的评分

},



NTrade = {

NTrade = {

DISTANCE_TRADE_FACTOR = -0.02,				— Trade factor is modified by distance times this

DISTANCE_TRADE_FACTOR = -0.02, — 贸易因子将根据距离乘以该值进行调整

RELATION_TRADE_FACTOR = 1,					— Trade factor is modified by Opinion value times this

RELATION_TRADE_FACTOR = 1, —— 贸易因子受双方关系值乘以该系数调整

ALLOW_TRADE_CUT_OFF = 0,					— If trade factor is less than this, no trade will be allowed

ALLOW_TRADE_CUT_OFF = 0, — 若交易因子小于此值，则不允许进行交易

MONTH_TRADE_FACTOR = 2,						— Each month a trade gets this much boost to it’s trade factor

MONTH_TRADE_FACTOR = 2, —— 每个月交易因子会获得此数值的增幅

MAX_MONTH_TRADE_FACTOR = 50,				— This is the maximum bonus that can be gained from time

MAX_MONTH_TRADE_FACTOR = 50, — 这是可以从时间中获得的最大奖励

BASE_TRADE_FACTOR = 150,					— This is the base trade factor

BASE_TRADE_FACTOR = 150, — 这是基础贸易因子

PUPPET_MASTER_TRADE_FACTOR = 400,			— This is priority for puppet master

PUPPET_MASTER_TRADE_FACTOR = 400, —— 这是木偶大师的优先级

PUPPET_TRADE_FACTOR = 0,					— This is unpriority for puppets

傀儡贸易系数 = 0, —— 傀儡国此项不优先

BASE_LAND_TRADE_RANGE = 1000,

BASE_LAND_TRADE_RANGE = 1000,

PARTY_SUPPORT_TRADE_FACTOR = 50,			— Trade factor bonus at the other side having 100 % party popularity for my party

PARTY_SUPPORT_TRADE_FACTOR = 50，—— 当对方阵营对我方政党的支持率达到100%时的贸易系数加成

ANTI_MONOPOLY_TRADE_FACTOR_THRESHOLD = 0.5,	— What percentage of resources has to be sold to the buyer for the anti-monopoly factor to take effect

反垄断贸易因子阈值 = 0.5, — 需向买方出售多少百分比的资源才能使反垄断因子生效

ANTI_MONOPOLY_TRADE_FACTOR = -100,			— This is added to the factor value when anti-monopoly threshold is exceeded

反垄断贸易因子 = -100，——当超过反垄断阈值时，此值将被加到因子值上

NAVAL_ROUTE_ACCESS_AVOID_COST_MULT = 1,	— Naval pathfinding should avoid certain regions that you mark. High “cost multiplier” will make it less willingly go through a specific region.

NAVAL_ROUTE_ACCESS_AVOID_COST_MULT = 1, —— 海军路径规划应避开你所标记的特定区域。较高的“成本乘数”会使其更不愿意穿越某个特定区域。

},



NAI = {

NAI = {

GARRISON_FRACTION = 0.0, 					— How large part of a front should always be holding the line rather than advancing at the enemy

驻军比例 = 0.0, —— 防线中应始终保持守势而非向敌军推进的部队所占比例

THEORIST_SCALING_WEIGHT_FACTOR_PER_NON_POLITICAL_ADVISORS = 0.15, —Scale theorist weight by this * num non political advisors

THEORIST_SCALING_WEIGHT_FACTOR_PER_NON_POLITICAL_ADVISORS = 0.15, ——理论家权重缩放系数 = 该值 * 非政治顾问数量

DIPLOMATIC_ACTION_GOOD_BAD_RATIO_THRESHOLD = 1,

外交行动优劣比阈值 = 1,

BASE_RELUCTANCE = 20, 						— Base reluctance applied to all diplomatic offers

BASE_RELUCTANCE = 20, — 所有外交提议的基础抗拒值

DIPLOMATIC_ACTION_RANDOM_FACTOR = 0.5, 		— How much of the AI diplomatic action scoring is randomly determined (1.0 = half random, 2.0 = 2/3rd random, etc)

DIPLOMATIC_ACTION_RANDOM_FACTOR = 0.5, — 人工智能外交行为评分中有多少是随机决定的（1.0 = 一半随机，2.0 = 三分之二随机，以此类推）

DIPLOMATIC_ACTION_PROPOSE_SCORE = 50, 		— AI must score a diplomatic action at least this highly to propose it themselves

DIPLOMATIC_ACTION_PROPOSE_SCORE = 50, — 人工智能必须对一项外交行动评分至少达到此值才会自行提出

DILPOMATIC_ACTION_DECLARE_WAR_WARGOAL_BASE = 50, — Base diplomatic action score bonus to go to war per wargoal

DILPOMATIC_ACTION_DECLARE_WAR_WARGOAL_BASE = 50, — 每个战争理由宣战的基础外交行动分数加成

DIPLOMATIC_ACTION_BREAK_SCORE = -10, 		— AI must score a diplomatic action less than this to break it off

DIPLOMATIC_ACTION_BREAK_SCORE = -10, —— AI的外交行动得分必须低于此值才会终止

DIPLOMACY_CREATE_FACTION_FACTOR = 0.75,		— Factor for AI desire to create a new faction. Val < 1.0 makes it less likely to create than to join.

DIPLOMACY_CREATE_FACTION_FACTOR = 0.75, —— AI创建新派系意愿的系数。数值小于1.0时，创建倾向低于加入现有派系。

DIPLOMACY_FACTION_WRONG_IDEOLOGY_PENALTY = 60, — AI penalty for diplomatic faction acitons between nations of different ideologies

DIPLOMACY_FACTION_WRONG_IDEOLOGY_PENALTY = 60, — AI对不同意识形态国家间外交派系行动的惩罚值

DIPLOMACY_FACTION_SAME_IDEOLOGY_MAJOR = 10, — AI bonus acceptance when being asked about faction is a major of the same ideology

DIPLOMACY_FACTION_SAME_IDEOLOGY_MAJOR = 10, —— 当被询问加入阵营时，AI对于同意识形态主要国家的接受度加成

DIPLOMACY_FACTION_NEUTRALITY_PENALTY = 50,	— Neutral nations have a separate penalty, not wanting to get involved at all, rather than caring much about the difference in ideology

DIPLOMACY_FACTION_NEUTRALITY_PENALTY = 50, — 中立国有单独的惩罚，它们完全不想卷入其中，而不是特别在意意识形态的差异

DIPLOMACY_FACTION_GLOBAL_TENSION_FACTOR = 0.2,— How much the AI takes global tension into account when considering faction actions

DIPLOMACY_FACTION_GLOBAL_TENSION_FACTOR = 0.2,——AI在考虑派系行动时对全球紧张局势的重视程度

DIPLOMACY_FACTION_WAR_RELUCTANCE = -50,		— Penalty to desire to enter a faction with a country that we are not fighting wars together with.

DIPLOMACY_FACTION_WAR_RELUCTANCE = -50, —— 对与未共同作战的国家结盟意愿的惩罚。

DIPLOMACY_FACTION_TAKE_OVER_RELUCTANCE_VERSUS_HUMAN = 2.0,	— Multiplier penalty for how much stronger than a human faction member an AI country must be to choose to assume faction leadership.

DIPLOMACY_FACTION_TAKE_OVER_RELUCTANCE_VERSUS_HUMAN = 2.0, — AI国家选择接管派系领导权时，相对于人类派系成员所需实力优势的惩罚倍数。

DIPLOMACY_SCARED_MINOR_EXTRA_RELUCTANCE = -50, — extra reluctance to join stuff as scared minor

DIPLOMACY_SCARED_MINOR_EXTRA_RELUCTANCE = -50, — 作为受惊小国加入事务的额外抵触情绪

DIPLOMACY_FACTION_PLAYER_JOIN = 20,			— Bonus for human players asking to join a faction.

DIPLOMACY_FACTION_PLAYER_JOIN = 20, — 人类玩家申请加入派系时的加成值。

DIPLOMACY_BOOST_PARTY_COST_FACTOR = 100.0,	— Desire to boost party popularity subtracts the daily cost multiplied by this

DIPLOMACY_BOOST_PARTY_COST_FACTOR = 100.0, — 提升党派支持度的意愿会减去日常成本乘以该系数

DIPLOMACY_IMPROVE_RELATION_COST_FACTOR = 5.0,— Desire to boost relations subtracts the cost multiplied by this

DIPLOMACY_IMPROVE_RELATION_COST_FACTOR = 5.0,——改善关系的意愿会减去成本乘以该系数

DIPLOMACY_IMPROVE_RELATION_PP_FACTOR = 0.1,	— Desire to boost relations adds total PP multiplied by this

DIPLOMACY_IMPROVE_RELATION_PP_FACTOR = 0.1, —— 提升关系的意愿会将总政治点数乘以该系数

DIPLOMACY_SEND_ATTACHE_COST_FACTOR = 5.0,	— Desire to send attache substracts the cost multiplied by this

DIPLOMACY_SEND_ATTACHE_COST_FACTOR = 5.0, — 派遣武官的意愿会扣除成本乘以该系数

DIPLOMACY_SEND_ATTACHE_PP_FACTOR = 0.1,	— Desire to send attache adds total PP multiplied by this

DIPLOMACY_SEND_ATTACHE_PP_FACTOR = 0.1, — 派遣武官的意愿会增加总政治点数的乘积系数

DIPLOMACY_REJECTED_WAIT_MONTHS_BASE = 4,	— AI will not repeat offers until at least this time has passed, and at most the double

DIPLOMACY_REJECTED_WAIT_MONTHS_BASE = 4, — 人工智能将不会重复提议，直到至少经过这段时间，最多不超过双倍时间

DIPLOMACY_LEND_LEASE_MONTHS_TO_CANCEL = 1,	— AI will not cancel a lend lease offer until this time has passed

DIPLOMACY_LEND_LEASE_MONTHS_TO_CANCEL = 1, — AI在此时间之前不会取消租借法案提议

DIPLOMACY_CALL_ALLY_VALIDITY_DURATION = 1,	— Overwrite above value for CallAlly and JoinAlly diplo action. This is however fixed, and is not subject to randomness. Also, this is the time the AI will keep the action in its incoming queue without declining it.

DIPLOMACY_CALL_ALLY_VALIDITY_DURATION = 1, — 为CallAlly（召唤盟友）和JoinAlly（加入盟友）外交行动覆盖上述数值。此为固定值，不受随机性影响。同时，这也是AI在未拒绝前将该行动保留在待处理队列中的时间。

DIPLOMACY_PURCHASE_EQUIPMENT_MONTHS = 2, — AI will not ask to purchase equipment more often than this

DIPLOMACY_PURCHASE_EQUIPMENT_MONTHS = 2, —— AI购买装备的请求频率不会高于此值

DIPLOMACY_SEND_MAX_FACTION = 0.75,			— Country should not send away more units than this as expeditionaries

DIPLOMACY_SEND_MAX_FACTION = 0.75, — 国家派遣的远征军数量不应超过此比例

DIPLOMACY_ACCEPT_VOLUNTEERS_BASE = 50,		— Base value of volunteer acceptance (help is welcome)

DIPLOMACY_ACCEPT_VOLUNTEERS_BASE = 50, — 接受志愿者的基础值（乐于接受帮助）

DIPLOMACY_ACCEPT_ATTACHE_BASE = 50,			— Base value of attache acceptance (help is welcome)

DIPLOMACY_ACCEPT_ATTACHE_BASE = 50, — 武官接受度的基础值（欢迎协助）

DIPLOMACY_ACCEPT_ATTACHE_OPINION_TRASHHOLD = 20, — Value of opinion that will remove accepting penalty for receiveing the attache

外交接受武官意见阈值 = 20, ——意见值，达到此值可消除接受武官时的负面惩罚

DIPLOMACY_ACCEPT_ATTACHE_OPINION_PENALTY = -100, — Value of acceptance penalty if the opinion too low

DIPLOMACY_ACCEPT_ATTACHE_OPINION_PENALTY = -100, — 当评价过低时的接受惩罚数值

DIPLOMACY_FACTION_MAJOR_AT_WAR = 1000.0,	— Factor that will be multiplied with the surrender level in the desire to offer to the other ai to join a faction

DIPLOMACY_FACTION_MAJOR_AT_WAR = 1000.0, — 该系数将与投降等级相乘，用于计算AI向另一方提出加入阵营的意愿值

DIPLOMACY_FACTION_SURRENDER_LEVEL = 20, 	— How much the recipient nation losing matters for joining a faction

DIPLOMACY_FACTION_SURRENDER_LEVEL = 20, — 接收国战败对加入阵营的影响程度

DIPLO_PREFER_OTHER_FACTION = -200,			— The country has yet to ask some other faction it would prefer to be a part of.

DIPLO_PREFER_OTHER_FACTION = -200, — 该国尚未询问其更希望加入的其他阵营。

DIPLO_DISTANCE_BETWEEN_CAPITALS = -340,		— Max scaled malus from distance between capitals

DIPLO_DISTANCE_BETWEEN_CAPITALS = -340，— 首都间距离的最大比例惩罚值

DIPLO_ACCEPTABLE_DISTANCE_BETWEEN_CAPITALS = 1000.0, —When scaled distance malus begins to kick in. At double this value, max penalty (above) is achieved

DIPLO_ACCEPTABLE_DISTANCE_BETWEEN_CAPITALS = 1000.0, ——当距离惩罚开始生效时的缩放距离。达到该值的两倍时，将触发最大惩罚（如上所述）。

DIPLO_SHOW_FACTION_JOIN_WARNING_THRESHOLD = -20,	— Show warning if declare-war target is this close to accepting or being sent a faction invitiation

DIPLO_SHOW_FACTION_JOIN_WARNING_THRESHOLD = -20, —— 若宣战目标的接受或收到派系邀请的倾向值接近此数值时显示警告

DIPLO_MAX_CONTAINMENT_ACCEPTANCE = 100,		— Max value for ‘wants to contain’ diplo acceptance

DIPLO_MAX_CONTAINMENT_ACCEPTANCE = 100, ——“希望遏制”外交接受度的最大值



RESEARCH_DAYS_BETWEEN_WEIGHT_UPDATE = 7, 	— Refreshes need scores based on country situation.

RESEARCH_DAYS_BETWEEN_WEIGHT_UPDATE = 7，——根据国家情况刷新需求评分。

RESEARCH_WEIGHT_TRUNCATION_THRESHOLD = 0.75, — When choosing a tech to research, use this truncation selection threshold. (for example, if the top score is 10, a threshold of 0.75 will pick randomly from anything above 7.5 score)

RESEARCH_WEIGHT_TRUNCATION_THRESHOLD = 0.75, —— 在选择研究技术时，使用此截断选择阈值。（例如，若最高得分为10，0.75的阈值将从所有高于7.5分的选项中随机选取）

RESEARCH_LAND_DOCTRINE_NEED_GAIN_FACTOR = 0.15, — Multiplies value based on relative military industry size / country size.

RESEARCH_LAND_DOCTRINE_NEED_GAIN_FACTOR = 0.15, —— 基于相对军事工业规模/国家规模的数值乘数。

RESEARCH_NAVAL_DOCTRINE_NEED_GAIN_FACTOR = 0.05, — Multiplies value based on relative naval industry size / country size.

RESEARCH_NAVAL_DOCTRINE_NEED_GAIN_FACTOR = 0.05, —— 根据相对海军工业规模与国家大小的比值乘以系数。

RESEARCH_AIR_DOCTRINE_NEED_GAIN_FACTOR = 0.07, — Multiplies value based on relative number of air base / country size.

RESEARCH_AIR_DOCTRINE_NEED_GAIN_FACTOR = 0.07, —— 根据空军基地数量与国家大小的相对比例来倍增价值。

RESEARCH_NEW_DOCTRINE_RANDOM_FACTOR = 0.05,	— How much randomness is allowed to contribute to do new research expressed as a factor of total tech weights. Higher means more random exploration.

RESEARCH_NEW_DOCTRINE_RANDOM_FACTOR = 0.05, —— 允许的随机性对新研究的贡献程度，以技术总权重的因子表示。数值越高意味着探索更具随机性。

RESEARCH_AHEAD_BONUS_FACTOR = 4.0, — To which extent AI should care about ahead of time bonuses to research

RESEARCH_AHEAD_BONUS_FACTOR = 4.0, ——AI应多大程度上关注提前完成研究的奖励

RESEARCH_BONUS_FACTOR = 5.0, — To which extent AI should care about research speed bonuses

RESEARCH_BONUS_FACTOR = 5.0, — AI应多大程度上关注研究速度加成

RESEARCH_YEARS_BEHIND_FACTOR = 0.2, — To which extent AI should care about not falling behind (i.e. increase weight for old tech)

RESEARCH_YEARS_BEHIND_FACTOR = 0.2, —— AI应在多大程度上关注不落后（即增加对旧技术的权重）

RESEARCH_NEEDS_FACTOR = 0.01, — To which extent AI should care about its research needs (research needs are matched against the tech category)

RESEARCH_NEEDS_FACTOR = 0.01, —— AI应多大程度上关注其研究需求（研究需求需与技术类别相匹配）

RESEARCH_LENGTH_FACTOR = 3, — To which extent AI should care about how long it takes to research something (it prefers short research times)

RESEARCH_LENGTH_FACTOR = 3, —— AI应在多大程度上关注研究某事物所需的时间（它倾向于较短的研究时长）

MAX_AHEAD_RESEARCH_PENALTY = 3, — Max ahead of time penalty AI will ever consider (this also includes BASE_YEAR_AHEAD_PENALTY_FACTOR, so not the raw time)

MAX_AHEAD_RESEARCH_PENALTY = 3, — AI将考虑的最大超前研究惩罚值（此数值已包含BASE_YEAR_AHEAD_PENALTY_FACTOR的影响，故非原始时间值）

RESEARCH_AHEAD_OF_TIME_FACTOR = 4.0, 		— To which extent AI should care about ahead of time penalties to research

RESEARCH_AHEAD_OF_TIME_FACTOR = 4.0, — AI应在多大程度上关注研究的提前完成惩罚

RESEARCH_BASE_DAYS = 60,					— AI adds a base number of days when weighting completion time for techs to ensure it doesn’t only research quick techs

RESEARCH_BASE_DAYS = 60, — AI为科技完成时间加权时添加的基础天数，以确保它不仅仅研究快速科技

DECLARE_WAR_RELATIVE_FORCE_FACTOR = 0.5,	— Weight of relative force between nations that consider going to war

DECLARE_WAR_RELATIVE_FORCE_FACTOR = 0.5, -- 考虑开战国家间相对军力影响的权重系数

TRADEABLE_FACTORIES_FRACTION = 0.8,			— Will at most trade away this fraction of factories.

TRADEABLE_FACTORIES_FRACTION = 0.8, —— 最多交易掉这一比例的工厂。

MIN_DELIVERED_TRADE_FRACTION = 0.8,			— AI will cancel trade deals that are not able to deliver more than this fraction of the agreed amount

MIN_DELIVERED_TRADE_FRACTION = 0.8，—— AI将取消未能交付超过约定数量此比例的贸易协议

SEA_PATH_LENGTH_SCORE_BASE = -30, — scoring reduction from naval paths for AI when picking trade partners

SEA_PATH_LENGTH_SCORE_BASE = -30, —— AI选择贸易伙伴时，海上路径带来的评分削减基数

MINIMUM_GOOD_TRADE_RATIO_PER_CIV = 0.005, — for each civ factory we have mul with this we are allowed to trade under % of resource on a trade

MINIMUM_GOOD_TRADE_RATIO_PER_CIV = 0.005, —— 对于每个民用工厂，我们将其乘以该值，以确定在贸易中允许交易的资源百分比

NAVAL_DOCKYARDS_SHIP_FACTOR = 1.5,			— The extent to which number of dockyards play into amount of sips a nation wants

NAVAL_DOCKYARDS_SHIP_FACTOR = 1.5, — 船坞数量对国家期望舰船数量的影响程度

PRODUCTION_EQUIPMENT_SURPLUS_FACTOR = 0.8,	— Base value for how much of currently used equipment the AI will at least strive to have in stock

PRODUCTION_EQUIPMENT_SURPLUS_FACTOR = 0.8, —— AI至少会努力保持库存中当前使用装备量的基础比例值

PRODUCTION_EQUIPMENT_SURPLUS_FACTOR_GARRISON = 0.3,	— Base value for how much of currently used equipment the AI will at least strive to have in stock for garrison forces

PRODUCTION_EQUIPMENT_SURPLUS_FACTOR_GARRISON = 0.3, —— 用于AI至少会努力为驻军部队保持库存的当前使用装备基础值

AIR_SUPERIORITY_FACTOR = 2.5,				— Factor for air superiority score

AIR_SUPERIORITY_FACTOR = 2.5, — 制空权得分的系数

ROCKET_MIN_ASSIGN_SCORE = 10,				— Minimum total score for region to be considered for rocket air missions

ROCKET_MIN_ASSIGN_SCORE = 10, — 区域被考虑执行火箭空中任务所需的最低总评分

ROCKET_MIN_PRIO_ASSIGN_SCORE = 50,			— Minimum total score for region to be considered for critical rocket air missions

ROCKET_MIN_PRIO_ASSIGN_SCORE = 50, —— 区域被考虑执行关键火箭空中任务所需的最低总分

ROCKET_PRIORITIZE_BARRAGE = false,			— Prioritize rocket barrage or strategic bombing mission. false = prioritize strategic bombing, true = prioritize barrage

ROCKET_PRIORITIZE_BARRAGE = false, — 优先火箭弹幕还是战略轰炸任务。false = 优先战略轰炸，true = 优先弹幕

ROCKET_ASSIGN_SCORE_REDUCTION_PER_ASSIGNMENT = 0.5, — each assigned rocket reduces the score of a region by this amount

ROCKET_ASSIGN_SCORE_REDUCTION_PER_ASSIGNMENT = 0.5, — 每分配一枚火箭会使该区域的得分减少此数值

GUN_EMPLACEMENT_MIN_ASSIGN_SCORE = 1, — Minimum total score for region to be considered for gun emplacement air missions

GUN_EMPLACEMENT_MIN_ASSIGN_SCORE = 1, — 区域被考虑进行炮位空中任务的最低总分数

GUN_EMPLACEMENT_MIN_PRIO_ASSIGN_SCORE = 50, — Minimum total score for region to be considered for critical gun emplacement air missions

GUN_EMPLACEMENT_MIN_PRIO_ASSIGN_SCORE = 50, —— 区域被考虑用于关键火炮阵地空中任务的最低总分

GUN_EMPLACEMENT_ASSIGN_SCORE_REDUCTION_PER_ASSIGNMENT = 0.5, — each assigned gun emplacement reduces the score of a region by this amount

GUN_EMPLACEMENT_ASSIGN_SCORE_REDUCTION_PER_ASSIGNMENT = 0.5, — 每分配一座炮台，该区域的得分将减少此数值

MAX_VOLUNTEER_ARMY_FRACTION = 0.25,			— Countries will not send more than their forces time this number to aid another country

MAX_VOLUNTEER_ARMY_FRACTION = 0.25, —— 各国派遣支援他国的兵力不会超过其军队总数与该数值的乘积

DEPLOY_MIN_TRAINING_SURRENDER_FACTOR = 0.5, — Required percentage of training (1.0 = 100%) for AI to deploy unit in wartime while surrender progress is higher than 0

DEPLOY_MIN_TRAINING_SURRENDER_FACTOR = 0.5, —— AI在投降进度高于0时，战时部署单位所需的最低训练百分比（1.0 = 100%）

DEPLOY_MIN_EQUIPMENT_SURRENDER_FACTOR = 0.90, — Required percentage of equipment (1.0 = 100%) for AI to deploy unit in wartime while surrender progress is higher than 0

DEPLOY_MIN_EQUIPMENT_SURRENDER_FACTOR = 0.90, —— AI在战时投降进度高于0时部署单位所需的装备百分比（1.0 = 100%）

DEPLOY_MIN_TRAINING_PEACE_FACTOR = 0.98, — Required percentage of training (1.0 = 100%) for AI to deploy unit in peacetime

DEPLOY_MIN_TRAINING_PEACE_FACTOR = 0.98, —— AI在和平时期部署单位所需的最低训练完成度百分比（1.0 = 100%）

DEPLOY_MIN_EQUIPMENT_PEACE_FACTOR = 0.98, — Required percentage of equipment (1.0 = 100%) for AI to deploy unit in peacetime

DEPLOY_MIN_EQUIPMENT_PEACE_FACTOR = 0.98, —— AI在和平时期部署单位所需的装备百分比（1.0 = 100%）

DEPLOY_MIN_TRAINING_WAR_FACTOR = 0.95, — Required percentage of training (1.0 = 100%) for AI to deploy unit in wartime

DEPLOY_MIN_TRAINING_WAR_FACTOR = 0.95, —— AI在战时部署单位所需的最低训练百分比（1.0 = 100%）

DEPLOY_MIN_EQUIPMENT_WAR_FACTOR = 0.95, — Required percentage of equipment (1.0 = 100%) for AI to deploy unit in wartime

DEPLOY_MIN_EQUIPMENT_WAR_FACTOR = 0.95, —— AI战时部署单位所需的装备百分比（1.0 = 100%）

DEPLOY_MIN_EQUIPMENT_CAP_DEPLOY_FACTOR = 0.85, — If training is capped by equipment deficit and we have reached that cap, deploy unit anyway if percentage is above this (reinforce in field instead).

DEPLOY_MIN_EQUIPMENT_CAP_DEPLOY_FACTOR = 0.85, —— 若训练因装备短缺达到上限，但装备比例高于此值，则仍部署该单位（改为在战场补充）。

DYNAMIC_STRATEGIES_THREAT_FACTOR = 4.0,		— How much threat generated by other countries effects generated strategies

DYNAMIC_STRATEGIES_THREAT_FACTOR = 4.0, —— 其他国家产生的威胁对生成战略的影响程度

LOCATION_BALANCE_TO_ADVANCE = 0.0,			— Limit on location strength balance between country and enemy for unit to dare to move forward.

LOCATION_BALANCE_TO_ADVANCE = 0.0, — 单位敢于向前推进时，国家与敌方之间的位置力量平衡限制。



EQUIPMENT_MARKET_UPDATE_FREQUENCY_DAYS = 11, — How often the AI runs its market logic

EQUIPMENT_MARKET_UPDATE_FREQUENCY_DAYS = 11, —— AI执行其市场逻辑的频率

EQUIPMENT_MARKET_MAX_CIVS_FOR_PURCHASES_RATIO = 0.1, — Ratio of available civilian factories to max use for equipment purchases (0.2 = 20 %, so 50 available civs would mean max ca 10 civs to spend on purchases at any one time). Gets modified by equipment_market_spend_factories AI strategy.

EQUIPMENT_MARKET_MAX_CIVS_FOR_PURCHASES_RATIO = 0.1, — 可用于装备采购的民用工厂比例（0.2=20%，即50个可用民用工厂意味着最多同时有约10个工厂用于采购）。该数值会受equipment_market_spend_factories AI策略调整。

EQUIPMENT_MARKET_BASE_MARKET_RATIO = 0.2, — The AI tries to keep ca this ratio of equipment surplus for sale on the market. Gets modified by equipment_market_for_sale_factor AI strategy.

EQUIPMENT_MARKET_BASE_MARKET_RATIO = 0.2, —— AI会尝试保持这一比例的装备盈余用于市场销售。此数值会受到equipment_market_for_sale_factor AI策略的修改。

EQUIPMENT_MARKET_DEFAULT_CIC_CHUNK_FOR_SALE = 150.0, — When putting things up for sale on the market, this determines the default “chunk” size of equipment the AI puts up. Gets overridden by equipment_market_min_for_sale AI strategy. (If one equipment is worth 5 CIC, a value of 150 would result in chunk sizes of 150/5 = 30 units)

EQUIPMENT_MARKET_DEFAULT_CIC_CHUNK_FOR_SALE = 150.0, —— 当在市场上出售物品时，此数值决定了AI默认挂单的装备“批量”大小。该数值会被equipment_market_min_for_sale的AI策略覆盖。（若单件装备价值5 CIC，设定值为150时，则批量大小为150/5=30件）

EQUIPMENT_MARKET_NR_DELIVERIES_SOFT_MAX = 10, — AI tries to adjust assigned factories and amount of equipment to keep nr deliveries at max this

EQUIPMENT_MARKET_NR_DELIVERIES_SOFT_MAX = 10, — 人工智能会尝试调整分配的工厂及装备数量，将交付次数维持在此上限值

EQUIPMENT_MARKET_EXTRA_CONVOYS_OVERRIDE = 2, — Makes the AI able to buy convoys even if they are lacking free convoys. 0 will make them stop this behavior, anything > 0 will allow overriding the perceived nr of free convoys. Only if convoy equipment has a non-zero weight does the actual value matter.

EQUIPMENT_MARKET_EXTRA_CONVOYS_OVERRIDE = 2, — 使AI即使缺少空闲运输船也能购买运输船。设为0将禁止此行为，任何大于0的值将允许覆盖感知的空闲运输船数量。仅当运输船装备权重非零时，实际数值才会产生影响。

EQUIPMENT_MARKET_WANTED_CONVOY_USAGE_RATIO = 0.3, — If the AI’s available/free/unused convoys is reduced to this ratio (0.3 = 30 %), start buying convoys.

EQUIPMENT_MARKET_WANTED_CONVOY_USAGE_RATIO = 0.3, —— 当AI可用/空闲/未使用的运输船队比例降至该比率（0.3=30%）时，开始购买运输船队。

EQUIPMENT_MARKET_CONTRACT_DURATION_ACCEPTANCE = -10, — If expected contract duration is longer than EQUIPMENT_MARKET_NR_DELIVERIES_SOFT_MAX deliveries, then add this to the PurchaseContract AI acceptance score per nr overdue deliveries

EQUIPMENT_MARKET_CONTRACT_DURATION_ACCEPTANCE = -10, — 如果预期合同期限超过EQUIPMENT_MARKET_NR_DELIVERIES_SOFT_MAX次交付，则每逾期一次交付就将此值加到PurchaseContract AI的接受分数上

EQUIPMENT_MARKET_CONTRACT_EFFICIENCY_TO_CANCEL = 0.1, — If contract efficiency stays below this, the AI will cancel the contract

EQUIPMENT_MARKET_CONTRACT_EFFICIENCY_TO_CANCEL = 0.1, —— 若合同效率持续低于此值，AI将取消合同

EQUIPMENT_MARKET_EQUIPMENT_SUNK_TO_CANCEL = 0.5, — If more equipment is sunk then the given percentage, the AI will cancel the contract

EQUIPMENT_MARKET_EQUIPMENT_SUNK_TO_CANCEL = 0.5, — 若装备损失超过给定百分比，AI将取消合同

EQUIPMENT_MARKET_SHORTAGE_DAYS_TO_CANCEL = 30, — If equipment deficit will take more than these many days to fix, the AI will cancel the contract

EQUIPMENT_MARKET_SHORTAGE_DAYS_TO_CANCEL = 30, — 若装备短缺修复所需天数超过此数值，AI将取消合同

EQUIPMENT_MARKET_MAX_CONVOY_RATIO_FOR_MARKET_PEACE = 0.5, — Max ratio of total convoys to use for equipment trade while at peace

EQUIPMENT_MARKET_MAX_CONVOY_RATIO_FOR_MARKET_PEACE = 0.5, — 和平时期用于装备贸易的最大运输船队占总运输船队的比例

EQUIPMENT_MARKET_MAX_CONVOY_RATIO_FOR_MARKET_WAR = 0.25, — Max ratio of total convoys to use for equipment trade while at war

EQUIPMENT_MARKET_MAX_CONVOY_RATIO_FOR_MARKET_WAR = 0.25, — 战时用于装备贸易的最大护航舰船占总护航舰船的比例

EQUIPMENT_MARKET_SCORE_FACTOR_VARIANT_SCORE = 5.0, — Score coefficient for VariantScore (high is good)

EQUIPMENT_MARKET_SCORE_FACTOR_VARIANT_SCORE = 5.0, — 变体分数的评分系数（数值越高越好）

EQUIPMENT_MARKET_SCORE_FACTOR_CIC_VALUE_NEEDED = 8.0, — Score coefficient for CicValueNeeded (high is prio)

EQUIPMENT_MARKET_SCORE_FACTOR_CIC_VALUE_NEEDED = 8.0, — 用于CicValueNeeded的得分系数（数值越高优先级越高）

EQUIPMENT_MARKET_SCORE_FACTOR_SUBSIDY_VALUE = 2.0, — Score coefficient for SubsidyValue (high is good)

EQUIPMENT_MARKET_SCORE_FACTOR_SUBSIDY_VALUE = 2.0, — 补贴值的评分系数（数值越大越好）

EQUIPMENT_MARKET_SCORE_FACTOR_COST_PER_UNIT = -5.0, — Score coefficient for SubsidizedCostPerUnit (low is good)

EQUIPMENT_MARKET_SCORE_FACTOR_COST_PER_UNIT = -5.0, — SubsidizedCostPerUnit的得分系数（数值低表示更优）

EQUIPMENT_MARKET_SCORE_FACTOR_AI_STRAT_WEIGHT = 50.0, — Score coefficient for AiStratWeight (high is prio)

EQUIPMENT_MARKET_SCORE_FACTOR_AI_STRAT_WEIGHT = 50.0, —— AiStratWeight的评分系数（数值越高优先级越高）

EQUIPMENT_MARKET_SCORE_FACTOR_DIPLO_OPINION = 1.0, — Score coefficient for DiploOpinion, mainly used as tie breaker (high is good)

EQUIPMENT_MARKET_SCORE_FACTOR_DIPLO_OPINION = 1.0, — 外交意见评分系数，主要用于打破平局（数值高为优）



DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_MANPOWER_IN_FIELD = -20,	— Scale multiplied by difference in manpower in field

DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_MANPOWER_IN_FIELD = -20, —— 数值乘以战场人力差异的比例

DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_GLOBAL_TENSION = -10,	— Multiplied by WT

外交_接受有条件投降_全球紧张度 = -10, ——乘以世界紧张度

DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_WAR_SUPPORT = -10,		— Multiplied by recipient WS

外交_接受有条件投降战争支持度 = -10, — 乘以接收方的战争支持度

DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_EMBARGO = 2,				— Multiplied by num embargo, max 5 embargo

DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_EMBARGO = 2, — 乘以禁运数量，最多5个禁运

DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_OWN_SURRENDER_LIMIT = 20, — Multiplied by recipient nation’s surrender level

DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_OWN_SURRENDER_LIMIT = 20, — 乘以接收国的投降等级

DIPLOMACY_ACCEPT_CONDITIONAL_SURRENDER_MINOR_WAR = 10,			— Applied if recipient is a minor nation (and therefore there are no majors in this war)

外交_接受有条件投降_次要战争 = 10, ——适用于接收方为次要国家（因此该战争中无主要国家参与）的情况



MIN_POLITICAL_POWER_MONTHLY_GAIN_FOR_IMPROVE_RELATIONS = 0.50,	— If country makes less than this PP per month, they won’t improve relations

MIN_POLITICAL_POWER_MONTHLY_GAIN_FOR_IMPROVE_RELATIONS = 0.50, — 若国家每月获得的政治点数低于此值，则不会改善外交关系



NUM_RESOURCES_TO_ALLOW_MINOR_EMBARGO = 69,	—If we or any of our puppets have more total resources of a single category that this, we will consider embargoing countries

NUM_RESOURCES_TO_ALLOW_MINOR_EMBARGO = 69, ——如果我们或任何附庸国单类资源总量超过此数值，将考虑对其他国家实施禁运

EMBARGO_WORLD_TENSION_THREAT_DIVISOR = 2.5,		—A divisor to generated world tension when applying how much we care about it in AI desire

EMBARGO_WORLD_TENSION_THREAT_DIVISOR = 2.5, ——在AI欲望计算中应用我们对世界紧张局势的关注程度时，用于生成世界紧张度的除数



OPINION_CUTOFF_FOR_IMPROVE_RELATIONS = 80,	— AI will never consider improving relations if above this opinion with target.

OPINION_CUTOFF_FOR_IMPROVE_RELATIONS = 80, — 若对目标的好感度高于此值，AI将永远不会考虑改善关系。



DEFAULT_MODULE_VARIANT_CREATION_XP_CUTOFF_LAND = 35,	— Army XP needed before attempting to create a variant of a type that uses the tank designer (the tank designer DLC feature must be active).

DEFAULT_MODULE_VARIANT_CREATION_XP_CUTOFF_LAND = 35, — 陆军在尝试创建使用坦克设计器（需启用坦克设计师DLC功能）的型号变体前所需的经验值。

DEFAULT_MODULE_VARIANT_CREATION_XP_CUTOFF_NAVY = 50,	— Same as above but for the ship designer.

DEFAULT_MODULE_VARIANT_CREATION_XP_CUTOFF_NAVY = 50, — 同上，但适用于舰船设计器。

DEFAULT_MODULE_VARIANT_CREATION_XP_CUTOFF_AIR = 25,		— Same as above but for the plane designer.

DEFAULT_MODULE_VARIANT_CREATION_XP_CUTOFF_AIR = 25, — 同上，但适用于飞机设计器。

DEFAULT_LEGACY_VARIANT_CREATION_XP_CUTOFF_LAND = 35,	— Army XP needed before attempting to create a variant of a type that uses the legacy upgrades system. ai_strategy supports land_xp_spend_priority upgrade_xp_cutoff. If none is set, this define is used instead.

DEFAULT_LEGACY_VARIANT_CREATION_XP_CUTOFF_LAND = 35, —— 在尝试创建使用旧版升级系统的类型变体前所需的陆军经验值。ai_strategy支持land_xp_spend_priority的upgrade_xp_cutoff参数。若未设置该参数，则使用此定义值代替。

DEFAULT_LEGACY_VARIANT_CREATION_XP_CUTOFF_NAVY = 25,	— Same as above but for navy XP and navy_xp_spend_priority.

DEFAULT_LEGACY_VARIANT_CREATION_XP_CUTOFF_NAVY = 25, —— 同上，但针对海军经验值及海军经验值花费优先级。

DEFAULT_LEGACY_VARIANT_CREATION_XP_CUTOFF_AIR = 25,	— Same as above but for air XP and air_xp_spend_priority.

DEFAULT_LEGACY_VARIANT_CREATION_XP_CUTOFF_AIR = 25, ——同上，但适用于空中经验值（air XP）和空中经验值消耗优先级（air_xp_spend_priority）。

VARIANT_CREATION_XP_RESERVE_LAND = 50,					— If the AI lacks army XP to create a variant it will reserve this much XP for variant creation so that it will eventually be able to create a variant.

VARIANT_CREATION_XP_RESERVE_LAND = 50, — 若AI缺乏创建变种所需的军队经验值，将保留此数值的经验值用于变种创建，以确保最终能够创建变种。

VARIANT_CREATION_XP_RESERVE_NAVY = 50,					— Same as above but for navy XP.

VARIANT_CREATION_XP_RESERVE_NAVY = 50, —— 同上，但针对海军经验值。

VARIANT_CREATION_XP_RESERVE_AIR = 50,					— Same as above but for air XP.

VARIANT_CREATION_XP_RESERVE_AIR = 50, — 同上，但适用于空中经验值。



— The AI uses the below values when selecting which design to make among the types that use the tank designer

— AI在选择使用坦克设计器的类型进行设计时，会依据以下数值

— (the tank designer DLC feature must be active). For each role, the highest priority AI design that can be

—（需启用坦克设计师DLC功能）。针对每个角色，系统将自动选择可用的最高优先级AI设计方案。

— created, if any, is assigned a weight. Any design with a weight of zero or a weight that falls below the

— 创建的任何设计都会被赋予一个权重。任何权重为零或低于设定阈值的

— cutoff is dropped. A random design is then picked from the remaining.

—— 截止线被取消。随后从剩余的选项中随机选取一个设计。

— Weight is calculated as AlternativeFactor * DemandFactor.

— 重量计算方式为替代因子乘以需求因子。

— An “alternative” is a producible design of the same archetype (each specialized type is its own archetype).

“替代方案”是指同一原型（每个专有类型自成一类原型）下可生产的另一种设计。

LAND_DESIGN_ALTERNATIVE_ABSENT = 30000,

LAND_DESIGN_ALTERNATIVE_ABSENT = 30000,

LAND_DESIGN_ALTERNATIVE_OF_LESSER_TECH = 10000,

LAND_DESIGN_ALTERNATIVE_OF_LESSER_TECH = 10000,

LAND_DESIGN_ALTERNATIVE_OF_EQUAL_TECH = 100,

同等技术条件下的土地设计替代方案 = 100,

LAND_DESIGN_ALTERNATIVE_OF_GREATER_TECH = 1,

LAND_DESIGN_ALTERNATIVE_OF_GREATER_TECH = 1,

— If a template may be reinforced with the archetype it’s considered to be “demanded”. If multiple conditions

——如果某个模板可能通过其所依据的原型得到加强，则被视为“被要求”。若存在多个条件

— are met, e.g. it’s both in the field and in training, the largest value is used.

— 得到满足时，例如既在实地又在培训中，则采用最大值。

LAND_DESIGN_DEMAND_FIELD_DIVISION = 20,

LAND_DESIGN_DEMAND_FIELD_DIVISION = 20,

LAND_DESIGN_DEMAND_TRAINING_DIVISION = 15,

LAND_DESIGN_DEMAND_TRAINING_DIVISION = 15,

LAND_DESIGN_DEMAND_GARRISON_DIVISION = 10,

LAND_DESIGN_DEMAND_GARRISON_DIVISION = 10,

LAND_DESIGN_DEMAND_UNUSED_TEMPLATE = 1,

LAND_DESIGN_DEMAND_UNUSED_TEMPLATE = 1,

LAND_DESIGN_DEMAND_ABSENT = 1,

LAND_DESIGN_DEMAND_ABSENT = 1,

— If a design with a weight when divided by the largest weight falls below this value it’s excluded from the

——如果某个设计的重量除以最大重量的结果低于该值，则该设计将被排除在外

— selection. Valid values are in the range [0, 1] inclusive.

— 选择。有效值范围为[0, 1]闭区间。

LAND_DESIGN_CUTOFF_AS_PERCENTAGE_OF_MAX = 0.25,

LAND_DESIGN_CUTOFF_AS_PERCENTAGE_OF_MAX = 0.25,



— See above documentation.

— 参见上述文档。

AIR_DESIGN_ALTERNATIVE_ABSENT = 1000000,

AIR_DESIGN_ALTERNATIVE_ABSENT = 10000,

AIR_DESIGN_ALTERNATIVE_OF_LESSER_TECH = 10000,

AIR_DESIGN_ALTERNATIVE_OF_LESSER_TECH = 10000,

AIR_DESIGN_ALTERNATIVE_OF_EQUAL_TECH = 100,

AIR_DESIGN_ALTERNATIVE_OF_EQUAL_TECH = 100,

AIR_DESIGN_ALTERNATIVE_OF_GREATER_TECH = 1,

AIR_DESIGN_ALTERNATIVE_OF_GREATER_TECH = 1,

— The AI desires to produce equipment at a certain rate per archetype, and demand is determined per archetype

— 人工智能期望按每种原型以特定速率生产设备，而需求则是依据每种原型来确定的

— relative to the least and most desired counts.

——相对于最少和最期望的数量。

AIR_DESIGN_DEMAND_MAX = 33,

AIR_DESIGN_DEMAND_MAX = 33,

AIR_DESIGN_DEMAND_MIN = 1,

AIR_DESIGN_DEMAND_MIN = 1,

AIR_DESIGN_DEMAND_ABSENT = 0,

AIR_DESIGN_DEMAND_ABSENT = 0,

AIR_DESIGN_CUTOFF_AS_PERCENTAGE_OF_MAX = 0.34,

AIR_DESIGN_CUTOFF_AS_PERCENTAGE_OF_MAX = 0.34,



— The AI “desires” to spend XP on doctrines, templates, and equipment.

人工智能“渴望”将经验值用于教条、模板和装备上。

— The desire is built up over time and when XP is available it spends it on the action that has the highest accumulated desire. After spending XP the desire is reset, in effect balancing the desires.

——这种渴望会随时间积累，当经验值可用时，就会将其用于累积渴望值最高的行动上。消耗经验值后，渴望值会重置，从而实现各欲望间的平衡。

— Below is the daily desire gain for each action.

— 以下是每种行为的每日欲望值获取量。

DESIRE_USE_XP_TO_UNLOCK_LAND_DOCTRINE = 0.5, — How quickly is desire to unlock land doctrines accumulated?

DESIRE_USE_XP_TO_UNLOCK_LAND_DOCTRINE = 0.5, — 解锁陆军学说所需的意愿积累速度是多少？

DESIRE_USE_XP_TO_UNLOCK_NAVAL_DOCTRINE = 0.5, — How quickly is desire to unlock naval doctrines accumulated?

DESIRE_USE_XP_TO_UNLOCK_NAVAL_DOCTRINE = 0.5, —— 解锁海军学说的渴望值积累速度有多快？

DESIRE_USE_XP_TO_UNLOCK_AIR_DOCTRINE = 0.5, — How quickly is desire to unlock air doctrines accumulated?

DESIRE_USE_XP_TO_UNLOCK_AIR_DOCTRINE = 0.5, — 解锁空军学说的渴望值积累速度有多快？

DESIRE_USE_XP_TO_UPDATE_LAND_TEMPLATE = 2.0, — How quickly is desire to update/create templates accumulated?

DESIRE_USE_XP_TO_UPDATE_LAND_TEMPLATE = 2.0, —— 更新/创建模板的渴望积累速度有多快？

DESIRE_USE_XP_TO_UPGRADE_LAND_EQUIPMENT = 1.0, — How quickly is desire to update/create land equipment variants accumulated?

DESIRE_USE_XP_TO_UPGRADE_LAND_EQUIPMENT = 1.0, ——升级/创建陆军装备变体的意愿积累速度有多快？

DESIRE_USE_XP_TO_UPGRADE_NAVAL_EQUIPMENT = 1.0, — How quickly is desire to update/create naval equipment variants accumulated?

DESIRE_USE_XP_TO_UPGRADE_NAVAL_EQUIPMENT = 1.0, — 更新/创建海军装备变体的欲望积累速度有多快？

DESIRE_USE_XP_TO_UPGRADE_AIR_EQUIPMENT = 1.0, — How quickly is desire to update/create air equipment variants accumulated?

DESIRE_USE_XP_TO_UPGRADE_AIR_EQUIPMENT = 1.0, —— 更新/创建空军装备变体的意愿积累速度有多快？

DESIRE_USE_XP_TO_UNLOCK_ARMY_SPIRIT = 0.35, — How quickly is desire to unlock army spirits accumulated?

DESIRE_USE_XP_TO_UNLOCK_ARMY_SPIRIT = 0.35, — 解锁军魂的渴望值积累速度有多快？

DESIRE_USE_XP_TO_UNLOCK_NAVY_SPIRIT = 0.35, — How quickly is desire to unlock naval spirits accumulated?

DESIRE_USE_XP_TO_UNLOCK_NAVY_SPIRIT = 0.35, —— 解锁海军精神的欲望积累速度有多快？

DESIRE_USE_XP_TO_UNLOCK_AIR_SPIRIT = 0.35, — How quickly is desire to unlock air spirits accumulated?

DESIRE_USE_XP_TO_UNLOCK_AIR_SPIRIT = 0.35, — 解锁风之精灵的欲望积累速度有多快？



DAYS_BETWEEN_CHECK_BEST_DOCTRINE = 7; — Recalculate desired best doctrine to unlock with this many days inbetween.

DAYS_BETWEEN_CHECK_BEST_DOCTRINE = 7; — 在间隔这么多天后重新计算期望解锁的最佳学说。

DAYS_BETWEEN_CHECK_BEST_TEMPLATE = 7; — Recalculate desired best template to upgrade with this many days inbetween.

DAYS_BETWEEN_CHECK_BEST_TEMPLATE = 7; — 每隔这么多天重新计算需要升级的最佳模板。

DAYS_BETWEEN_CHECK_BEST_EQUIPMENT = 7; — Recalculate desired best equipment to upgrade with this many days inbetween.

DAYS_BETWEEN_CHECK_BEST_EQUIPMENT = 7; — 以该天数间隔重新计算需要升级的最佳装备。



UNLOCK_SPIRIT_AI_WILL_DO_FACTOR = 20, — Factor for scripted ai_will_do value

UNLOCK_SPIRIT_AI_WILL_DO_FACTOR = 20, —— 脚本化ai_will_do值的调节因子

UNLOCK_SPIRIT_MODIFIER_FACTOR = 0.05, — Factor for AI’s evaluated value of the modifiers connected to the spirit

UNLOCK_SPIRIT_MODIFIER_FACTOR = 0.05, — AI评估与精神相关修饰符价值时的系数

UNLOCK_SPIRIT_USE_TRUNCATION_SELECT = false, — Whether to use truncation select or roulette-wheel select. Set threshold for truncation select below.

UNLOCK_SPIRIT_USE_TRUNCATION_SELECT = false, — 是否使用截断选择或轮盘赌选择。下方设置截断选择的阈值。

UNLOCK_SPIRIT_TRUNCATION_SELECT_THRESHOLD = 0.80, — Valid between [0.0, 1.0]. When unlocking spirits, select randomly from all spirits with AI score >= VALUE * HighestSpiritScore. To always select the best, set this value to 1.0. To select fully randomly, set this value to 0.0.

解锁灵魂截断选择阈值 = 0.80, —— 有效范围[0.0, 1.0]。当解锁灵魂时，从所有AI评分 >= 值*最高灵魂评分的灵魂中随机选择。若始终选择最优，将此值设为1.0；若完全随机选择，则设为0.0。



FOCUS_TREE_CONTINUE_FACTOR = 1.5,			— Factor for score of how likely the AI is to keep going down a focus tree rather than starting a new path.

FOCUS_TREE_CONTINUE_FACTOR = 1.5, — 决定AI继续沿当前焦点树推进而非开启新路径倾向得分的系数。

PLAN_VALUE_TO_EXECUTE = -0.5,				— AI will typically avoid carrying out a plan it below this value (0.0 is considered balanced).

PLAN_VALUE_TO_EXECUTE = -0.5, — 人工智能通常会避免执行低于此值的计划（0.0被视为平衡状态）。

DECLARE_WAR_NOT_NEIGHBOR_FACTOR = 0.25,		— Multiplier applied before force factor if country is not neighbor with the one it is considering going to war

DECLARE_WAR_NOT_NEIGHBOR_FACTOR = 0.25, — 若国家与考虑宣战对象非邻国，则在计算武力因素前应用的乘数

CALL_ALLY_BASE_DESIRE = 20,					— exactly what it says

CALL_ALLY_BASE_DESIRE = 20, —— 字面意思

CALL_ALLY_DEMOCRATIC_DESIRE = 50,			— Desire to call ally added for democratic AI

CALL_ALLY_DEMOCRATIC_DESIRE = 50, ——为民主AI添加了召唤盟友的意愿

CALL_ALLY_NEUTRAL_DESIRE = 25,				— Desire to call ally added for neutral AI

CALL_ALLY_NEUTRAL_DESIRE = 25, — 为中立AI添加的召唤盟友欲望

CALL_ALLY_FASCIST_DESIRE = -10,				— Desire to call ally added for fascist AI

CALL_ALLY_FASCIST_DESIRE = -10, — 法西斯AI对召唤盟友的渴望值

CALL_ALLY_COMMUNIST_DESIRE = 75,			— Desire to call ally added for communist AI

CALL_ALLY_COMMUNIST_DESIRE = 75, —— 为共产主义AI添加的召唤盟友欲望

CALL_ALLY_PUPPET_INVITE_OVERLORD = 1000, — Desire for a puppet to call its overlord into the war

CALL_ALLY_PUPPET_INVITE_OVERLORD = 1000, —— 傀儡国渴望召唤其宗主国参战

CALL_ALLY_OVERLORD_INVITE_PUPPET = 20, — Desire for an overlord to call its puppet into the war

CALL_ALLY_OVERLORD_INVITE_PUPPET = 20, — 霸主希望召集其傀儡参战的意愿

CALL_ALLY_RELATIVE_INDUSTRY_STRENGTH_THRESHOLD = 1.5, — If our relative industry strength ratio is less than this (compared to all enemies), increase desire to call allies

CALL_ALLY_RELATIVE_INDUSTRY_STRENGTH_THRESHOLD = 1.5, — 若我方相对工业实力比率（与所有敌人相比）低于此数值，则增强召唤盟友的意愿

CALL_ALLY_RELATIVE_ARMY_STRENGTH_THRESHOLD = 1.5, — If our relative army strength ratio is less than this (compared to all enemies), increase desire to call allies

CALL_ALLY_RELATIVE_ARMY_STRENGTH_THRESHOLD = 1.5, —— 若我方相对军力比值（与所有敌人相比）低于此阈值，则增加召唤盟友的意愿

CALL_ALLY_RELATIVE_INDUSTRY_STRENGTH_MAX = 50.0, — Max desire value for relative industry strength (lerping between zero and this based on the threshold)

CALL_ALLY_RELATIVE_INDUSTRY_STRENGTH_MAX = 50.0, — 相对工业实力的最大期望值（根据阈值在零与此值之间线性插值）

CALL_ALLY_RELATIVE_ARMY_STRENGTH_MAX = 100.0, — Max desire value for relative army strength (lerping between zero and this based on the threshold)

CALL_ALLY_RELATIVE_ARMY_STRENGTH_MAX = 100.0, —— 相对军力强度的最大期望值（基于阈值在零与此值之间线性插值）

CALL_ALLY_LOSING_WAR_THRESHOLD = 0.45, — If our war progress is less than this, increase desire to call allies (0.5 is stalemate)

CALL_ALLY_LOSING_WAR_THRESHOLD = 0.45, —— 如果我方战争进展低于此值，则增加召唤盟友的意愿（0.5为僵持状态）

CALL_ALLY_LOSING_WAR_MAX = 100.0, — Max desire value for losing war (lerping between zero and this based on the threshold)

CALL_ALLY_LOSING_WAR_MAX = 100.0, —— 战败时的最大期望值（根据阈值在零与此值之间线性插值）

CALL_ALLY_WAR_LENGTH_NR_MONTHS = 2, — For every month the war has gone on, increase desire this much

CALL_ALLY_WAR_LENGTH_NR_MONTHS = 2, — 战争每持续一个月，相应增加此数值的渴望度

CALL_ALLY_JOINER_HAS_ENEMY_NEIGHBOR = 100, — If the joining country is neighbor to at least one of the enemies, increase desire this much

CALL_ALLY_JOINER_HAS_ENEMY_NEIGHBOR = 100, —— 若加入国与任一敌国相邻，则按此数值增加参战意愿



AI_CHAIN_CALLS_ALLIES = true,				— with this enabled the AI will automatically call AI allies when called into a war (which in turn generates a single popup, this circumvents some potential modfiable scripts with the call ally diplo action, which might be a cause to disable it in some mods

AI_CHAIN_CALLS_ALLIES = true，——启用此选项后，当AI被卷入战争时将自动召唤AI盟友（这会生成一个单独弹窗，此举绕过了部分可能通过召唤盟友外交行动修改的脚本，某些模组可能需要禁用该功能）



MIN_AI_UNITS_PER_TILE_FOR_STANDARD_COHESION = 1.5,	— How many units should we have for each tile along a front in order to switch to standard cohesion (less moving around)

MIN_AI_UNITS_PER_TILE_FOR_STANDARD_COHESION = 1.5, — 每块前线地块需要多少单位才能切换为标准凝聚力模式（减少移动）

MIN_FRONT_SIZE_TO_CONSIDER_STANDARD_COHESION = 12,	— How long should fronts be before we consider switching to standard cohesion (under this, standard cohesion fronts will switch back to relaxed)

MIN_FRONT_SIZE_TO_CONSIDER_STANDARD_COHESION = 12, — 前线需要达到多长才会考虑切换为标准凝聚力（低于此数值，标准凝聚力的前线将切换回宽松模式）



JOIN_ALLY_BASE_DESIRE = 20,					— exactly what it says

JOIN_ALLY_BASE_DESIRE = 20, — 字面意思

JOIN_ALLY_DEMOCRATIC_DESIRE = 50,			— Desire to join ally added for democratic AI

JOIN_ALLY_DEMOCRATIC_DESIRE = 50, — 民主AI加入盟友的意愿值

JOIN_ALLY_NEUTRAL_DESIRE = 25,				— Desire to join ally added for neutral AI

JOIN_ALLY_NEUTRAL_DESIRE = 25, — 为中立AI添加加入盟友的意愿

JOIN_ALLY_FASCIST_DESIRE = -10,				— Desire to join ally added for fascist AI

JOIN_ALLY_FASCIST_DESIRE = -10, —— 为法西斯AI添加的结盟意愿

JOIN_ALLY_COMMUNIST_DESIRE = 75,			— Desire to join ally added for communist AI

加入盟友共产主义愿望 = 75, — 为共产主义AI添加的加入盟友愿望

JOIN_FACTION_BOTH_LOSING = -300,			— Desire to be in a faction when both we and htey are in losing wars

JOIN_FACTION_BOTH_LOSING = -300, — 当我们和他们都在输掉战争时，想要加入派系的意愿

LENDLEASE_FRACTION_OF_PRODUCTION = 0.5,		— Base fraction AI would send as lendlease

LENDLEASE_FRACTION_OF_PRODUCTION = 0.5, —— AI作为租借发送的基础比例

LENDLEASE_FRACTION_OF_STOCKPILE = 0.25,		— Base fraction AI would send as lendlease

LENDLEASE_FRACTION_OF_STOCKPILE = 0.25, — AI作为租借物资发送的基础比例

MINIMUM_EQUIPMENT_TO_ASK_LEND_LEASE = -100,	— AI will accept to lend lease this equipment only if our stockpile is less than that.

最低装备请求租借条件 = -100, —— 只有当我们的库存低于此数值时，AI才会同意租借此类装备。

MINIMUM_CONVOY_TO_ASK_LEND_LEASE = 30,		— AI will accept to lend lease convoys only if our stockpile is less than that (special case because convoy stockpile can’t be negative).

最小请求租借运输船数量 = 30, —— 仅当我方库存低于此数值时，AI才会同意租借运输船（特殊情况下因运输船库存不可为负）。

MINIMUM_FUEL_DAYS_TO_ASK_LEND_LEASE = 2,	— AI will accept to lend lease fuel only if the player have less fuel than this number multiply by his max daily consumption.

MINIMUM_FUEL_DAYS_TO_ASK_LEND_LEASE = 2, —— 只有当玩家的燃料储备低于该数值乘以每日最大消耗量时，AI才会接受燃料租借请求。

MINIMUM_FUEL_DAYS_TO_ACCEPT_LEND_LEASE = 10, — AI will accept to lend lease fuel only if they have more fuel than this number multiply by their max daily consumption. Note that for a GiE asking to its host, we divide this number by 2.

MINIMUM_FUEL_DAYS_TO_ACCEPT_LEND_LEASE = 10, —— 只有当AI拥有的燃料超过此数值与其最大日消耗量的乘积时，才会接受租借燃料的请求。注意：对于向宿主国请求的流亡政府，此数值需除以2。



DEFAULT_SUPPLY_TRUCK_BUFFER_RATIO = 1.5,	— ai will set to truck buffer ratio to this. can be modified by wanted_supply_trucks min_wanted_supply_trucks ai strats

DEFAULT_SUPPLY_TRUCK_BUFFER_RATIO = 1.5，——AI将据此设定卡车缓冲比率。可通过wanted_supply_trucks、min_wanted_supply_trucks及AI策略进行修改。

DEFAULT_SUPPLY_TRAIN_NEED_FACTOR = 1.2, — AI multiplies current train usage by this to determine desired nr of wanted trains. Can be modified by wanted_supply_train min_wanted_supply_trains ai strats.

DEFAULT_SUPPLY_TRAIN_NEED_FACTOR = 1.2, —— AI将当前列车使用量乘以该系数以确定所需列车数量。可通过wanted_supply_train、min_wanted_supply_trains及ai策略进行修改。



POLITICAL_IDEA_MIN_SCORE = 0.1,				— Only replace or add an idea if score is above this score.

POLITICAL_IDEA_MIN_SCORE = 0.1， —— 仅在评分高于此分数时替换或添加想法。

HIGH_COMMAND_ADDED_WEIGHT_FACTOR = 1.10,	— Weight multiplier for high_command advisors over other chosen advisor or idea types

HIGH_COMMAND_ADDED_WEIGHT_FACTOR = 1.10, —— 高层指挥顾问相对于其他选定顾问或理念类型的权重乘数

CHIEF_ADDED_WEIGHT_FACTOR = 2.4,			— Weight multiplier for chief roles over other advisor or idea types

CHIEF_ADDED_WEIGHT_FACTOR = 2.4, — 首领角色相对于其他顾问或理念类型的权重乘数



GARRISON_TEMPLATE_SCORE_IC_FACTOR = 1.0,		— ai uses these defines while calculating garrison template score of a template.

GARRISON_TEMPLATE_SCORE_IC_FACTOR = 1.0, —— AI在计算模板的驻防分数时会使用这些定义。

GARRISON_TEMPLATE_SCORE_MANPOWER_FACTOR = 0.05, — formula is (template_ic * ic_factor + template_manpower * manpower_factor ) / template_supression (lower is better)

GARRISON_TEMPLATE_SCORE_MANPOWER_FACTOR = 0.05, —— 计算公式为（模板工业值*工业系数 + 模板人力*人力系数）/ 模板镇压值（数值越低越好）



ADVISOR_SCORE_TRAIT_MODIFIER_FACTOR = 0.2, — When scoring advisors, factor the score contribution from the advisor’s trait modifiers by this value

ADVISOR_SCORE_TRAIT_MODIFIER_FACTOR = 0.2, ——在评估顾问时，顾问特质修正对评分的贡献将乘以该系数

ADVISOR_SCORE_CHEAPER_IS_BETTER_FACTOR = 0.1, — When scoring advisors, this define scales how much the AI prefers cheaper advisors over more expensive ones. 0.0 means no effect, 0.15 means a cost difference of 100 PP modifies the score by 15 %.

ADVISOR_SCORE_CHEAPER_IS_BETTER_FACTOR = 0.1, —— 在给顾问评分时，此参数决定AI对价格较低顾问的偏好程度。0.0表示无影响，0.15表示100PP的成本差异会使评分调整15%。

ADVISOR_SCORE_CHEAPER_IS_BETTER_MIN = 0.5, — Clamps the above scoring factor to at minimum this value

ADVISOR_SCORE_CHEAPER_IS_BETTER_MIN = 0.5, — 将上述评分因子限制在至少为此值



— stuff related to how the AI evaluates/scores how useful modifiers are

——关于AI如何评估/评分修饰词实用性的相关内容

EVAL_MODIFIER_NON_PERCENT_FACTOR = 0.1, — Multiply non-percent-based modifiers with this to put the values in the approximately same range so they can be compared. (Why we are using 0.1 and not 0.01? No idea…)

EVAL_MODIFIER_NON_PERCENT_FACTOR = 0.1, —— 将非百分比基础的修正因子与此相乘，使数值大致处于同一量级以便比较。（为何使用0.1而非0.01？不清楚…）

EVAL_MODIFIER_UNSPECIFIED_CATEGORY_FACTOR = 0.75, — Arbitrary scoring factor for modifiers the AI doesn’t know how to categorize

EVAL_MODIFIER_UNSPECIFIED_CATEGORY_FACTOR = 0.75, —— 用于AI无法分类的修饰符的任意评分因子

EVAL_MODIFIER_MAX_COMMAND_POWER_FACTOR = 0.01, — Increasing CP cap with x is maybe 100 times less useful than e.g. gaining x more XP per day

EVAL_MODIFIER_MAX_COMMAND_POWER_FACTOR = 0.01, — 相较之下，通过x提升CP上限的效果可能比例如每天多获得x点经验值要低效约百倍



— for positive values of following defines, ai weights will take over of hardcoded ai scoring system

对于以下定义的正值，AI权重将接管硬编码的AI评分系统

MIN_AI_SCORE_TO_MOBILIZATION_LAW_OVERRIDE_HARD_CODED_SCORE = 0.0,

MIN_AI_SCORE_TO_MOBILIZATION_LAW_OVERRIDE_HARD_CODED_SCORE = 0.0

MIN_AI_SCORE_TO_ECONOMY_LAW_OVERRIDE_HARD_CODED_SCORE = 0.0,

MIN_AI_SCORE_TO_ECONOMY_LAW_OVERRIDE_HARD_CODED_SCORE = 0.0

MIN_AI_SCORE_TO_TRADE_LAW_OVERRIDE_HARD_CODED_SCORE = 1000.0,

MIN_AI_SCORE_TO_TRADE_LAW_OVERRIDE_HARD_CODED_SCORE = 1000.0,

MIN_AI_SCORE_TO_ALL_LAWS_OVERRIDE_HARD_CODED_SCORE = 0.0,

MIN_AI_SCORE_TO_ALL_LAWS_OVERRIDE_HARD_CODED_SCORE = 0.0,



AT_WAR_THREAT_FACTOR = 2.0,					— How much increase in threat does AI feel for being in war against someone

AT_WAR_THREAT_FACTOR = 2.0, —— AI因与某方交战而感受到的威胁提升幅度

NEIGHBOUR_WAR_THREAT_FACTOR = 1.10, 		— How much increase in threat does AI feel against neighbours who are at war

NEIGHBOUR_WAR_THREAT_FACTOR = 1.10, — AI对处于战争状态的邻国感受到的威胁增加量

POTENTIAL_ALLY_JOIN_WAR_FACTOR = 100, 		— How much increase in threat does AI feel against neighbours who are allied against one of our enemies

POTENTIAL_ALLY_JOIN_WAR_FACTOR = 100, —— 当邻国与我们某个敌人结盟时，AI感知到的威胁值增加量

POTENTIAL_FUTURE_ENEMY_FACTOR = 100, 		— How much increase in threat does AI feel against neighbours who at war with our allies

POTENTIAL_FUTURE_ENEMY_FACTOR = 100, —— 人工智能对与盟国交战的邻国感受到的威胁增加程度

NEUTRAL_THREAT_PARANOIA = 10,				— How scared neutrals are of everyone

NEUTRAL_THREAT_PARANOIA = 10, —— 中立者对所有人的恐惧程度

DIFFERENT_FACTION_THREAT = 30,				— Threat caused by not being in the same faction

DIFFERENT_FACTION_THREAT = 30, — 因不属于同一阵营而产生的威胁值

MAX_THREAT_FOR_FIRST_YEAR_CIVILIAN_MODE = 60, — above this threshold, ai will leave first year civilian factory mode which bumps it civilian factory scores while building

MAX_THREAT_FOR_FIRST_YEAR_CIVILIAN_MODE = 60，——超过此阈值时，AI将脱离首年民用工厂模式，该模式会在建造时提升其民用工厂评分

PLAN_ATTACK_MIN_ORG_FACTOR_LOW = 0.85,		— Minimum org % for a unit to actively attack an enemy unit when executing a plan

PLAN_ATTACK_MIN_ORG_FACTOR_LOW = 0.85，——执行计划时，单位主动攻击敌方单位所需的最低组织度百分比

PLAN_ATTACK_MIN_STRENGTH_FACTOR_LOW = 0.60,	— Minimum strength for a unit to actively attack an enemy unit when executing a plan

PLAN_ATTACK_MIN_STRENGTH_FACTOR_LOW = 0.60, —— 执行计划时，单位主动攻击敌方单位所需的最低强度系数

PLAN_ATTACK_MIN_ORG_FACTOR_MED = 0.7,		— (LOW,MED,HIGH) corresponds to the plan execution agressiveness level.

PLAN_ATTACK_MIN_ORG_FACTOR_MED = 0.7, — (低,中,高)对应计划执行的激进程度级别。

PLAN_ATTACK_MIN_STRENGTH_FACTOR_MED = 0.50,

PLAN_ATTACK_MIN_STRENGTH_FACTOR_MED = 0.50,

PLAN_ATTACK_MIN_ORG_FACTOR_HIGH = 0.45,

PLAN_ATTACK_MIN_ORG_FACTOR_HIGH = 0.45,

PLAN_ATTACK_MIN_STRENGTH_FACTOR_HIGH = 0.30,

PLAN_ATTACK_MIN_STRENGTH_FACTOR_HIGH = 0.30,

PLAN_FRONTUNIT_DISTANCE_FACTOR = 10.0,		— Factor for candidate units distance to front positions.

PLAN_FRONTUNIT_DISTANCE_FACTOR = 10.0, — 候选单位到前线位置距离的系数。

PLAN_ATTACK_DEPTH_FACTOR = 0.5,				— Factor applied to size or enemy being attacked.

PLAN_ATTACK_DEPTH_FACTOR = 0.5, —— 应用于被攻击目标规模的系数。

PLAN_STEP_COST_LIMIT = 9,					— When stepping to draw a plan this cost makes it break if it hits hard terrain (multiplied by number of desired steps)

PLAN_STEP_COST_LIMIT = 9, —— 当逐步绘制计划时，此成本值会在遇到难以通过的地形时中断（乘以所需步数）

PLAN_STEP_COST_LIMIT_REDUCTION = 3,			— Cost limit is reduced per iteration, making hard terrain less likely to be crossed the further into enemy territory it is

PLAN_STEP_COST_LIMIT_REDUCTION = 3, —— 每迭代一次成本限制降低，使得深入敌境时更难穿越复杂地形

PLAN_MIN_SIZE_FOR_FALLBACK = 50,			— A country with less provinces than this will not draw fallback plans, but rather station their troops along the front

PLAN_MIN_SIZE_FOR_FALLBACK = 50, — 一个省份数量低于此值的国家将不会制定备用计划，而是将部队部署在战线沿线

SEND_VOLUNTEER_EVAL_BASE_DISTANCE = 175.0, — How far away it will evaluate sending volunteers if not a major power

SEND_VOLUNTEER_EVAL_BASE_DISTANCE = 175.0, —— 若非主要强国，评估派遣志愿者的最远距离

SEND_VOLUNTEER_EVAL_MAJOER_POWER = 1.0, 	— How willing major powers are to send volunteers.

SEND_VOLUNTEER_EVAL_MAJOER_POWER = 1.0, — 主要大国派遣志愿军的意愿程度。

SEND_VOLUNTEER_EVAL_CONTAINMENT_FACTOR = 0.1, — How much AI containment factors into its evaluation of sending volunteers.

SEND_VOLUNTEER_EVAL_CONTAINMENT_FACTOR = 0.1, —— AI在评估派遣志愿者时，其遏制因素所占的权重。

GIVE_STATE_CONTROL_MIN_CONTROLLED = 1,		— AI needs to control more than this number of states before considering giving any away

GIVE_STATE_CONTROL_MIN_CONTROLLED = 1, —— AI需要控制超过这个数量的州份后才会考虑放弃任何控制权

GIVE_STATE_CONTROL_MIN_CONTROL_DIFF = 2,	— The difference in number of controlled states compared to war participation needs to be bigger than this for the AI to consider giving a state to a country

GIVE_STATE_CONTROL_MIN_CONTROL_DIFF = 2, —— 被控制州的数量与战争贡献度之差需大于此值，AI才会考虑将某个州让予他国

RELATIVE_STRENGTH_TO_INVADE = 0.08,			— Compares the estimated strength of the country/faction compared to it’s enemies to see if it should invade or stay at home to defend.

RELATIVE_STRENGTH_TO_INVADE = 0.08, ——用于比较国家/派系与其敌人的预估实力，以决定是应该发起入侵还是留守防御。

RELATIVE_STRENGTH_TO_INVADE_DEFENSIVE = 0.4,— Compares the estimated strength of the country/faction compared to it’s enemies to see if it should invade or stay at home to defend, but while being a defensive country.

RELATIVE_STRENGTH_TO_INVADE_DEFENSIVE = 0.4,— 用于比较国家/派系与其对手的预估实力，以决定是应该进攻还是留守防御，但前提是该国属于防御型国家。

GIVE_STATE_CONTROL_BASE_SCORE = 50,			— Base diplo score for giving away control of states

GIVE_STATE_CONTROL_BASE_SCORE = 50, —— 移交州控制权的基础外交分数

GIVE_STATE_CONTROL_DIFF_FACTOR = 2.0,		— Diplo score multiplier for state control compared to war participation difference

GIVE_STATE_CONTROL_DIFF_FACTOR = 2.0, — 国家控制权相对于战争参与度差异的外交分数乘数

GIVE_STATE_CONTROL_NEIGHBOR_SCORE = 20,		— Diplo score for each neighboring state controlled by the target

GIVE_STATE_CONTROL_NEIGHBOR_SCORE = 20, —— 目标控制的每个相邻州的外交分数

GIVE_STATE_CONTROL_NEIGHBOR_ACTOR_SCORE = -5, — Diplo score for each neighboring state that is controlled by the sender

GIVE_STATE_CONTROL_NEIGHBOR_ACTOR_SCORE = -5, ——发送方控制的每个邻近州的外交得分

GIVE_STATE_CONTROL_NEIGHBOR_OTHER_SCORE = 5, — Diplo score for each neighboring state controlled by someone else

GIVE_STATE_CONTROL_NEIGHBOR_OTHER_SCORE = 5, —— 每个由他人控制的邻近州的外交分数

GIVE_STATE_CONTROL_MAX_SCORE_DIST = 600,	— A State that is closer to the recipient capital than this gets a score bonus based on the below value

GIVE_STATE_CONTROL_MAX_SCORE_DIST = 600, —— 若某州距离接收方首都的距离小于此值，则其将根据下方数值获得分数加成

GIVE_STATE_CONTROL_DIST_SCORE_MULT = 0.2,	— Multiplier for the score gained from distance ( GIVE_STATE_CONTROL_MAX_SCORE_DIST - distance ) * this

GIVE_STATE_CONTROL_DIST_SCORE_MULT = 0.2, — 距离得分的乘数（GIVE_STATE_CONTROL_MAX_SCORE_DIST - 距离）* 此值

IRRATIONALITY_LAMBDA = 200,					— Lambda given to Poisson Random function determining if a leader should act a bit irrational

非理性_LAMBDA = 200, — 赋予泊松随机函数的Lambda值，用于决定领导者是否应表现出些许非理性行为

— Value of 200 should give 0.3% chance of Stalin going for instance crazy and conquering all of America

200的值应赋予0.3%的概率，例如斯大林可能发狂并征服整个美洲。

GENERATE_WARGOAL_THREAT_BASELINE = 1.0,	 — The baseline for what the AI considers the world is getting dangerous and we want to generate wargoals with no antagonize value

GENERATE_WARGOAL_THREAT_BASELINE = 1.0, —— 这是AI判断世界局势趋于危险并希望生成无挑衅值战争目标的基准线

GENERATE_WARGOAL_ANTAGONIZE_SCALE = 0.35, — works to scale the AIs antagonize value vs the threat baseline for when it should act on existing claims: threat used for baseline is min_threat - antagonize * scale

GENERATE_WARGOAL_ANTAGONIZE_SCALE = 0.35, — 用于调整AI的敌对值与威胁基线之间的比例关系，决定其何时应对现有宣战理由采取行动：威胁基线计算为 min_threat - antagonize * scale

RESERVE_TO_COMMITTED_BALANCE = 0.3,			— How many reserves compared to number of committed divisions in a combat (1.0 = as many as reserves as committed)

RESERVE_TO_COMMITTED_BALANCE = 0.3, —— 战斗中预备队与投入师数量的比例（1.0表示预备队与投入师数量相同）

DIPLOMACY_COMMUNIST_NOT_NEIGHBOUR = -10,	— Communists want to stay consolidated with their influence

DIPLOMACY_COMMUNIST_NOT_NEIGHBOUR = -10, — 共产主义者希望保持其影响力的巩固

MAIN_ENEMY_FRONT_IMPORTANCE = 4.0,			— How much extra focus the AI should put on who it considers to be its current main enemy.

MAIN_ENEMY_FRONT_IMPORTANCE = 4.0, — 人工智能应额外投入多少注意力在其认定的当前主要敌人上。

EASY_TARGET_FRONT_IMPORTANCE = 7.5,			— How much extra focus the AI should put on who it considers to be the easiest target.

EASY_TARGET_FRONT_IMPORTANCE = 7.5, — AI应对其认为最容易的目标额外投入多少关注度。

AI_FRONT_MOVEMENT_FACTOR_FOR_READY = 0.25,	— If less than this fraction of units on a front is moving, AI sees it as ready for action

AI_FRONT_MOVEMENT_FACTOR_FOR_READY = 0.25, —— 若前线移动单位比例低于此值，AI视其为可行动状态

MICRO_POCKET_SIZE = 4,						— Pockets with a size equal to or lower than this will be mocroed by the AI, for efficiency.

MICRO_POCKET_SIZE = 4, —— 口袋大小等于或小于此值的将被AI微缩化处理，以提高效率。

DECLARE_WAR_MIN_FRONT_SIZE_TO_CONSIDER_FOR_NOT_READY = 0.04, — fronts with less armies than this ratio compared to total number of armies are ignored when ai checks if it is ready for war

DECLARE_WAR_MIN_FRONT_SIZE_TO_CONSIDER_FOR_NOT_READY = 0.04, — 前线部队数量若低于全军比例此值，在AI判断是否备战时会忽略该前线

POCKET_DISTANCE_MAX = 40000,				— shortest square distance we bother about chasing pockets

POCKET_DISTANCE_MAX = 40000, — 我们考虑追踪口袋的最小平方距离

VP_MAX_PROVINCE_WORTH = 500,				— Max worth a province can have to a defensive order

VP_MAX_PROVINCE_WORTH = 500, — 防御指令对一个省份的最高价值上限

VP_LEVEL_IMPORTANCE_MEDIUM = 10,			— Victory points with values higher than or equal to this are considered to be of medium importance.

VP_LEVEL_IMPORTANCE_MEDIUM = 10, —— 胜利点数大于或等于此值的将被视为中等重要性。



— these are all 3 numbers for min, desired, max unit need weights for area defense

— 这些是用于区域防御的最小、期望和最大单位需求权重的三个数值

AREA_DEFENSE_CAPITAL_PEACE_VP_WEIGHT = { 1.0, 1.0, 1.0 },

区域防御首都和平VP权重 = { 1.0, 1.0, 1.0 },

AREA_DEFENSE_CAPITAL_VP_WEIGHT = { 0.0, 1.0, 2.0 },

AREA_DEFENSE_CAPITAL_VP_WEIGHT = { 0.0, 1.0, 2.0 },

AREA_DEFENSE_HOME_VP_WEIGHT = { 0.0, 0.5, 1.0 },

AREA_DEFENSE_HOME_VP_WEIGHT = { 0.0, 0.5, 1.0 },

AREA_DEFENSE_OTHER_VP_WEIGHT = { 0.0, 0.0, 1.0 },

区域防御其他VP权重 = { 0.0, 0.0, 1.0 },



AREA_DEFENSE_CAPITAL_PEACE_COAST_WEIGHT = { 0.0, 0.0, 0.0 },

AREA_DEFENSE_CAPITAL_PEACE_COAST_WEIGHT = { 0.0, 0.0, 0.0 },

AREA_DEFENSE_CAPITAL_COAST_WEIGHT = { 0.0, 0.2, 0.7 },

AREA_DEFENSE_CAPITAL_COAST_WEIGHT = { 0.0, 0.2, 0.7 },

AREA_DEFENSE_HOME_COAST_WEIGHT = { 0.0, 0.1, 0.5 },

AREA_DEFENSE_HOME_COAST_WEIGHT = { 0.0, 0.1, 0.5 },

AREA_DEFENSE_OTHER_COAST_WEIGHT = { 0.0, 0.0, 0.0 },

AREA_DEFENSE_OTHER_COAST_WEIGHT = { 0.0, 0.0, 0.0 },



AREA_DEFENSE_CAPITAL_PEACE_BASE_WEIGHT = { 0.0, 0.0, 0.0 },

AREA_DEFENSE_CAPITAL_PEACE_BASE_WEIGHT = { 0.0, 0.0, 0.0 },

AREA_DEFENSE_CAPITAL_BASE_WEIGHT = { 0.5, 1.0, 1.5 },

AREA_DEFENSE_CAPITAL_BASE_WEIGHT = { 0.5, 1.0, 1.5 },

AREA_DEFENSE_HOME_BASE_WEIGHT = { 0.5, 1.0, 1.0 },

区域防御主基地权重 = { 0.5, 1.0, 1.0 },

AREA_DEFENSE_OTHER_BASE_WEIGHT = { 0.5, 0.5, 1.0 },

区域防御其他基地权重 = { 0.5, 0.5, 1.0 },



ESTIMATED_CONVOYS_PER_DIVISION = 6,			— Not always correct, but mainly used to make sure AI does not go crazy

ESTIMATED_CONVOYS_PER_DIVISION = 6, —— 并不总是准确，但主要用于确保AI不会失控

ENTRENCHMENT_WEIGHT = 2.0,					— AI should favour units with less entrenchment when assigning units around.

ENTRENCHMENT_WEIGHT = 2.0, —— AI在分配单位时应优先考虑战壕防御较弱的单位。

FRONT_TERRAIN_DEFENSE_FACTOR = 3.75, — Multiplier applied to unit defense modifier for terrain on front province multiplied by terrain importance

FRONT_TERRAIN_DEFENSE_FACTOR = 3.75, —— 应用于前省份地形防御修正的乘数，乘以地形重要性

FRONT_TERRAIN_ATTACK_FACTOR = 5.0,			— Multiplier applied to unit attack modifier for terrain on enemy front province multiplied by terrain importance

FRONT_TERRAIN_ATTACK_FACTOR = 5.0, — 对敌方前沿省份地形攻击修正的乘数，乘以地形重要性



BASE_DISTANCE_TO_CARE = 600.0,				— Countries that are too far away are less interesting in diplomacy

BASE_DISTANCE_TO_CARE = 600.0, — 距离过远的国家在外交上吸引力较低

MIN_FORCE_RATIO_TO_PROTECT = 0.5,			— Tiny countries should not feel protective or really large ones

MIN_FORCE_RATIO_TO_PROTECT = 0.5, —— 小国不应感到需要保护，大国亦然



ORG_UNIT_STRONG = 0.75,						— Organization % for unit to be considered strong

ORG_UNIT_STRONG = 0.75, — 被视为强大单位的组织百分比

STR_UNIT_STRONG = 0.70,						— Strength (equipment) % for unit to be considered strong

STR_UNIT_STRONG = 0.70, — 力量（装备）%使单位被视为强大



ORG_UNIT_WEAK = 0.25,						— Organization % for unit to be considered weak

ORG_UNIT_WEAK = 0.25, — 组织单位被视为薄弱时的百分比

STR_UNIT_WEAK = 0.30,						— Strength (equipment) % for unit to be considered weak

STR_UNIT_WEAK = 0.30, — 单位被视为脆弱时的力量（装备）百分比



ORG_UNIT_NORMAL = 0.35,						— Organization % for unit to be considered normal

ORG_UNIT_NORMAL = 0.35, — 组织单位被视为正常的百分比

STR_UNIT_NORMAL = 0.4,						— Strength (equipment) % for unit to be considered normal

STR_UNIT_NORMAL = 0.4, — 单位被视为正常状态时的强度（装备）百分比



PLAN_FACTION_STRONG_TO_EXECUTE = 0.50,		— % or more of units in an order to consider executing the plan

PLAN_FACTION_STRONG_TO_EXECUTE = 0.50，——执行计划需达到的指令中单位占比或更高百分比

PLAN_FACTION_NORMAL_TO_EXECUTE = 0.65,		— % or more of units in an order to consider executing the plan

PLAN_FACTION_NORMAL_TO_EXECUTE = 0.65, — 订单中单位占比达到或超过此百分比时考虑执行计划

PLAN_FACTION_WEAK_TO_ABORT = 0.65,			— % or more of units in an order to consider executing the plan

PLAN_FACTION_WEAK_TO_ABORT = 0.65, — 执行计划前需达到命令中单位的百分比或更高比例

PLAN_AVG_PREPARATION_TO_EXECUTE = 0.5,		— % or more average plan preparation before executing

PLAN_AVG_PREPARATION_TO_EXECUTE = 0.5, — % 或更高的执行前平均方案准备率



REDEPLOY_DISTANCE_VS_ORDER_SIZE = 1.0,		— Factor applied to the path length of a unit compared to length of an order to determine if it should use strategic redeployment

REDEPLOY_DISTANCE_VS_ORDER_SIZE = 1.0, ——应用于单位路径长度与命令长度之比的因素，用于判断是否应使用战略重新部署



FORT_LEVEL_TO_CONSIDER_HIGHLY_FORTIFIED = 1,	— Provinces above this level of fortification will be considered highly fortified by plan evaluation

FORT_LEVEL_TO_CONSIDER_HIGHLY_FORTIFIED = 1, — 计划评估中，堡垒等级高于此级别的省份将被视为高度设防

PLAN_VALUE_FORTIFICATION_LEVEL_MAX_PENALTY = -0.5,	—Max plan value penalty from fortification. This is scaled by number of provinces along a frontline, over the number which exceed the fort value value above

PLAN_VALUE_FORTIFICATION_LEVEL_MAX_PENALTY = -0.5, ——来自防御工事的最大计划值惩罚。该数值根据前线省份数量超出防御工事值上限的部分进行比例缩放



MAX_ALLOWED_NAVAL_DANGER = 80,				— AI will ignore naval paths that has danger value of above this threshold while assigning units

MAX_ALLOWED_NAVAL_DANGER = 80, —— AI在分配单位时将忽略海上危险值超过此阈值的路径

TRANSFER_DANGER_HOSTILE_SHIPS = 50, 		— max danger from complete enemy naval supriority over ai in an area

TRANSFER_DANGER_HOSTILE_SHIPS = 50, — 最大危险值，表示AI在某一区域完全丧失制海权时来自敌方舰队的威胁



EXPORT_RESOURCE_TRADE_NEED_IMPORTANCE = 0.5, — how important is each lost resource to overexport for trade law selection

EXPORT_RESOURCE_TRADE_NEED_IMPORTANCE = 0.5, —— 每种因过度出口而损失的资源对贸易法选择的重要性



OPERATION_EQUIPMENT_NEED_PRODUCTION_MULT = 1.0, — equipment requests for operations will be added the equipment needs that ai considers while assigning factories to production

OPERATION_EQUIPMENT_NEED_PRODUCTION_MULT = 1.0, — 装备需求将影响AI在分配工厂生产时的考量，操作装备请求会叠加此数值



MIN_FUEL_RATIO_TO_NOT_IGNORE_STRIKE_FORCE_COST = 0.0, — ai will still assign strike forces unless fuel ratio drops below this one

MIN_FUEL_RATIO_TO_NOT_IGNORE_STRIKE_FORCE_COST = 0.0, —— 除非燃油比例低于此值，否则AI仍会分配打击力量

MIN_FUEL_RATIO_TO_NOT_IGNORE_INVASION_SUPPORT_COST = 0.0, — ai will still naval invasion support forces unless fuel ratio drops below this one

MIN_FUEL_RATIO_TO_NOT_IGNORE_INVASION_SUPPORT_COST = 0.0, —— 除非燃油比率低于此值，否则AI仍将为海军登陆提供支援部队



ENEMY_HOME_AREA_RATIO_TO_DISABLE_INVASIONS = 0.3, — if we are fighting against an enemy home area from our home area and if the enemy area is larger than this ratio, non strategy invasions are disabled

ENEMY_HOME_AREA_RATIO_TO_DISABLE_INVASIONS = 0.3, ——若我们在己方领地对抗敌方主区域，且敌方区域面积大于此比例时，将禁用非战略入侵行为



HOURS_BETWEEN_ENCIRCLEMENT_DISCOVERY = 72,	— Per army, interval in hours between refresh of which provinces it considers make up potential encirclement points

HOURS_BETWEEN_ENCIRCLEMENT_DISCOVERY = 72， —— 每支部队，其重新评估哪些省份构成潜在包围点的小时间隔



FASCISTS_BEFRIEND_FASCISTS = 10,

法西斯分子与法西斯分子为伍 = 10,

FASCISTS_BEFRIEND_DEMOCRACIES = -25,

法西斯主义者与民主国家交好 = -25,

FASCISTS_BEFRIEND_COMMUNISTS = -25,

法西斯主义者结交共产党人 = -25,

FASCISTS_ALLY_FASCISTS = 0,

法西斯主义者_同盟_法西斯主义者 = 0,

FASCISTS_ALLY_DEMOCRACIES = -100,

法西斯主义者_盟友_民主国家 = -100,

FASCISTS_ALLY_COMMUNISTS = -100,

法西斯主义者与共产主义者结盟 = -100,

FASCISTS_ANTAGONIZE_FASCISTS = -10,

法西斯分子对抗法西斯分子 = -10,

FASCISTS_ANTAGONIZE_DEMOCRACIES = 100,

法西斯主义者对抗民主国家 = 100,

FASCISTS_ANTAGONIZE_COMMUNISTS = 100,

法西斯主义者对抗共产主义者 = 100,

DEMOCRACIES_BEFRIEND_FASCISTS = -25,

民主国家与法西斯分子交好 = -25,

DEMOCRACIES_BEFRIEND_DEMOCRACIES = 0,

民主国家间友好相处 = 0,

DEMOCRACIES_BEFRIEND_COMMUNISTS = -25,

民主国家与共产党交好 = -25,

DEMOCRACIES_ALLY_FASCISTS = -50,

民主国家_盟友_法西斯主义者 = -50,

DEMOCRACIES_ALLY_DEMOCRACIES = 0,

民主国家_盟友_民主国家 = 0,

DEMOCRACIES_ALLY_COMMUNISTS = -50,

民主国家_盟友_共产主义者 = -50,

DEMOCRACIES_ANTAGONIZE_FASCISTS = 0,

民主国家对抗法西斯分子 = 0,

DEMOCRACIES_ANTAGONIZE_DEMOCRACIES = -25,

民主国家间的敌对 = -25,

DEMOCRACIES_ANTAGONIZE_COMMUNISTS = 0,

民主国家对抗共产党 = 0,

COMMUNISTS_BEFRIEND_FASCISTS = -25,

共产党人结交法西斯分子 = -25,

COMMUNISTS_BEFRIEND_DEMOCRACIES = -25,

共产主义者与民主政体友好度 = -25,

COMMUNISTS_BEFRIEND_COMMUNISTS = 25,

共产主义者互助共产主义者 = 25,

COMMUNISTS_ALLY_FASCISTS = -100,

共产主义者_同盟_法西斯主义者 = -100,

COMMUNISTS_ALLY_DEMOCRACIES = -50,

共产主义者_盟友_民主政体 = -50,

COMMUNISTS_ALLY_COMMUNISTS = 0,

共产主义者_盟友_共产主义者 = 0,

COMMUNISTS_ANTAGONIZE_FASCISTS = 100,

共产主义者对抗法西斯分子 = 100,

COMMUNISTS_ANTAGONIZE_DEMOCRACIES = 10,

共产主义者对抗民主国家 = 10,

COMMUNISTS_ANTAGONIZE_COMMUNISTS = -10,

共产主义者_对抗_共产主义者 = -10,



TENSION_MIN_FOR_GUARANTEE_VS_MINOR = 10, — for non faction people AI will not consider you worth guaranteeing below this

TENSION_MIN_FOR_GUARANTEE_VS_MINOR = 10, ——对于非派系成员，AI在此数值以下不会认为你值得提供保障



NUM_AI_MESSAGES = 10,				— Set to whatever category has the highest number of messages

NUM_AI_MESSAGES = 10, —— 设置为消息数量最多的类别



DIPLOMACY_FACTION_WAR_WANTS_HELP = 50,	— Desire to send to nations to join a faction if you are at war

DIPLOMACY_FACTION_WAR_WANTS_HELP = 50, —— 当处于战争状态时，希望派遣国家加入阵营的意愿

DIPLOMACY_FACTION_CIVILWAR_WANTS_HELP = -50,

DIPLOMACY_FACTION_CIVILWAR_WANTS_HELP = -50,

FACTION_UNSTABLE_ACCEPTANCE = -100,

FACTION_UNSTABLE_ACCEPTANCE = -100,

DIPLOMACY_AT_WAR_WITH_ALLY_RELUCTANCE = -1000,

外交_与盟友开战的不情愿 = -1000,

DIPLOMACY_FACTION_JOIN_COUP_INITIATOR_BONUS = 70,	— If a country initiated coup on an another country, civil war revolter is more likely to join initiator’s faction

DIPLOMACY_FACTION_JOIN_COUP_INITIATOR_BONUS = 70, —— 若某国对另一国发动政变，内战叛乱方更可能加入发起国的阵营



SHIPS_PRODUCTION_BASE_COST = 10000,					— Used by the AI to normalize IC values when picking what ship to build.

SHIPS_PRODUCTION_BASE_COST = 10000, —— 用于AI在选择建造何种舰船时标准化工业产能值。

NEEDED_NAVAL_FACTORIES_EXPENSIVE_SHIP_BONUS = 12, — Amount of naval yards you need to get a bonus to building really expensive ships

所需海军工厂昂贵舰船加成 = 12, — 获得建造极其昂贵舰船加成所需的海军船厂数量



FORTIFIED_RATIO_TO_CONSIDER_A_FRONT_FORTIFIED = 0.5, — ai will consider a front fortified if this ratio of provinces has fort

FORTIFIED_RATIO_TO_CONSIDER_A_FRONT_FORTIFIED = 0.5, —— 若该比例省份设有要塞，AI将视前线为坚固防线

HEAVILY_FORTIFIED_RATIO_TO_CONSIDER_A_FRONT_FORTIFIED = 0.5, — ai will consider a front super fortified if this ratio of provinces has lots of forts

HEAVILY_FORTIFIED_RATIO_TO_CONSIDER_A_FRONT_FORTIFIED = 0.5, —— 若该比例省份拥有大量要塞，AI将视该前线为超级强化防线

FORTIFIED_MIN_ORG_FACTOR_TO_CONSIDER_A_FRONT_FORTIFIED = 0.2, — ai will treat fortified provinces as unfortified if no unit in that province has an organization factor at least this high

FORTIFIED_MIN_ORG_FACTOR_TO_CONSIDER_A_FRONT_FORTIFIED = 0.2, —— 如果该省份中没有任何单位的组织因子至少达到此值，AI将视其为未设防省份



DESPERATE_AI_MIN_UNIT_ASSIGN_TO_ESCAPE = 0,			— AI will assign at least this amount of units to break from desperate situations

DESPERATE_AI_MIN_UNIT_ASSIGN_TO_ESCAPE = 0, — 人工智能将至少分配这么多单位以摆脱绝望境地



DESPERATE_AI_WEAK_UNIT_STR_LIMIT = 0.35,					— ai will increase number of units assigned to break from desperate situations when units are start falling lower than this str limit

DESPERATE_AI_WEAK_UNIT_STR_LIMIT = 0.35, — 当单位实力开始低于此限制时，AI会增加分配用于突破绝望局面的单位数量

DESPERATE_AI_MIN_ORG_BEFORE_ATTACK = 0.3,					— ai will wait for this much org to attack an enemy prov in desperate situations

DESPERATE_AI_MIN_ORG_BEFORE_ATTACK = 0.3, —— 在绝望情况下，AI会等待组织度达到此值才会攻击敌方省份

DESPERATE_AI_MIN_ORG_BEFORE_MOVE = 0.06,					— ai will wait for this much org to move in desperate situations

DESPERATE_AI_MIN_ORG_BEFORE_MOVE = 0.06, —— 在绝望情况下，AI会等待达到此组织度再移动

DESPERATE_ATTACK_WITHOUT_ORG_WHEN_NO_ORG_GAIN = 120,		— if ai can’t regain enough org to attack in this many hours, it will go truly desperate and attack anyway (still has to wait for move org)

绝望攻击_无组织度时的最低等待小时数 = 120, —— 若AI在此指定小时数内无法恢复足够的组织度发起进攻，将陷入彻底绝望状态强行攻击（仍需等待移动组织度恢复）



MAX_REQUEST_EXPEDITIONARIES_ARMY_RATIO = 0.3,				— AI will not accept expeditionary requests if its expeditions are above this ratio

MAX_REQUEST_EXPEDITIONARIES_ARMY_RATIO = 0.3, —— 如果AI的远征军比例超过此数值，将不会接受远征请求

CASUALTY_RATIO_TO_PULL_EXPEDITIONARIES_BACK = 0.1,			— AI will pull expeditioniries back if its casualties is aboce this ratio compared to their total deployed manpower

撤回远征军的伤亡比率阈值 = 0.1, —— 当AI远征军伤亡人数超过其部署总兵力的此比例时，将撤回部队

CASUALTY_RATIO_TO_NOT_SEND_EXPEDITIONARIES = 0.05,			— AI will not send expeditioniries if its casualties is aboce this ratio compared to their total deployed manpower

CASUALTY_RATIO_TO_NOT_SEND_EXPEDITIONARIES = 0.05, —— 当AI的伤亡比例超过其总部署人力的这一比率时，将不再派遣远征军



SURRENDER_LEVEL_TO_PULL_EXPEDITIONARIES_BACK = 0.3,			— AI will pull expeditioniries back if its surrender level is above this ratio

SURRENDER_LEVEL_TO_PULL_EXPEDITIONARIES_BACK = 0.3, — 当AI的投降水平超过此比例时，将撤回远征军

SURRENDER_LEVEL_TO_NOT_SEND_EXPEDITIONARIES = 0.15,			— AI will not send expeditioniries if its surrender level is above this ratio

SURRENDER_LEVEL_TO_NOT_SEND_EXPEDITIONARIES = 0.15, — 若投降程度超过此比例，AI将不会派遣远征军



EXPEDITIONARY_CASUALTY_DECAY_RATIO = 0.3333,				— expeditionary manpower lost will decay by thousands daily by this ratio (compared to deployed manpower)

远征军伤亡衰减比例 = 0.3333, —— 远征军人力损失将按此比例（相对于部署人力）每日以千人为单位递减

NUM_DAYS_TO_PULL_EXPEDITIONARIES_BACK = 14,					— AI will pull units back from non-ai players after waiting this days if things are not going well for its units

NUM_DAYS_TO_PULL_EXPEDITIONARIES_BACK = 14, —— 如果AI单位的行动进展不顺，AI将在此天数后从非AI玩家处撤回部队



ACCESS_SCORE_FOR_DEMOCRATIC_COUNTRIES = 500,				— democracies gives each other access if they have a common enemy

民主国家互访分数 = 500, —— 民主国家间若拥有共同敌人则相互开放访问权限



AI_AIR_MISSION_COVERAGE_TO_STAY_PUT = 0.5,					— AI will not rebase air wings on missions if their new mission target exceeds this percentage of region coverage

AI_AIR_MISSION_COVERAGE_TO_STAY_PUT = 0.5, — 如果新任务目标超出该区域覆盖率的百分比，AI将不会重新部署航空联队执行任务



ACCESS_SCORE_PENALTY_PER_EXISTING_ACCESS_AT_WAR = 250,		— each access reduces the desire of next access

ACCESS_SCORE_PENALTY_PER_EXISTING_ACCESS_AT_WAR = 250, — 每次已有访问会降低下一次访问的意愿值

ACCESS_SCORE_PENALTY_PER_EXISTING_ACCESS = 500,				— each access reduces the desire of next access

每次已有访问将降低下次访问的意愿，惩罚分值为500。

NAVAL_ACCESS_SCORE_PENALTY_PER_EXISTING_ACCESS_AT_WAR = 150,

NAVAL_ACCESS_SCORE_PENALTY_PER_EXISTING_ACCESS_AT_WAR = 150,

NAVAL_ACCESS_SCORE_PENALTY_PER_EXISTING_ACCESS = 250,

NAVAL_ACCESS_SCORE_PENALTY_PER_EXISTING_ACCESS = 250,



NAVAL_SUPREMACY_WEIGHT_PER_DIVISION_ON_INVASION_ORDER = 6,	— adds to supremacy requests for regions with active or pending naval invasions

NAVAL_SUPREMACY_WEIGHT_PER_DIVISION_ON_INVASION_ORDER = 6, ——为活跃或待处理海军入侵区域增加制海权需求时，每支部队的权重值



TOO_INSIGNIFICANT_ARMY_RATIO_BEGIN = 0.75,					— if army ratio is of a country is larger than this threshold, it will be less reluctant to accept certain diplo actions

TOO_INSIGNIFICANT_ARMY_RATIO_BEGIN = 0.75, —— 若某国军队比例超过此阈值，则其接受特定外交行动的意愿将降低

TOO_INSIGNIFICANT_MAX_PENALTY = 350,						— max penalty that will be applied for thinking a country is too insignificant

TOO_INSIGNIFICANT_MAX_PENALTY = 350, — 认为一个国家过于微不足道时将施加的最大惩罚值



— Calculating wanted nr of divisions

— 计算所需的分割数量

WANTED_UNITS_INDUSTRY_FACTOR = 1.60, — How many units a country wants is partially based on how much military industry that is available

WANTED_UNITS_INDUSTRY_FACTOR = 1.60, —— 一个国家所需的军事单位数量部分取决于其可用的军事工业规模

WANTED_UNITS_THREAT_BASE = 0.7, — If no threat, multiply min wanted units by this

WANTED_UNITS_THREAT_BASE = 0.7, — 若无威胁，最小通缉单位数乘以该值

WANTED_UNITS_THREAT_MAX = 6.0, — Normalized threat is clamped to this

WANTED_UNITS_THREAT_MAX = 6.0, —— 归一化威胁值上限设定为此数值

WANTED_UNITS_WAR_THREAT_FACTOR = 1.15, — Factor threat with this if country is at war. this value is overriden by the value in ideology database if that value exceedes this.

WANTED_UNITS_WAR_THREAT_FACTOR = 1.15, —— 若国家处于战争状态，则用此系数调整威胁值。若意识形态数据库中的数值超过此值，则优先采用数据库中的数值。

WANTED_UNITS_DANGEROUS_NEIGHBOR_FACTOR = 1.15, — Factor if has dangerous neighbor

WANTED_UNITS_DANGEROUS_NEIGHBOR_FACTOR = 1.15, —— 若存在危险邻国时的系数

WANTED_UNITS_MANPOWER_DIVISOR = 21000, — Normalizing divisor for AI manpower. (for each x max available manpower, they want one division)

WANTED_UNITS_MANPOWER_DIVISOR = 21000, —— AI人力标准化除数。（每x最大可用人力对应期望组建一个师）

WANTED_UNITS_WEIGHT_FRONTS_WANT = 0.35, — Weight of front needs when computing final nr wanted units

WANTED_UNITS_WEIGHT_FRONTS_WANT = 0.35, —— 计算最终所需单位数时前方需求的权重

WANTED_UNITS_WEIGHT_FACTORIES = 0.45, — Weight of military factories when computing final nr wanted units

所需单位权重工厂数 = 0.45, ——计算最终所需单位数量时军事工厂的权重

WANTED_UNITS_WEIGHT_MANPOWER = 0.3, — Weight of manpower availability when computing final nr wanted units

WANTED_UNITS_WEIGHT_MANPOWER = 0.3, — 计算最终所需单位数量时人力可用性的权重

WANTED_UNITS_MIN_DEFENCE_FACTOR = 0.4,						— Factor on units required for min defence

WANTED_UNITS_MIN_DEFENCE_FACTOR = 0.4, — 最低防御所需单位系数

— End of calculating wanted nr of divisions

——计算所需分区数结束



WANTED_UNITS_MAX_WANTED_CAP = 500,	— Maximum wanted divisions for a country. This can be exceeded by certain hardcoded multipliers, but not by base calculation logic.

WANTED_UNITS_MAX_WANTED_CAP = 500, — 国家最大通缉部队数量。某些硬编码乘数可突破此限制，但基础计算逻辑无法超越。



WANTED_LAND_PLANES_PER_BASE_CAPACITY_FACTOR = 1,	— Scales how many land-based planes the AI want per air base space (excluding carriers).

WANTED_LAND_PLANES_PER_BASE_CAPACITY_FACTOR = 1, —— 调整AI每个空军基地空间（不包括航母）期望配置的陆基飞机数量比例系数。

WANTED_LAND_PLANES_PER_DIVISION = 20,				— How many land-based planes the AI want for each division it wants.

WANTED_LAND_PLANES_PER_DIVISION = 20, —— AI希望为每个所需师配备的陆基飞机数量。

WANTED_LAND_PLANES_TOTAL_MAX_PER_DIVISION = 100,	— The max total number of land-based planes the AI want.

WANTED_LAND_PLANES_TOTAL_MAX_PER_DIVISION = 100, —— AI期望拥有的陆基飞机最大总数。



WANTED_CARRIER_PLANES_PER_CARRIER_CAPACITY_FACTOR = 1.5,					— Scales how many carrier planes the AI want per carrier deck space.

WANTED_CARRIER_PLANES_PER_CARRIER_CAPACITY_FACTOR = 1.5, —— 调整AI期望每单位航母甲板空间配置的舰载机数量比例系数。

WANTED_CARRIER_PLANES_PER_CARRIER_CAPACITY_IN_PRODUCTION_FACTOR = 1,	— Scales how many carrier planes the AI want per deck space of carriers in production.

WANTED_CARRIER_PLANES_PER_CARRIER_CAPACITY_IN_PRODUCTION_FACTOR = 1, —— 调整AI在生产航母时，期望每单位甲板空间配备的舰载机数量比例系数。

CARRIER_CAPACITY_IN_PRODUCTION_MAX_DAYS_LEFT_TO_INCLUDE_FACTOR = 365,	— Carriers in production that will take more days to complete than this value will be ignored when calculating the above.

CARRIER_CAPACITY_IN_PRODUCTION_MAX_DAYS_LEFT_TO_INCLUDE_FACTOR = 365, —— 在生产中的承运商，若完成所需天数超过此值，则在上述计算中将不予考虑。



START_TRAINING_EQUIPMENT_LEVEL = 0.40, — ai will not start to train if equipment drops below this level

START_TRAINING_EQUIPMENT_LEVEL = 0.40, —— 若装备水平低于此值，AI将不会开始训练

STOP_TRAINING_EQUIPMENT_LEVEL = 0.30, — ai will not train if equipment drops below this level

STOP_TRAINING_EQUIPMENT_LEVEL = 0.30, — 当装备水平低于此值时，AI将停止训练

START_TRAINING_SUPPLY_LEVEL = 0.40, — ai will not start to train if supply ratio drops below this level

开始训练补给水平 = 0.40, —— 当补给比例低于此水平时AI将不会开始训练

STOP_TRAINING_SUPPLY_LEVEL = 0.30, — ai will not train if supply ratio drops below this level

STOP_TRAINING_SUPPLY_LEVEL = 0.30, — 当补给比例低于此水平时，AI将停止训练

STOP_TRAINING_FULLY_TRAINED_FACTOR = 0.95, — ai will not train if at least this ratio of divisions in the army are fully trained

STOP_TRAINING_FULLY_TRAINED_FACTOR = 0.95，——当军队中至少有该比例的师完成训练时，AI将停止训练。



BUILD_REFINERY_LACK_OF_RESOURCE_MODIFIER = 0.003,	— How much lack of resources are worth when evaluating what to build.

BUILD_REFINERY_LACK_OF_RESOURCE_MODIFIER = 0.003, —— 在评估建造什么时，资源匮乏的价值衡量标准。



DIVISION_DESIGN_MAX_FAILED_DAYS = 60,					— max days we keep track of since failure of a template design update

DIVISION_DESIGN_MAX_FAILED_DAYS = 60, —— 模板设计更新失败后我们记录的最大天数



DIVISION_MATCH_ROLE_BOOST_FACTOR = 1.2, — When finding closest matching existing template to a target template, boost the score by this much if the template also has the correct role

DIVISION_MATCH_ROLE_BOOST_FACTOR = 1.2，——在为目标模板寻找最匹配的现有模板时，若该模板同时具备正确的角色，则按此幅度提升匹配分数



EQUIPMENT_DESIGN_MAX_FAILED_DAYS = 60,					— max days we keep track of since failure of an equipment design update

EQUIPMENT_DESIGN_MAX_FAILED_DAYS = 60, — 设备设计更新失败后我们跟踪记录的最大天数



UPGRADE_DIVISION_RELUCTANCE = 7,					— How often to consider upgrading to new templates for units in the field

UPGRADE_DIVISION_RELUCTANCE = 7, —— 战场上单位考虑升级至新模板的频率

UPGRADE_PERCENTAGE_OF_FORCES = 0.03,				— How big part of the army that should be considered for upgrading

UPGRADE_PERCENTAGE_OF_FORCES = 0.03, —— 应被视为升级的军队比例有多大

REMOVE_OBSOLETE_TEMPLATE_DAYS = 180, — Remove obsolete and unused templates if they have been marked as obsolete for x days. Non-positive value means “never remove”.

REMOVE_OBSOLETE_TEMPLATE_DAYS = 180，——若模板被标记为废弃且超过指定天数（x天）未被使用，则予以移除。非正数值表示“永不移除”。



REFIT_SHIP_RELUCTANCE = 28,							— How often to consider refitting to new equipment variants for ships in the field

REFIT_SHIP_RELUCTANCE = 28, — 控制舰队在实战中考虑更换新型装备变体的频率

REFIT_SHIP_PERCENTAGE_OF_FORCES = 0.1,				— How big part of the navy that should be considered for refitting

REFIT_SHIP_PERCENTAGE_OF_FORCES = 0.1, —— 海军中应考虑进行改装的部分比例大小



NAVY_PREFERED_MAX_SIZE = 25,						— AI will generally attempt to merge fleets into this size, but as a soft limit.

NAVY_PREFERED_MAX_SIZE = 25，——AI通常会尝试将舰队合并至该规模，但作为软性限制。

INVASION_COASTAL_PROVS_PER_ORDER = 24,				— AI will consider one extra invasion per number of provinces stated here (num orders = total coast / this)

INVASION_COASTAL_PROVS_PER_ORDER = 24, — AI将根据此处设定的省份数量额外考虑一次入侵（订单数 = 总海岸线 / 该数值）

MIN_INVASION_AREA_SIZE_FOR_FLOATING_HARBORS = 15, — AI will consider using floating harbors for naval invasion if invasion area is larger than this many provinces

MIN_INVASION_AREA_SIZE_FOR_FLOATING_HARBORS = 15, ——当入侵区域大于此省份数量时，AI会考虑为海军入侵使用浮动港口



CONVOY_NEED_SAFETY_BUFFER = 1.30,					— AI will try and keep 15% more convoys than what it needs.

CONVOY_NEED_SAFETY_BUFFER = 1.30, —— AI会尝试保持比实际需求多15%的运输船队数量。

REGION_THREAT_PER_SUNK_CONVOY = 25,					— Threat value per convoy sunk in a region. Decays over time.

REGION_THREAT_PER_SUNK_CONVOY = 25, — 区域内每支被击沉运输船队的威胁值。随时间推移逐渐衰减。

REGION_THREAT_LEVEL_TO_AVOID_REGION = 25 * 10,		— How much threat must be generated in region ( by REGION_THREAT_PER_SUNK_CONVOY ) so the AI will decide to mark the region as avoid

区域威胁等级避免区域 = 25 * 10, —— 需要在该区域产生多少威胁值（通过每沉没船队威胁值计算），AI才会决定将该区域标记为回避

REGION_THREAT_LEVEL_TO_BLOCK_REGION = 25 * 100,		— How much threat must be generated in region ( by REGION_THREAT_PER_SUNK_CONVOY ) so the AI will decide to mark the region as avoid

REGION_THREAT_LEVEL_TO_BLOCK_REGION = 25 * 100, — 区域需积累多少威胁值（通过REGION_THREAT_PER_SUNK_CONVOY计算）才会让AI判定将该区域标记为规避

REGION_CONVOY_DANGER_DAILY_DECAY = 1,				— When convoys are sunk it generates threat in the region which the AI uses to prio nalval missions

REGION_CONVOY_DANGER_DAILY_DECAY = 1, —— 当运输船队被击沉时，会在该区域产生威胁值，AI将据此优先处理海军任务



PRODUCTION_LINE_SWITCH_SURPLUS_NEEDED_MODIFIER = 0.2,	— Is modified by efficency modifiers.

生产线切换剩余需求修正系数 = 0.2, — 受效率修正影响。

PLAN_ACTIVATION_MAJOR_WEIGHT_FACTOR = 1.5,			— AI countries will hold on activating plans if stronger countries have plans in the same location. Majors count extra (value of 1 will negate this)

PLAN_ACTIVATION_MAJOR_WEIGHT_FACTOR = 1.5, —— 若同一地区存在更强大国家的计划，AI国家将暂缓激活计划。大国在此计算中具有额外权重（设为1则取消此效果）

PLAN_ACTIVATION_PLAYER_WEIGHT_FACTOR = 50.0,		— AI countries will hold on activating plans if player controlled countries have plans in the same location.

PLAN_ACTIVATION_PLAYER_WEIGHT_FACTOR = 50.0, —— 若玩家控制的国家在同一区域已有计划，AI国家将暂缓激活自身计划。

AREA_DEFENSE_BASE_IMPORTANCE = 30, — Area defense order base importance value (used for determining order of troop selections)

区域防御基地重要性 = 30, —— 区域防御命令基础重要性值（用于确定部队选择顺序）

AREA_DEFENSE_CIVIL_WAR_IMPORTANCE = 30, — Area defense order importance value when a country is in a civil war as target or revolter.

AREA_DEFENSE_CIVIL_WAR_IMPORTANCE = 30, — 当目标国家或叛乱方处于内战状态时，区域防御命令的重要性值。

AREA_DEFENSE_IMPORTANCE_FACTOR = 1.0, — used to balance defensive area importance vs other fronts

AREA_DEFENSE_IMPORTANCE_FACTOR = 1.0, ——用于平衡防御区域重要性与其他战线间的权重



MAX_DISTANCE_NAVAL_INVASION = 200.0,				— AI is extremely unwilling to plan naval invasions above this naval distance limit.

MAX_DISTANCE_NAVAL_INVASION = 200.0, —— 人工智能极不情愿策划超过此海上距离限制的两栖作战。

ENEMY_NAVY_STRENGTH_DONT_BOTHER = 2.5,				— If the enemy has a navy at least these many times stronger that the own, don’t bother invading

ENEMY_NAVY_STRENGTH_DONT_BOTHER = 2.5, —— 若敌方海军实力至少是己方的这么多倍，则不必费心入侵

MIN_SUPPLY_USE_SANITY_CAP = 100,					— Ignore supply cap if below this value when deciding on how many divisions to produce.

MIN_SUPPLY_USE_SANITY_CAP = 100, — 在决定生产多少师团时，若供应上限低于此值则忽略该上限。

MAX_SUPPLY_DIVISOR = 1.75,							— To make sure the AI does not overdeploy divisions. Higher number means more supply per unit.

MAX_SUPPLY_DIVISOR = 1.75，——确保AI不会过度部署师级单位。数值越大代表每单位补给越多。

MISSING_CONVOYS_BOOST_FACTOR = 50.0,				— The more convoys a country is missing, the more resources it diverts to cover this.

MISSING_CONVOYS_BOOST_FACTOR = 50.0, — 一个国家缺少的运输船越多，就会将更多资源调配来弥补这一缺口。

TRANSPORTS_PER_PARATROOPER = 20,					— Currently unused.

空降兵单位运输容量 = 20, —— 当前未使用。

MAX_MICRO_ATTACKS_PER_ORDER = 3,					— AI goes through its orders and checks if there are situations to take advantage of

MAX_MICRO_ATTACKS_PER_ORDER = 3, —— AI会遍历其指令并检查是否存在可乘之机

FALLBACK_LOSING_FACTOR = 1.0,						— The lower this number, the longer the AI will hold the line before sending them to the fallback line

FALLBACK_LOSING_FACTOR = 1.0, —— 该数值越小，AI在将单位派往后备防线前坚守战线的时间越长

PRODUCTION_MAX_PROGRESS_TO_SWITCH_NAVAL = 0.1,		— AI will not replace ships being built by newer types if progress is above this

PRODUCTION_MAX_PROGRESS_TO_SWITCH_NAVAL = 0.1, —— 当建造进度超过此值时，AI将不会用新型舰船替换正在建造的船只

PRODUCTION_WAIT_TO_FINISH_IF_EXPENSIVE = 0.25, — If produced item is expensive (producing less than one/week), wait to finish item if progress is above this

PRODUCTION_WAIT_TO_FINISH_IF_EXPENSIVE = 0.25， — 如果生产的物品昂贵（每周生产不足一件），当进度超过此值时等待完成物品

PRODUCTION_WAIT_TO_FINISH_IF_CHEAP = 0.75, — If produced item is cheap (producing more than one/week), wait to finish item if progress is above this

PRODUCTION_WAIT_TO_FINISH_IF_CHEAP = 0.75, —— 如果生产物品成本低廉（每周生产超过一件），当进度超过此值时等待完成物品

STATE_CONTROL_FOR_AREA_DEFENSE = 0.4,				— To avoid AI sending area defense to area with very little foothold

STATE_CONTROL_FOR_AREA_DEFENSE = 0.4, — 防止AI将区域防御派往控制力极弱的地区

FORCE_FACTOR_AGAINST_EXTRA_MINOR = 0.15,			— AI considers generating wargoals against minors below this % of force compared to themselves to get at a bigger enemy.

对抗小国的力量系数 = 0.15, ——当AI判断针对某小国的宣战理由有助于打击更强大敌人时，若该小国军力不足自身此百分比值则会考虑生成战争目标。

MAX_EXTRA_WARGOAL_GENERATION = 2,					— AI may want to generate wargoals against weak minors to get at larger enemy, but never more that this at any given time.

MAX_EXTRA_WARGOAL_GENERATION = 2, —— AI可能会针对弱小国家生成战争目标以对抗更强大的敌人，但任何时候都不会超过此数值。

NAVAL_MISSION_DISTANCE_BASE = 3500,					— Base value when AI is evaluating distance score to places

NAVAL_MISSION_DISTANCE_BASE = 3500, —— 当AI评估到各地点的距离分数时使用的基础值

NAVAL_MISSION_INVASION_BASE = 1000,					— Base score for region with naval invasion (modified dynamically by prioritizing orders)

NAVAL_MISSION_INVASION_BASE = 1000, —— 海军入侵区域的基础分数（通过优先指令动态调整）

NAVAL_MISSION_AGGRESSIVE_PATROL_DIVISOR = 1,		— Divides patrol score when not defending

NAVAL_MISSION_AGGRESSIVE_PATROL_DIVISOR = 1, — 非防御状态下巡逻得分的除数

NAVAL_MISSION_AGGRESSIVE_ESCORT_DIVISOR = 2,		— Divides escort score when not defending

NAVAL_MISSION_AGGRESSIVE_ESCORT_DIVISOR = 2, — 非防御状态下护送得分的除数

NAVAL_MISSION_PATROL_NEAR_OWNED = 500,			— Extra patrol mission score near owned provinces

NAVAL_MISSION_PATROL_NEAR_OWNED = 500, — 在己方省份附近巡逻任务的额外分数

NAVAL_MISSION_ESCORT_NEAR_OWNED = 300,			— Extra escort mission score near owned provinces

NAVAL_MISSION_ESCORT_NEAR_OWNED = 300, — 在己方省份附近执行护航任务的额外分数

NAVAL_MISSION_PATROL_NEAR_CONTROLLED = 120,		— Extra patrol mission score near controlled provinces

NAVAL_MISSION_PATROL_NEAR_CONTROLLED = 120, —— 在控制省份附近执行巡逻任务的额外分数

NAVAL_MISSION_ESCORT_NEAR_CONTROLLED = 200,		— Extra escort mission score near controlled provinces

NAVAL_MISSION_ESCORT_NEAR_CONTROLLED = 200, — 在控制省份附近执行护航任务的额外分数

NAVAL_MISSION_MINES_PLANTING_NEAR_OWNED = 40000,

NAVAL_MISSION_MINES_PLANTING_NEAR_OWNED = 40000,

NAVAL_MISSION_MINES_PLANTING_NEAR_CONTROLLED = 30000,

NAVAL_MISSION_MINES_PLANTING_NEAR_CONTROLLED = 30000,

NAVAL_MISSION_MINES_SWEEPING_NEAR_OWNED = 60000,	 — How likely the AI will do the sweeping missions. The value is scaled by the amount of mines to sweep.

NAVAL_MISSION_MINES_SWEEPING_NEAR_OWNED = 60000, — AI执行扫雷任务的倾向值。该数值会根据待清扫水雷数量进行比例调整。

NAVAL_MISSION_MINES_SWEEPING_NEAR_CONTROLLED = 50000,— Same as above, but nearby the controlled territory.

NAVAL_MISSION_MINES_SWEEPING_NEAR_CONTROLLED = 50000，——同上，但位于控制领土附近。

NEW_LEADER_EXTRA_CP_FACTOR = 2.0,					— Country must have at least this many times extra command power to get new admirals or army leaders

新领导人额外指挥力系数 = 2.0, —— 国家必须拥有至少此倍数的额外指挥力才能获得新的海军将领或陆军将领

SCARY_LEVEL_AVERAGE_DEFENSE = -0.7, — average front defense modifier to make it consider it as a PITA to go for

SCARY_LEVEL_AVERAGE_DEFENSE = -0.7, —— 平均前线防御修正值，使其被视为难以攻克的麻烦

ATTACK_HEAVILY_DEFENDED_LIMIT = 0.5,				— AI will not launch attacks against heavily defended fronts unless they consider to have this level of advantage (1.0 = 100%)

ATTACK_HEAVILY_DEFENDED_LIMIT = 0.5, — 人工智能不会对重兵防守的战线发动攻击，除非他们认为拥有此级别的优势（1.0 = 100%）

CANCEL_COMBAT_DISADVANTAGE_RATIO = 1.5, — If the enemy’s advantage ratio over us during (normal) combat is more than <value>, allow canceling the attack

CANCEL_COMBAT_DISADVANTAGE_RATIO = 1.5, —— 若（常规）战斗中敌方优势比例超过<值>，则允许取消攻击

CANCEL_COMBAT_MIN_DURATION_HOURS = 48, — Only allow cancelling (normal) combat if at least <value> hours have passed

CANCEL_COMBAT_MIN_DURATION_HOURS = 48, —— 仅当至少经过<值>小时后才允许取消（普通）战斗

CANCEL_INVASION_COMBAT_DISADVANTAGE_RATIO = 3.5, — If the enemy’s advantage ratio over us during invasion combat is more than <value>, allow canceling the attack

CANCEL_INVASION_COMBAT_DISADVANTAGE_RATIO = 3.5, —— 若敌方在入侵战斗中的优势比例超过<值>，则允许取消进攻

CANCEL_INVASION_COMBAT_MIN_DURATION_HOURS = 720, — Only allow cancelling invasion combat if at least <value> hours have passed

CANCEL_INVASION_COMBAT_MIN_DURATION_HOURS = 720, — 仅当至少经过<value>小时后才允许取消入侵战斗

MIN_PLAN_VALUE_TO_MICRO_INACTIVE = 0.25,			— The AI will not consider members of groups which plan is not activated AND evaluates lower than this.

MIN_PLAN_VALUE_TO_MICRO_INACTIVE = 0.25, —— AI不会考虑那些计划未激活且评估值低于此阈值的群组成员。



MAX_UNITS_FACTOR_AREA_ORDER = 0.75,					— Factor for max number of units to assign to area defense orders

MAX_UNITS_FACTOR_AREA_ORDER = 0.75, —— 分配给区域防御命令的最大单位数量系数

DESIRED_UNITS_FACTOR_AREA_ORDER = 0.7,				— Factor for desired number of units to assign to area defense orders

DESIRED_UNITS_FACTOR_AREA_ORDER = 0.7, —— 分配给区域防御指令的期望单位数量因子

MIN_UNITS_FACTOR_AREA_ORDER = 1.0,					— Factor for min number of units to assign to area defense orders

MIN_UNITS_FACTOR_AREA_ORDER = 1.0, —— 区域防御指令最小单位分配系数



MAX_UNITS_FACTOR_FRONT_ORDER = 1.0,					— Factor for max number of units to assign to area front orders

MAX_UNITS_FACTOR_FRONT_ORDER = 1.0, —— 分配给区域前线订单的最大单位数因子

DESIRED_UNITS_FACTOR_FRONT_ORDER = 1.1,				— Factor for desired number of units to assign to area front orders

DESIRED_UNITS_FACTOR_FRONT_ORDER = 1.1, —— 用于分配给区域前线订单的理想单位数量的系数

MIN_UNITS_FACTOR_FRONT_ORDER = 1.0,					— Factor for min number of units to assign to area front orders

MIN_UNITS_FACTOR_FRONT_ORDER = 1.0, — 用于分配给区域前线订单的最小单位数因子



MAX_UNITS_FACTOR_INVASION_ORDER = 1.0,				— Factor for max number of units to assign to naval invasion orders

MAX_UNITS_FACTOR_INVASION_ORDER = 1.0, —— 分配给海军入侵命令的最大单位数量系数

DESIRED_UNITS_FACTOR_INVASION_ORDER = 1.0,			— Factor for desired number of units to assign to naval invasion orders

DESIRED_UNITS_FACTOR_INVASION_ORDER = 1.0, —— 分配给海军入侵命令的期望单位数量的系数

MIN_UNITS_FACTOR_INVASION_ORDER = 1.0,				— Factor for min number of units to assign to naval invasion orders

MIN_UNITS_FACTOR_INVASION_ORDER = 1.0, — 分配给海军入侵命令的最小单位数量的因子



FRONT_UNITS_CAP_FACTOR = 15.0,						— A factor applied to total front size and supply use. Primarily effects small fronts

FRONT_UNITS_CAP_FACTOR = 15.0，——一个应用于总前线规模和补给使用的系数，主要影响小型前线。

MAX_DIST_PORT_RUSH = 20.0,							— If a unit is in enemy territory with no supply it will consider nearby ports within this distance.

MAX_DIST_PORT_RUSH = 20.0, —— 若单位身处敌方无补给领土，将考虑此距离范围内的附近港口。



MIN_FIELD_STRENGTH_TO_BUILD_UNITS = 0.7,			— Cancel unit production if below this to get resources out to units in the field

MIN_FIELD_STRENGTH_TO_BUILD_UNITS = 0.7, — 若低于此值则取消单位生产，将资源调配至战场上的现有单位

MIN_MANPOWER_TO_BUILD_UNITS = 0.7,					— Cancel unit production if below this to get resources out to units in the field

最小人力建造单位阈值 = 0.7, ——若低于此值则取消单位生产，以将资源调配至战场上的现有单位



AVERAGE_SUPPLY_USE_PESSIMISM = 1.5,					— Multiplier for when AI calculates average supply use of entire army.

AVERAGE_SUPPLY_USE_PESSIMISM = 1.5, — 当AI计算全军平均补给消耗时的乘数。



PROPOSE_LEND_LEASE_AIDESIRE_SAME_IDEOLOGY = 40,				— Added to AI desire to propose lend lease if recipent is same ideology (and AI can’t declare war on recipient)

PROPOSE_LEND_LEASE_AIDESIRE_SAME_IDEOLOGY = 40，——若受援国与AI意识形态相同（且AI无法对受援国宣战），则增加AI提出租借援助的意愿值

PROPOSE_LEND_LEASE_AIDESIRE_SAME_IDEOLOGY_CIVIL_WAR = 25,	— Added to AI desire to propose lend lease if recipent is same ideology and they are currently in civil war

PROPOSE_LEND_LEASE_AIDESIRE_SAME_IDEOLOGY_CIVIL_WAR = 25, —— 若接收方为相同意识形态且正处于内战状态，则增加AI提议租借援助的意愿值

SEND_VOLUNTEER_AIDESIRE_SAME_IDEOLOGY = 40,					— Added to AI desire to send volunteers if recipent is same ideology (and AI can’t declare war on recipient)

SEND_VOLUNTEER_AIDESIRE_SAME_IDEOLOGY = 40, —— 当接收方为相同意识形态且AI无法对其宣战时，增加AI派遣志愿军的意愿值

SEND_VOLUNTEER_AIDESIRE_SAME_IDEOLOGY_CIVIL_WAR = 25,		— Added to AI desire to send volunteers if recipent is same ideology and they are currently in civil war

SEND_VOLUNTEER_AIDESIRE_SAME_IDEOLOGY_CIVIL_WAR = 25, — 当接收方为相同意识形态且处于内战状态时，AI派遣志愿军的意愿值增加



REQUEST_LEND_LEASE_PROTECT_VALUE = 75,				— Limit for protect enemy desire for reducing lend lease desire

REQUEST_LEND_LEASE_PROTECT_VALUE = 75, — 限制保护敌人对减少租借欲望的需求

REQUEST_LEND_LEASE_CONTAINS_VALUE = 100,			— Limit of contain enemy desire for boosting friendly help

REQUEST_LEND_LEASE_CONTAINS_VALUE = 100, — 限制包含敌方对增强友方援助的渴望值



FRONT_BULGE_RATIO_UPPER_CUTOFF = 1.5,				— If total bulginess is lower than this, the front is ignored.

FRONT_BULGE_RATIO_UPPER_CUTOFF = 1.5, ——若总凸度低于此值，则忽略前部。

FRONT_BULGE_RATIO_LOWER_CUTOFF = 0.95,				— If local bulginess drops below this, a point of interest is found

FRONT_BULGE_RATIO_LOWER_CUTOFF = 0.95, —— 当局部凸起度低于此值时，将标记为一个兴趣点

FRONT_CUTOFF_MIN_EDGE_PROXIMITY = 2,				— Minimum number of provinces to the front edge to determine for cutoff oportunity.

FRONT_CUTOFF_MIN_EDGE_PROXIMITY = 2, — 决定切断机会时到前线边缘的最小省份数。



AIR_SCORE_DISTANCE_IMPACT = 0.3,					— Effect of distance applied to the score calculations

AIR_SCORE_DISTANCE_IMPACT = 0.3, —— 距离对分数计算的影响系数

DAYS_BETWEEN_AIR_PRIORITIES_UPDATE = 4,				— Amount of days between air ai updates priorities for air wings ( from 1 to N )

DAYS_BETWEEN_AIR_PRIORITIES_UPDATE = 4, —— 空军AI更新航空联队优先级的间隔天数（1至N天）



NAVAL_AIR_SUPERIORITY_IMPORTANCE = 0.10,			— Strategic importance of air superiority ( amount of enemy planes in area )

NAVAL_AIR_SUPERIORITY_IMPORTANCE = 0.10, —— 制空权的战略重要性（区域内敌方飞机数量）

NAVAL_SHIP_AIR_IMPORTANCE = 2.0,					— Naval ship air importance

NAVAL_SHIP_AIR_IMPORTANCE = 2.0, — 海军舰艇空中重要性

NAVAL_SHIP_IN_PORT_AIR_IMPORTANCE = 6.0,			— Naval ship in the port air importance

NAVAL_SHIP_IN_PORT_AIR_IMPORTANCE = 6.0, — 港口内海军舰艇的空中重要性

NAVAL_COMBAT_AIR_IMPORTANCE = 8.0,					— Naval combat air importance

NAVAL_COMBAT_AIR_IMPORTANCE = 8.0, — 海军战斗空中重要性

NAVAL_TRANSFER_AIR_IMPORTANCE = 0.0,				— Naval transfer air importance

NAVAL_TRANSFER_AIR_IMPORTANCE = 0.0, — 海军转场空中重要性

NAVAL_COMBAT_TRANSFER_AIR_IMPORTANCE = 50.0,		— Naval combat involving enemy land units

海军战斗转移空中支援重要性 = 50.0, ——涉及敌方地面部队的海军战斗

NAVAL_IMPORTANCE_SCALE = 0.65,						— Naval total importance scale (every naval score get’s multiplied by it)

NAVAL_IMPORTANCE_SCALE = 0.65，——海军总重要性比例（所有海军得分将乘以该系数）

NAVAL_COMBAT_OUR_NAVY_MULT_ON_IMPORTANCE = 0.35,	— Naval region importance are scaled by our ships as well

NAVAL_COMBAT_OUR_NAVY_MULT_ON_IMPORTANCE = 0.35, — 海军区域的重要性也会因我方舰船而按比例调整

NAVAL_COMBAT_ALLY_NAVY_MULT_ON_IMPORTANCE = 0.15,	— Naval region importance are scaled by our ships as well

NAVAL_COMBAT_ALLY_NAVY_MULT_ON_IMPORTANCE = 0.15, —— 我方舰船也会按比例影响海军区域的重要性

NAVAL_COMBAT_MIN_OUR_NAVY_MULT_ON_IMPORTANCE = 0.5, — Min scale factor for naval region importance from our ships

NAVAL_COMBAT_MIN_OUR_NAVY_MULT_ON_IMPORTANCE = 0.5, — 我方舰船对海域重要性影响的最小比例系数

NAVAL_COMBAT_MAX_OUR_NAVY_MULT_ON_IMPORTANCE = 1.0, — Max scale factor for naval region importance from our ships

NAVAL_COMBAT_MAX_OUR_NAVY_MULT_ON_IMPORTANCE = 1.0, —— 我方舰船对海域重要性影响的最大比例系数



NAVAL_RANGE_FOR_DOCKING_RIGHTS_CHECK = 240.0,		— Naval range used to check if docking rights would allow us to reach a specific province

NAVAL_RANGE_FOR_DOCKING_RIGHTS_CHECK = 240.0, —— 用于检查停靠权是否允许我们到达特定省份的海军范围



NAVAL_PATROL_PLANES_PER_SHIP_PATROLLING = 10.0,		— Amount of naval patrol planes per ship on a patrol mission

NAVAL_PATROL_PLANES_PER_SHIP_PATROLLING = 10.0, —— 每艘执行巡逻任务的舰船配备的海军巡逻机数量

NAVAL_PATROL_PLANES_PER_SHIP_RAIDING = 10.0,		— Amount of naval patrol planes per ship on a convoy raid mission

NAVAL_PATROL_PLANES_PER_SHIP_RAIDING = 10.0, — 每艘执行护航袭击任务的舰船配备的海军巡逻机数量

NAVAL_PATROL_PLANES_PER_SHIP_ESCORTING = 10.0,		— Amount of naval patrol planes per ship on a convoy escort mission

NAVAL_PATROL_PLANES_PER_SHIP_ESCORTING = 10.0, —— 执行护航任务时每艘舰船配备的海军巡逻机数量



NAVAL_FIGHTERS_PER_PLANE = 1.0,						— Amounts of air superiority planes requested per enemy plane

NAVAL_FIGHTERS_PER_PLANE = 1.0, —— 每架敌方飞机请求的空中优势飞机数量

NAVAL_STRIKE_PLANES_PER_ARMY = 0,					— Amount of planes requested per enemy army

NAVAL_STRIKE_PLANES_PER_ARMY = 0, — 每支敌军陆军请求的飞机数量

NAVAL_STRIKE_PLANES_PER_SHIP = 20,					— Amount of bombers requested per enemy ship

NAVAL_STRIKE_PLANES_PER_SHIP = 20, —— 每艘敌舰请求的轰炸机数量

PORT_STRIKE_PLANES_PER_SHIP = 10,					— Amount of bombers request per enemy ship in the port

PORT_STRIKE_PLANES_PER_SHIP = 10, — 港口中每艘敌方船只请求的轰炸机数量

MINES_SWEEPING_PLANES_PER_MAX_MINES = 150, 			— Amount of air planes request for mines sweeping when there is max amount of mines planted by enemy in certain region

MINES_SWEEPING_PLANES_PER_MAX_MINES = 150, — 当敌方在特定区域埋设了最大数量水雷时，请求用于扫雷的飞机数量

MINES_PLANTING_PLANES_PER_MAX_DESIRE = 100,			— Amount of air planes request for mines planting when there is max desire for it.

MINES_PLANTING_PLANES_PER_MAX_DESIRE = 100, — 当对布雷有最高需求时，请求用于布雷的飞机数量。

MINES_PLANTING_DESIRE_PER_HOME_STATE = 0.4,			— Scoring for how much do we want to plant naval mines with our air wings if the naval region is adjacent to a home state. Multiple adjacent states increases the score. Max sum of score is 1.0.

MINES_PLANTING_DESIRE_PER_HOME_STATE = 0.4, —— 用于评估当海军区域与本国省份相邻时，我方空军编队布设海军水雷的意愿强度。相邻省份数量增加将提升该评分。最高总评分为1.0。

MINES_PLANTING_DESIRE_PER_ENEMY_STATE = 0.1,		— Scoring for how much do we want to plant naval mines with our air wings if the naval region is adjacent to the enemy state. Multiple adjacent states increases the score. Max sum of score is 1.0.

MINES_PLANTING_DESIRE_PER_ENEMY_STATE = 0.1, — 衡量我方空军机群在海军区域与敌方州接壤时布设水雷的意愿强度。相邻的敌方州越多，得分越高。最高总分限制为1.0。

MINES_PLANTING_DESIRE_PER_NAVAL_THREAT = 250,		— How much threat must be generated in the naval region, in order to get the maximum desire to plant naval mines in there.

MINES_PLANTING_DESIRE_PER_NAVAL_THREAT = 250, -- 海军区域需产生多少威胁值，才能达到在该区域布设水雷的最大意愿。

NAVAL_MIN_EXCORT_PLANES = 0,						— Min amount of planes requested to excort operations

NAVAL_MIN_EXCORT_PLANES = 0, — 执行护航行动所需飞机的最低数量

DEMOCRATIC_AI_FACTION_KICKING_PLAYER_THREAT_DIFFERENCE = 6.0, — World threat generation difference needed to kick a player from a democratic faction

DEMOCRATIC_AI_FACTION_KICKING_PLAYER_THREAT_DIFFERENCE = 6.0, — 民主派系踢出玩家所需的世界威胁生成差异

BEFRIEND_FACTOR_FOR_KICKING_COUNTRIES = 7.5,		— World threat difference addition per 100 befriend against a country, democratic leaders will forgive allies if they are befriending them

BEFRIEND_FACTOR_FOR_KICKING_COUNTRIES = 7.5, — 每与一个国家建立100点友好度时世界威胁差异的加成，民主领袖会对盟友表现出宽容，前提是对方持续释放友好信号



LAND_DEFENSE_AIR_SUPERIORITY_IMPORTANCE = 1.0,		— Strategic importance of air superiority ( amount of enemy planes in area )

LAND_DEFENSE_AIR_SUPERIORITY_IMPORTANCE = 1.0, — 制空权的战略重要性（区域内敌机数量）

LAND_DEFENSE_CIVIL_FACTORY_IMPORTANCE = 50,			— Strategic importance of civil factories

LAND_DEFENSE_CIVIL_FACTORY_IMPORTANCE = 50, — 民用工厂的战略重要性

LAND_DEFENSE_MILITARY_FACTORY_IMPORTANCE = 70,		— Strategic importance of military factories

LAND_DEFENSE_MILITARY_FACTORY_IMPORTANCE = 70, — 军事工厂的战略重要性

LAND_DEFENSE_NAVAL_FACTORY_IMPORTANCE = 30,			— Strategic importance of naval factories

LAND_DEFENSE_NAVAL_FACTORY_IMPORTANCE = 30, —— 海军工厂的战略重要性

LAND_DEFENSE_SUPPLY_HUB_IMPORTANCE = 4, — Strategic importance of supply hubs

LAND_DEFENSE_SUPPLY_HUB_IMPORTANCE = 4, — 补给中心的战略重要性

LAND_DEFENSE_AA_IMPORTANCE_FACTOR = 1.0,			— Factor of AA influence on strategic importance ( 0.0 - 1.0 )

LAND_DEFENSE_AA_IMPORTANCE_FACTOR = 1.0, —— 防空对战略重要性影响系数（0.0 - 1.0）

LAND_DEFENSE_INFRA_IMPORTANCE_FACTOR = 0.5,			— Factor of infrastructure influence on strategic importance ( 0.0 - 1.0 )

LAND_DEFENSE_INFRA_IMPORTANCE_FACTOR = 0.5, — 基础设施对战略重要性影响的系数（0.0 - 1.0）

LAND_DEFENSE_IMPORTANCE_SCALE = 3.0,				— Lend defence total importance scale (every land defence score get’s multiplied by it)

LAND_DEFENSE_IMPORTANCE_SCALE = 3.0, — 陆地防御总重要性系数（每项陆地防御得分将乘以该系数）



NUM_HOURS_SINCE_LAST_COMBAT_TO_SUPPORT_UNITS_VIA_AIR = 72,			— units will be considered in combat if they are just out of their last combat for air supporting

NUM_HOURS_SINCE_LAST_COMBAT_TO_SUPPORT_UNITS_VIA_AIR = 72, — 单位若刚从上次空战支援中脱离，将被视为仍处于战斗状态



LAND_DEFENSE_MIN_FACTORIES_FOR_AIR_IMPORTANCE = 5,	— If amount of factories is less importance of factories won’t apply

LAND_DEFENSE_MIN_FACTORIES_FOR_AIR_IMPORTANCE = 5, —— 若工厂数量少于该值，工厂的重要性将不适用



LAND_DEFENSE_RAID_IMPORTANCE = 500, — Strategic importance of detected raids targetting us

LAND_DEFENSE_RAID_IMPORTANCE = 500, — 侦测到针对我方袭击的战略重要性

LAND_DEFENSE_FIGHERS_PER_RAID = 100, — Amount of air superiority planes requested per detected raid targetting us

LAND_DEFENSE_FIGHERS_PER_RAID = 100, —— 每次侦测到针对我方空袭时请求的制空战机数量

LAND_DEFENSE_INTERCEPTORS_PER_RAID = 100, — Amount of interceptor planes requested per detected raid targetting us

LAND_DEFENSE_INTERCEPTORS_PER_RAID = 100, —— 每次侦测到针对我方袭击时请求的拦截机数量



LAND_DEFENSE_FIGHERS_PER_PLANE = 1.8,				— Amount of air superiority planes requested per enemy plane

LAND_DEFENSE_FIGHERS_PER_PLANE = 1.8, —— 每架敌方飞机请求的空中优势飞机数量

LAND_DEFENSE_INTERCEPTORS_PER_BOMBERS = 0.8, — Amount of interceptor planes requested per enemy bomber

LAND_DEFENSE_INTERCEPTORS_PER_BOMBERS = 0.8, —— 每架敌方轰炸机所需的拦截机数量

LAND_DEFENSE_INTERCEPTORS_PER_PLANE = 0.1, — Amount of interceptor planes requested per enemy plane (non bomber)

LAND_DEFENSE_INTERCEPTORS_PER_PLANE = 0.1, —— 每架敌方飞机（非轰炸机）请求的拦截机数量



LAND_DEFENSE_SAM_MISSILE_IMPORTANCE_FACTOR = 0.2,	— Importance factor of using sam missiles for regions strategic importance. Higher value will increase the usage

LAND_DEFENSE_SAM_MISSILE_IMPORTANCE_FACTOR = 0.2, —— 用于衡量地区战略重要性时防空导弹使用的重要性系数。数值越高，使用频率越大

LAND_COMBAT_MISSILE_IMPORTANCE_FACTOR = 1.5, 		— Importance factor of using missiles for regions strategic importance. Higher value will increase the usage

LAND_COMBAT_MISSILE_IMPORTANCE_FACTOR = 1.5, — 地区战略重要性对导弹使用的影响因子。数值越高，导弹使用率越高



LAND_COMBAT_AIR_SUPERIORITY_IMPORTANCE = 0.40,		— Strategic importance of air superiority ( amount of enemy planes in area )

LAND_COMBAT_AIR_SUPERIORITY_IMPORTANCE = 0.40, —— 制空权的战略重要性（区域内敌方飞机数量）

LAND_COMBAT_OUR_ARMIES_AIR_IMPORTANCE = 20,			— Strategic importance of our armies

LAND_COMBAT_OUR_ARMIES_AIR_IMPORTANCE = 20, — 我军部队的战略重要性

LAND_COMBAT_OUR_COMBATS_AIR_IMPORTANCE = 155,		— Strategic importance of our armies in the combats

陆地作战中我军战斗的空中支援重要性 = 155，——我军在战斗中的战略重要性

LAND_COMBAT_FRIEND_ARMIES_AIR_IMPORTANCE = 10,		— Strategic importance of friendly armies

LAND_COMBAT_FRIEND_ARMIES_AIR_IMPORTANCE = 10, — 友方陆军空中支援的战略重要性

LAND_COMBAT_FRIEND_COMBATS_AIR_IMPORTANCE = 8,		— Strategic importance of friendly armies in the combat

LAND_COMBAT_FRIEND_COMBATS_AIR_IMPORTANCE = 8, —— 战斗中友军部队的战略重要性

LAND_COMBAT_ENEMY_ARMIES_AIR_IMPORTANCE = 12,		— Strategic importance of our armies

LAND_COMBAT_ENEMY_ARMIES_AIR_IMPORTANCE = 12, —— 我军部队的战略重要性

LAND_COMBAT_ENEMY_LAND_FORTS_AIR_IMPORTANCE = 5,	— Strategic importance of enemy land forts in the region

LAND_COMBAT_ENEMY_LAND_FORTS_AIR_IMPORTANCE = 5, —— 区域敌方陆地要塞的战略重要性

LAND_COMBAT_ENEMY_COASTAL_FORTS_AIR_IMPORTANCE = 3,	— Strategic importance of enemy coastal fronts in the region

地区敌方海岸要塞的战略重要性 = 3,

LAND_COMBAT_IMPORTANCE_SCALE = 5.0,					— Lend combat total importance scale (every land combat score get’s multiplied by it)

陆地战斗重要性比例 = 5.0, —— 租借战斗总重要性比例（所有陆地战斗得分均乘以该数值）



LAND_COMBAT_FIGHTERS_PER_PLANE = 1.0,				— Amount of air superiority planes requested per enemy plane

LAND_COMBAT_FIGHTERS_PER_PLANE = 1.0, —— 每架敌方飞机所需请求的空中优势战机数量

LAND_COMBAT_CAS_PLANES_PER_ENEMY_ARMY_LIMIT = 200,	— Limit of CAS planes requested by enemy armies

LAND_COMBAT_CAS_PLANES_PER_ENEMY_ARMY_LIMIT = 200, — 每支敌方陆军请求的近距离空中支援飞机数量上限

LAND_COMBAT_CAS_PER_ENEMY_ARMY = 30,				— Amount of CAS planes requested per enemy division

LAND_COMBAT_CAS_PER_ENEMY_ARMY = 30, — 每支敌军师团要求的近空支援飞机数量

LAND_COMBAT_ANTI_LOGISTICS_PER_ENEMY_ARMY = 0.1, — Amount of CAS planes requested per enemy army for anti-logistics

LAND_COMBAT_ANTI_LOGISTICS_PER_ENEMY_ARMY = 0.1, — 为每支敌军部队反后勤作战请求的近距离空中支援飞机数量

LAND_COMBAT_CAS_PER_COMBAT = 60,					— Amount of CAS requested per combat

LAND_COMBAT_CAS_PER_COMBAT = 60, — 每场战斗请求的近距离空中支援数量

LAND_COMBAT_BOMBERS_PER_LAND_FORT_LEVEL = 6,		— Amount of bomber planes requested per enemy land fort level

LAND_COMBAT_BOMBERS_PER_LAND_FORT_LEVEL = 6, —— 每级敌方陆地要塞所请求的轰炸机数量

LAND_COMBAT_BOMBERS_PER_COASTAL_FORT_LEVEL = 6,		— Amount of bomber planes requested per enemy coastal fort level

陆地战斗轰炸机每级海岸堡垒需求数 = 6, —— 每级敌方海岸堡垒所需的轰炸机数量

LAND_COMBAT_MIN_EXCORT_PLANES = 80,					— Min amount of planes requested to excort operations

LAND_COMBAT_MIN_EXCORT_PLANES = 80, — 执行护航行动所需的最低飞机数量



LAND_COMBAT_INTERCEPT_PER_PLANE = 0.25,				— Amount of interception planes requested per enemy plane

LAND_COMBAT_INTERCEPT_PER_PLANE = 0.25, —— 每架敌方飞机所需拦截机数量

MIN_ALLIED_DEFENSE_FACTOR_AIRWING_REQUESTS = 0.07,	— Airwing requests will be factored by a minimum of this when comparing own vs friendly troops in area

MIN_ALLIED_DEFENSE_FACTOR_AIRWING_REQUESTS = 0.07, — 当比较自身与友方在区域内的部队时，航空联队请求将至少按此比例计算

AIR_SUPERIORITY_FOR_FRIENDLY_CAS_RATIO = 0.75,		— Demand at least this proportion of our cas planes as air superiority regardless of other needs

AIR_SUPERIORITY_FOR_FRIENDLY_CAS_RATIO = 0.75, -- 无论其他需求如何,要求我方对地攻击机中至少保持此比例的制空权

LAND_COMBAT_GUIDE_DISTANCE = 290.0,					— Distance within whch we’ll care a bit more about sending planes regardless of whether our boiz are dying

LAND_COMBAT_GUIDE_DISTANCE = 290.0，——在此距离范围内，即便我方部队未处险境，我们也会更倾向于派遣飞机支援



ENEMY_PASSING_THROUGH_PLANES_PER_BOMBER = 0.1,		— Amount of planes we assign to intercept enemies en-route to a location

ENEMY_PASSING_THROUGH_PLANES_PER_BOMBER = 0.1, — 我们为拦截前往某地途中的敌机所分配的飞机数量

ENEMY_PASSING_THROUGH_PLANES_PER_FIGHTER = 0.1,		— Amount of planes we assign to intercept enemies en-route to a location

ENEMY_PASSING_THROUGH_PLANES_PER_FIGHTER = 0.1, —— 我们分配用于拦截敌方前往某地途中的飞机的战斗机数量比例

ENEMY_PASSING_THROUGH_PLANES_PER_SUPPORT = 0.1,		— Amount of planes we assign to intercept enemies en-route to a location

ENEMY_PASSING_THROUGH_PLANES_PER_SUPPORT = 0.1, —— 我们分配用于拦截前往某地途中的敌机的飞机数量



AI_FRACTION_OF_FIGHTERS_RESERVED_FOR_INTERCEPTION = 0.25,	—Percentage of fighters we reserve for interception vs AS

AI_FRACTION_OF_FIGHTERS_RESERVED_FOR_INTERCEPTION = 0.25，——我们为拦截任务保留的战斗机比例（相对于AS）

MAX_AIR_REGIONS_TO_CARE_ABOUT = 6,							— Number of regions we’ll consider when trying to split planes a bit. Split is NOT equal, just a guide, leftovers still applied elsewhere if needed

MAX_AIR_REGIONS_TO_CARE_ABOUT = 6, —— 尝试稍微分割平面时我们将考虑的区域数量。分割并非完全均等，仅作为指导，如有需要，剩余部分仍会应用至其他区域



ENEMY_PASSING_THROUGH_PLANES_PER_BOMBER_NAVAL_REGION = 0.15,		— Amount of planes we assign to intercept enemies en-route to a location over a sea region

ENEMY_PASSING_THROUGH_PLANES_PER_BOMBER_NAVAL_REGION = 0.15, — 我们分配用于拦截飞越海域前往目标的敌机的飞机数量

ENEMY_PASSING_THROUGH_PLANES_PER_FIGHTER_NAVAL_REGION = 0.15,		— Amount of planes we assign to intercept enemies en-route to a location over a sea region

ENEMY_PASSING_THROUGH_PLANES_PER_FIGHTER_NAVAL_REGION = 0.15, —— 我们指派拦截途经海域区域敌方飞机的战斗机数量比例

ENEMY_PASSING_THROUGH_PLANES_PER_SUPPORT_NAVAL_REGION = 0.15,		— Amount of planes we assign to intercept enemies en-route to a location over a sea region

ENEMY_PASSING_THROUGH_PLANES_PER_SUPPORT_NAVAL_REGION = 0.15, — 我方指派拦截途经海区敌方飞机的比例

NAVAL_DEFENSE_INTERCEPTION_IMPORTANCE_FACTOR = 30,	— Factor on added planes passing through region to strategic importance

NAVAL_DEFENSE_INTERCEPTION_IMPORTANCE_FACTOR = 30, —— 区域通过的飞机数量对战略重要性的影响因子



XP_RATIO_REQUIRED_TO_RESEARCH_WITH_XP = 2.0,		— AI will at least need this amount of xp compared to cost of a tech to reserch it with XP

XP_RATIO_REQUIRED_TO_RESEARCH_WITH_XP = 2.0, — AI至少需要拥有相当于科技成本两倍的经验值才能使用经验值进行研究

RESEARCH_WITH_XP_AI_WEIGHT_MULT = 1.2, 				— AI will bump score of a research with this mult if it can use XP

RESEARCH_WITH_XP_AI_WEIGHT_MULT = 1.2, —— 如果AI能够使用经验值，将以该倍数提升研究评分



STR_BOMB_AIR_SUPERIORITY_IMPORTANCE = 0.10,			— Strategic importance of air superiority ( amount of enemy planes in area )

STR_BOMB_AIR_SUPERIORITY_IMPORTANCE = 0.10, — 制空权的战略重要性（区域内敌机数量）

STR_BOMB_CIVIL_FACTORY_IMPORTANCE = 50,				— Strategic importance of enemy civil factories

STR_BOMB_CIVIL_FACTORY_IMPORTANCE = 50, — 敌方民用工厂的战略重要性

STR_BOMB_MILITARY_FACTORY_IMPORTANCE = 70,			— Strategic importance of enemy military factories

STR_BOMB_MILITARY_FACTORY_IMPORTANCE = 70, — 敌方军事工厂的战略重要性

STR_BOMB_NAVAL_FACTORY_IMPORTANCE = 30,				— Strategic importance of enemy naval factories

STR_BOMB_NAVAL_FACTORY_IMPORTANCE = 30, ——敌方海军工厂的战略重要性

STR_BOMB_SUPPLY_HUB_IMPORTANCE = 1, — Strategic importance of enemy supply hubs

STR_BOMB_SUPPLY_HUB_IMPORTANCE = 1, — 敌方补给中心的战略重要性

STR_BOMB_AA_IMPORTANCE_FACTOR = 0.5,				— Factor of AA influence on strategic importance ( 0.0 - 1.0 )

STR_BOMB_AA_IMPORTANCE_FACTOR = 0.5, —— 防空对战略重要性的影响因子（0.0 - 1.0）

STR_BOMB_INFRA_IMPORTANCE_FACTOR = 0.25,			— Factor of infrastructure influence on strategic importance ( 0.0 - 1.0 )

STR_BOMB_INFRA_IMPORTANCE_FACTOR = 0.25, — 基础设施对战略重要性影响因子（0.0 - 1.0）

STR_BOMB_IMPORTANCE_SCALE = 1.0,					— str bombing total importance scale (every str bombing score get’s multiplied by it)

STR_BOMB_IMPORTANCE_SCALE = 1.0, —— 字符串轰炸总重要性比例（每个字符串轰炸分数都会乘以该值）



STR_BOMB_MIN_ENEMY_FIGHTERS_IN_AREA = 2000,			— If amount of enemy fighters is higher than this mission won’t perform

STR_BOMB_MIN_ENEMY_FIGHTERS_IN_AREA = 2000, — 若区域内敌机数量超过此值，任务将不会执行

STR_BOMB_FIGHTERS_PER_PLANE = 1.1,					— Amount of air superiority planes requested per enemy plane

STR_BOMB_FIGHTERS_PER_PLANE = 1.1, ——每架敌军飞机所请求的制空战斗机数量

STR_BOMB_PLANES_PER_CIV_FACTORY = 20,				— Amount of planes requested per enemy civ factory

STR_BOMB_PLANES_PER_CIV_FACTORY = 20, — 每座敌方民用工厂要求的飞机数量

STR_BOMB_PLANES_PER_MIL_FACTORY = 25,				— Amount of planes requested per enemy military factory

STR_BOMB_PLANES_PER_MIL_FACTORY = 25, —— 每座敌方军用工厂要求的飞机数量

STR_BOMB_PLANES_PER_NAV_FACTORY = 15,				— Amount of planes requested per enemy naval factory

STR_BOMB_PLANES_PER_NAV_FACTORY = 15, — 每个敌方海军工厂要求的飞机数量

STR_BOMB_PLANES_PER_SUPPLY_HUB = 3, — Amount of planes requested per enemy supply node

每处敌方补给节点请求的飞机数量 = 3,

STR_BOMB_MIN_EXCORT_PLANES = 200,					— Min amount of planes requested to excort operations

STR_BOMB_MIN_EXCORT_PLANES = 200, — 执行护航任务所需的最低飞机数量

RECON_PLANES_NAVAL = 50, — scale on recon for naval areas

侦察机_海军区域 = 50, — 海军区域的侦察范围比例

RECON_PLANES_LAND_COMBAT = 25, — scale on recon for land combat areas

侦察机陆地作战区域覆盖范围 = 25，——陆地战斗区域的侦察规模

RECON_PLANES_STRATEGIC = 50, — scale on recon for strategic areas

RECON_PLANES_STRATEGIC = 50, —— 战略区域侦察规模



ASSIGN_FRONT_ARMY_SOFT_ATTACK_FACTOR = 0.1, — Importance of unit’s ARMY_SOFT_ATTACK stat when assigning to a front

ASSIGN_FRONT_ARMY_SOFT_ATTACK_FACTOR = 0.1, —— 将部队分配到前线时，其ARMY_SOFT_ATTACK属性的重要性

ASSIGN_FRONT_ARMY_HARD_ATTACK_FACTOR = 0.1, — Importance of unit’s ARMY_HARD_ATTACK stat when assigning to a front

ASSIGN_FRONT_ARMY_HARD_ATTACK_FACTOR = 0.1, — 分配至前线时，单位ARMY_HARD_ATTACK属性的重要程度

ASSIGN_FRONT_ARMY_BREAKTHROUGH_FACTOR = 0.2, — Importance of unit’s ARMY_BREAKTHROUGH stat when assigning to a front

ASSIGN_FRONT_ARMY_BREAKTHROUGH_FACTOR = 0.2, —— 分配至前线时单位ARMY_BREAKTHROUGH属性的重要性

ASSIGN_DEFENSE_ARMY_DEFENSE_FACTOR = 3.0, — Importance of unit’s ARMY_DEFENSE stat when assigning to an area defense order

ASSIGN_DEFENSE_ARMY_DEFENSE_FACTOR = 3.0, — 为区域防御指令分配部队时，单位ARMY_DEFENSE属性的重要性权重

ASSIGN_DEFENSE_ARMY_ENTRENCHMENT_FACTOR = 2.0, — Importance of unit’s ARMY_ENTRENCHMENT stat when assigning to an area defense order

ASSIGN_DEFENSE_ARMY_ENTRENCHMENT_FACTOR = 2.0, —— 在为区域防御命令分配部队时，单位ARMY_ENTRENCHMENT属性的重要性

ASSIGN_DEFENSE_TEMPLATE_CLASS_SCORE = 3.0, — Importance of unit’s AI template class (AREA_DEFENSE, CAVALRY) when assigning to an area defense order

ASSIGN_DEFENSE_TEMPLATE_CLASS_SCORE = 3.0, — 分配区域防御指令时，单位AI模板类别（区域防御、骑兵）的重要性

ASSIGN_INVASION_AMPHIBIOUS_ATTACK_FACTOR = 50.0, — Importance of unit’s amphibious attack adjuster when assigning to an invasion order

ASSIGN_INVASION_AMPHIBIOUS_ATTACK_FACTOR = 50.0, — 分配至登陆作战命令时，单位两栖攻击调整器的重要性

ORDER_ASSIGNMENT_DISTANCE_FACTOR = 100.0, — When the AI assigns units to orders, how much should distance be taken into account?

ORDER_ASSIGNMENT_DISTANCE_FACTOR = 100.0, —— 当AI分配单位执行命令时，应多大程度上考虑距离因素？

REVISITED_PROV_BOOST_FACTOR = 4, — When the AI picks units for a front, it prioritises units already nearby.

REVISITED_PROV_BOOST_FACTOR = 4, —— 当AI为前线挑选单位时，会优先考虑已在附近的单位。

UNIT_ASSIGNMENT_STATS_IMPORTANCE = 3.0, — Stats score for units are multiplied by this when the AI is deciding which front they should be assigned to

单位分配统计重要性 = 3.0, —— 当AI决定将单位分配到哪个前线时，单位的统计分数会乘以这个值



ASSIGN_FRONT_TERRAIN_ATTACK_FACTOR = 3.0, — Importance of unit’s terrain adjusted attack stat when assigning to a front

ASSIGN_FRONT_TERRAIN_ATTACK_FACTOR = 3.0, — 分配至前线时，单位地形调整后攻击属性的重要性权重

ASSIGN_FRONT_TERRAIN_DEFENSE_FACTOR = 1.0, — Importance of unit’s terrain adjusted defense stat when assigning to a front

ASSIGN_FRONT_TERRAIN_DEFENSE_FACTOR = 1.0, -- 分配前线时单位地形调整防御属性的重要性

ASSIGN_FRONT_TERRAIN_MOVEMENT_FACTOR = 2.0, — Importance of unit’s terrain adjusted movement stat when assigning to a front

ASSIGN_FRONT_TERRAIN_MOVEMENT_FACTOR = 2.0, — 分配前线时单位地形调整移动属性的重要性系数

ASSIGN_DEFENSE_TERRAIN_ATTACK_FACTOR = 0.5, — Importance of unit’s terrain adjusted attack stat when assigning to an area defense order

ASSIGN_DEFENSE_TERRAIN_ATTACK_FACTOR = 0.5, —— 为单位分配区域防御命令时，考虑单位地形调整攻击属性的重要性系数

ASSIGN_DEFENSE_TERRAIN_DEFENSE_FACTOR = 4.0, — Importance of unit’s terrain adjusted defense stat when assigning to an area defense order

ASSIGN_DEFENSE_TERRAIN_DEFENSE_FACTOR = 4.0, —— 在为区域防御命令分配单位时，单位地形调整防御属性的重要性

ASSIGN_DEFENSE_TERRAIN_MOVEMENT_FACTOR = 0.5, — Importance of unit’s terrain adjusted movement stat when assigning to an area defense order

ASSIGN_DEFENSE_TERRAIN_MOVEMENT_FACTOR = 0.5, -- 为区域防御命令分配单位时，地形调整移动属性所占权重

ASSIGN_MOUNTAINEERS_TO_MOUNTAINS = 10.0, — factor for assigning mountaineer divisions to fronts with mountains (proportional to how much of that terrain type)

ASSIGN_MOUNTAINEERS_TO_MOUNTAINS = 10.0, —— 为山地师分配至山地战线的系数（按该地形类型占比计算）

ASSIGN_TANKS_TO_MOUNTAINS = -6.0, — factor for assigning tank divisions to fronts with mountains (proportional to how much of that terrain type)

ASSIGN_TANKS_TO_MOUNTAINS = -6.0, — 为山地前线分配坦克师的因素（与该地形类型占比成正比）

ASSIGN_TANKS_TO_JUNGLE = -6.0, — factor for assigning tank divisions to fronts with jungle (proportional to how much of that terrain type)

分配坦克师至丛林前线 = -6.0, —— 根据该地形类型占比调整坦克师分配的因子

UNIT_ASSIGNMENT_TERRAIN_IMPORTANCE = 10.0, — Terrain score for units are multiplied by this when the AI is deciding which front they should be assigned to

单位分配地形重要性 = 10.0, — 当AI决定单位应被分配到哪个前线时，其地形得分将乘以该值



ASSIGN_TANKS_TO_WAR_FRONT = 6.0, — Scoring factor for assigning divisions with ‘role = armor’ or ‘front_role_override = offence’ to active war fronts

为战争前线分配坦克部队 = 6.0, —— 用于将‘角色=装甲’或‘前线角色覆盖=进攻’的师团分配到活跃战争前线的评分因素

ASSIGN_TANKS_TO_NON_WAR_FRONT = 0.4, — Scoring factor for assigning divisions with ‘role = armor’ or ‘front_role_override = offence’ to non-war fronts

ASSIGN_TANKS_TO_NON_WAR_FRONT = 0.4, — 为将具有“role = armor”或“front_role_override = offence”属性的师分配到非战争前线的评分因子



REASSIGN_TO_ANOTHER_FRONT_FACTOR = 0.5, — Factor for reassigning to another front. 0.0 < X < 1.0 means reluctant, X > 1.0 means want to.

重新分配至其他前线的因子 = 0.5，——用于重新分配到其他前线的系数。0.0 < X < 1.0 表示不情愿，X > 1.0 表示愿意。

REASSIGN_TO_ANOTHER_FRONT_IF_IN_COMBAT_FACTOR = 0.2, — Factor for reassigning to another front if in combat. 0.0 < X < 1.0 means reluctant, X > 1.0 means want to.

REASSIGN_TO_ANOTHER_FRONT_IF_IN_COMBAT_FACTOR = 0.2, —— 战斗中重新分配到另一前线的系数。0.0 < X < 1.0 表示不愿意，X > 1.0 表示愿意。



ENEMY_FORTIFICATION_FACTOR_FOR_FRONT_REQUESTS = 2.0,		— front unit request factor at max enemy fortification

ENEMY_FORTIFICATION_FACTOR_FOR_FRONT_REQUESTS = 2.0, — 敌方工事达到最大值时的前线单位请求系数

ENEMY_FORTIFICATION_FACTOR_FOR_FRONT_REQUESTS_MAX = 0.7, 	— max factor that can be added by enemy fortification

ENEMY_FORTIFICATION_FACTOR_FOR_FRONT_REQUESTS_MAX = 0.7, — 敌方防御工事对前线请求所能增加的最大系数



MANPOWER_RATIO_CAREFULNESS_THRESHOLD = 0.05, — if manpower ratio (available/used-by-army) is less than this, start being more careful with plan execution (i.e. don’t throw your men into the meat grinder if you’re running out of manpower)

MANPOWER_RATIO_CAREFULNESS_THRESHOLD = 0.05，——若人力比率（可用人力/军队占用人力）低于此值，则开始更谨慎地执行计划（即当人力即将耗尽时，勿将士兵送入绞肉机般的战场）。



PLAN_ACTIVATION_SUPERIORITY_AGGRO = 1.0,			— How aggressive a country is in activating a plan based on how superiour their force is.

PLAN_ACTIVATION_SUPERIORITY_AGGRO = 1.0, — 根据军力优势程度，国家激活作战计划的激进程度。

WAIT_YEARS_BEFORE_FREER_BUILDING = 3,				— The AI will skip considering certain buildings during the buildup phase, after htese many years it starts building them regardless of threat.

WAIT_YEARS_BEFORE_FREER_BUILDING = 3, — AI在初期建设阶段会忽略某些建筑，经过这些年数后无论威胁程度如何都将开始建造它们。



MAX_CARRIER_OVERFILL = 1.85,						— Carriers will be overfilled to this amount if there are doctrines to justify it

MAX_CARRIER_OVERFILL = 1.85, — 若有教义支持，航母将被超额填充至此数值



FIELDED_EQUIPMENT_BUFFER_RATIO_FOR_OCCUPATION_AI = 0.5, — garrison ai will try to leave this ratio of buffers while assigning laws

FIELDED_EQUIPMENT_BUFFER_RATIO_FOR_OCCUPATION_AI = 0.5, —— 驻军AI在分配法律时会尝试保留此比例的缓冲装备

FIELDED_MANPOWER_BUFFER_RATIO_FOR_OCCUPATION_AI = 0.3, — garrison ai will try to leave this ratio of buffers while assigning laws

FIELDED_MANPOWER_BUFFER_RATIO_FOR_OCCUPATION_AI = 0.3, —— 驻守AI在分配法律时将尝试保留此比例的缓冲人力



IMPORTANT_VICTORY_POINT = 15,						— during occupation ai will only care so much to ask for extra garrisons if VP amount is at least this

重要胜利点 = 15，——占领期间，只有当胜利点数量至少达到此数值时，AI才会额外请求驻军



DOCKYARDS_PER_NAVAL_DESIRE_EFFECT = -20.0,			— Effects how much AI wants to build dockyards based on how navally focused they are in general. Recommended range -100.0 to 100.0.

DOCKYARDS_PER_NAVAL_DESIRE_EFFECT = -20.0, — 影响AI基于其总体海军倾向建造船坞的意愿程度。建议范围-100.0至100.0。



DECISION_PRIORITY_RANDOMIZER = 0.1,					— random factor that is used while picking decisions. ai is able to pick a lower priority decision earler than a higher one if it is within this threshold

DECISION_PRIORITY_RANDOMIZER = 0.1, —— 用于选择决策时的随机因子。如果在此阈值范围内，AI可能会优先选择优先级较低的决策而非较高的。



DESIGN_COMPANY_SCORE_MULTIPLIER = 1.25, — score multiplier for hiring a design company

DESIGN_COMPANY_SCORE_MULTIPLIER = 1.25, — 雇佣设计公司时的分数倍率

ARMY_CHIEF_SCORE_MULTIPLIER = 1.0, — score multiplier for hiring an army chief

ARMY_CHIEF_SCORE_MULTIPLIER = 1.0, — 雇佣陆军参谋长时的分数乘数

AIR_CHIEF_SCORE_MULTIPLIER = 1.0, — score multiplier for hiring an air chief

AIR_CHIEF_SCORE_MULTIPLIER = 1.0, — 雇佣空军首长时的分数倍数

NAVY_CHIEF_SCORE_MULTIPLIER = 1.0, — score multiplier for hiring an navy chief

NAVY_CHIEF_SCORE_MULTIPLIER = 1.0, — 雇佣海军上将时的分数乘数

POLITICAL_ADVISOR_SCORE_MULTIPLIER = 1.25, — score multiplier for hiring political advisors

政治顾问分数乘数 = 1.25, —— 雇佣政治顾问时的分数乘数

THEORIST_ACCEPTANCE_MULTIPLIER = 0.7,						— scale the acceptance of hiring a theorist by this number times the amount of non-theorists we have, capped at one.

理论家接受度乘数 = 0.7，——将雇佣理论家的接受度按此数值乘以非理论家员工数量进行调节，上限为一。

MIN_SCALED_IDEA_WEIGHT_TO_COMPARE_WITH_DECISIONS = 100,		— idea scores are scaled between these two values while comparing them to decisions

MIN_SCALED_IDEA_WEIGHT_TO_COMPARE_WITH_DECISIONS = 100, — 在将创意分数与决策进行比较时，会在这两个值之间进行缩放

MAX_SCALED_IDEA_WEIGHT_TO_COMPARE_WITH_DECISIONS = 200,		— idea scores are scaled between these two values while comparing them to decisions

MAX_SCALED_IDEA_WEIGHT_TO_COMPARE_WITH_DECISIONS = 200, — 在将创意分数与决策进行比较时，会在这两个值之间进行缩放



CRITICAL_DECISION_PRIORITY = 200,					— critical ai score for decisions, ai will be able to pick decisions if it has higher prio even if it is not time to pick them (0 to disable)

CRITICAL_DECISION_PRIORITY = 200, ——决策的关键AI评分，AI将能够在优先级更高时选择决策，即使未到决策时机（设为0可禁用此功能）

CRITICAL_IDEA_PRIORITY = 400,							— critical ai score for ideas, ai will be able to pick ideas if it has higher prio even if it is not time to pick them (0 to disable)

CRITICAL_IDEA_PRIORITY = 400， —— 创意关键优先级评分，AI将能够选择优先级更高的创意，即便未到常规选取时机（设为0则禁用此功能）



MAX_PP_TO_SPEND_ON_LOWER_PRIO_TASKS = 25,			— max pp cost for ai to allow spend pp on lower prio things while a higher prio things are available

MAX_PP_TO_SPEND_ON_LOWER_PRIO_TASKS = 25, —— 当存在更高优先级任务时，AI允许将政治点数（pp）用于较低优先级事项的最大消耗值

MIN_SCORE_FOR_LOWER_PRIO_TASKS = 100,				— this is a threshold for low prio tasks that will be considered critical

MIN_SCORE_FOR_LOWER_PRIO_TASKS = 100，——这是低优先级任务被视为关键的阈值。



LOW_PRIO_TEMPLATE_BONUS_FOR_GARRISONS = 1000,		— bonus to make ai more likely to assign low prio units to garrisons

LOW_PRIO_TEMPLATE_BONUS_FOR_GARRISONS = 1000, — 该加成用于提高AI将低优先级单位分配到驻军的倾向

LOW_PRIO_TEMPLATE_PENALTY_FOR_FRONTS = 500,		— penalty to make ai less likely to assign low prio units to fronts

LOW_PRIO_TEMPLATE_PENALTY_FOR_FRONTS = 500, —— 用于降低AI将低优先级单位分配到前线的倾向的惩罚值



DEPLOYED_UNIT_MANPOWER_RATIO_TO_BUFFER_WARTIME = 0.2, 				— deployment will try to buffer a ratio of deployed manpower (for reinforcements) during war time

部署单位战时人力缓冲比例 = 0.2，——部署时将尝试在战时保留一定比例的已部署人力（用于增援）

DEPLOYED_UNIT_MANPOWER_RATIO_TO_BUFFER_PEACETIME = 0.1, 		— deployment will try to buffer a ratio of deployed manpower (for reinforcements) during peace time

DEPLOYED_UNIT_MANPOWER_RATIO_TO_BUFFER_PEACETIME = 0.1, — 和平时期部署将尝试保留一定比例的已部署人力（用于增援）



MAX_AVAILABLE_MANPOWER_RATIO_TO_BUFFER_WARTIME = 0.4,			— deployment will try to buffer a ratio of manpower (for reinforcements) during war time

MAX_AVAILABLE_MANPOWER_RATIO_TO_BUFFER_WARTIME = 0.4, — 战时部署将尝试保留一定比例的兵力（用于增援）

MAX_AVAILABLE_MANPOWER_RATIO_TO_BUFFER_PEACETIME = 0.2,		— deployment will try to buffer a ratio of manpower (for reinforcements) during peace time

MAX_AVAILABLE_MANPOWER_RATIO_TO_BUFFER_PEACETIME = 0.2, —— 和平时期部署将尝试保留一定比例的兵力（用于增援）



MANPOWER_RATIO_REQUIRED_TO_PRIO_MOBILIZATION_LAW = 0.4,		— percentage of manpower in field is desired to be buffered for AI when it has upcoming wars or already at war. if it has less manpower, it will prio manpower laws

MANPOWER_RATIO_REQUIRED_TO_PRIO_MOBILIZATION_LAW = 0.4, —— 当AI即将面临战争或已处于战争状态时，期望为其实战人力储备的百分比缓冲值。若实际人力低于此比例，将优先考虑人力动员法案。

UPGRADES_DEFICIT_LIMIT_DAYS = 7, — Ai will avoid upgrading units in the field to new templates if it takes longer than this to fullfill their equipment need

升级装备短缺限制天数 = 7, —— 若战场单位完成新模板装备补给所需时间超过此期限，AI将避免对其进行升级



GIE_EXILE_AIR_MANPOWER_USAGE_RATIO = 0.2, — AI will not deploy new exile wings when this percentage of available exile manpower is already used for wing recruitment.

GIE_EXILE_AIR_MANPOWER_USAGE_RATIO = 0.2, —— 当可用的流亡者人力已有此比例被用于航空联队招募时，AI将不再部署新的流亡者航空联队。



CARRIER_TASKFORCE_MAX_CARRIER_COUNT = 4, 		— optimum carrier count for carrier taskforces

CARRIER_TASKFORCE_MAX_CARRIER_COUNT = 4, — 航母特遣部队的最佳航母数量

CAPITAL_TASKFORCE_MAX_CAPITAL_COUNT = 12, 		— optimum capital count for capital taskforces

CAPITAL_TASKFORCE_MAX_CAPITAL_COUNT = 12, — 首都特遣部队的最优数量

SCREEN_TASKFORCE_MAX_SHIP_COUNT = 12,			— optimum screen count for screen taskforces

SCREEN_TASKFORCE_MAX_SHIP_COUNT = 12, —— 屏卫特遣舰队的最佳舰船数量

SUB_TASKFORCE_MAX_SHIP_COUNT = 16 ,				— optimum sub count for sub taskforces

SUB_TASKFORCE_MAX_SHIP_COUNT = 16 , — 子任务部队的最佳舰船数量



MIN_CAPITALS_FOR_CARRIER_TASKFORCE = 6,			— carrier fleets will at least have this amount of capitals

MIN_CAPITALS_FOR_CARRIER_TASKFORCE = 6, —— 航母舰队至少会拥有此数量的主力舰

CAPITALS_TO_CARRIER_RATIO = 1.5,				— capital to carrier count in carrier taskfoces

CAPITALS_TO_CARRIER_RATIO = 1.5，——航母特遣部队中主力舰与航母的比例

SCREENS_TO_CAPITAL_RATIO = 4.0,					— screens to capital/carrier count in carrier & capital taskforces

屏幕与主力舰比例 = 4.0, —— 在航母与主力舰特遣舰队中屏幕舰与主力舰/航母的数量比



MIN_MAIN_SHIP_RATIO = 0.3, — if main ship ratio is below this, steal other ships.

MIN_MAIN_SHIP_RATIO = 0.3, ——若主舰比例低于此值，则窃取其他舰船。

MIN_SUPPORT_SHIP_RATIO = 0.7, — if support ship ratio is below this, steal other ships.

MIN_SUPPORT_SHIP_RATIO = 0.7, —— 如果支援舰比例低于此值，则窃取其他舰船。

MIN_MAIN_SHIP_RATIO_TO_REINFORCE = 0.5, — the main ships will be tried to reinforce this level.

MIN_MAIN_SHIP_RATIO_TO_REINFORCE = 0.5, —— 主力舰船将尝试强化至该比例水平。

MIN_SUPPORT_SHIP_RATIO_TO_REINFORCE = 0.9, — the support ships will be tried to reinforce this level.

MIN_SUPPORT_SHIP_RATIO_TO_REINFORCE = 0.9, —— 支援舰船将尝试补强至该比例水平。

MIN_MAIN_SHIP_TO_SPARE = 0.7, — can only steal ships from a task force if their main ship ratio is above this.

MIN_MAIN_SHIP_TO_SPARE = 0.7, ——只有当舰队主力舰比例高于此值时，才能从中夺取舰船。

MIN_SUPPORT_SHIP_TO_SPARE = 1.0, — can only steal ships from a task force if their support ship ratio is above this.

MIN_SUPPORT_SHIP_TO_SPARE = 1.0, —— 只有当特遣队的支援舰比例超过此值时，才能从中窃取舰船。

MIN_MAIN_SHIP_RATIO_TO_MERGE = 0.7, — try merge task force if main ship ratio is lower than this.

MIN_MAIN_SHIP_RATIO_TO_MERGE = 0.7, —— 若主力舰比例低于此值，则尝试合并特遣舰队。

MAX_MAIN_SHIP_RATIO_TO_MERGE = 1.001, — if resulting main ship ratio would be at most this, allow merging into this task force.

MAX_MAIN_SHIP_RATIO_TO_MERGE = 1.001, —— 若合并后主力舰比例不超过此值，则允许合并至该特遣舰队。

MAIN_SHIP_RATIO_TO_SPLIT = 1.8, — if main ship ratio in a task force is larger than this, split it. (If a carrier TF wants 4 carriers (see defines above), but it has more than [this * 4] carriers, then we try to split the TF.)

主力舰比例拆分阈值 = 1.8, ——若某任务舰队中主力舰比例高于此值，则进行拆分。（例如航母特遣队需要4艘航母（参见上文定义），但当其航母数量超过[此值*4]时，系统将尝试拆分该舰队。）



MISSION_FLEET_ICONS = {

MISSION_FLEET_ICONS = {

4, — HOLD

4，——持有

29, — PATROL

29，——巡逻

21, — STRIKE FORCE

21，——突击部队

15, — CONVOY RAIDING

15，— 护航突袭

23, — CONVOY ESCORT

23，——护航编队

24, — MINES PLANTING

24，——地雷埋设

5, — MINES SWEEPING

5，——扫雷行动

4, — TRAIN

4，— 火车

4, — RESERVE_FLEET

4，— 后备舰队

9, — NAVAL INVASION SUPPORT

9，——海军入侵支援

},



MIN_NAVAL_MISSION_PRIO_TO_ASSIGN = { — priorities for regions to get assigned to a mission

MIN_NAVAL_MISSION_PRIO_TO_ASSIGN = { —— 为区域分配任务时的优先级设定

0, — HOLD (consumes fuel HOLD_MISSION_MOVEMENT_COST fuel while moving)

0，— 保持（移动时消耗HOLD_MISSION_MOVEMENT_COST燃料）

200, — PATROL

200，— 巡逻

200, — STRIKE FORCE

200，——突击部队

200, — CONVOY RAIDING

200，——护航突袭

100, — CONVOY ESCORT

100，——护航编队

200, — MINES PLANTING

200，——地雷布设

100, — MINES SWEEPING

100，——扫雷行动

0, — TRAIN

0，—— 火车

0, — RESERVE_FLEET

0，— 后备舰队

100, — NAVAL INVASION SUPPORT

100，——海军登陆支援

},



HIGH_PRIO_NAVAL_MISSION_SCORES = { — priorities for regions to get assigned to a mission

HIGH_PRIO_NAVAL_MISSION_SCORES = { — 为区域分配任务时的优先级评分

0, — HOLD (consumes fuel HOLD_MISSION_MOVEMENT_COST fuel while moving)

0，— 保持（移动时消耗HOLD_MISSION_MOVEMENT_COST燃料）

100000, — PATROL

10000，— 巡逻

1000, — STRIKE FORCE

1000，——突击部队

1500, — CONVOY RAIDING

1500，— 护航队突袭

1000, — CONVOY ESCORT

1000，— 护航舰队

-1, — MINES PLANTING

-1， — 地雷布设

300, — MINES SWEEPING

300，——扫雷

0, — TRAIN

0，—— 火车

0, — RESERVE_FLEET

0，— 后备舰队

1000, — NAVAL INVASION SUPPORT

1000，——海军登陆支援

},



MAX_MISSION_PER_TASKFORCE = { — max mission region/taskforce ratio

MAX_MISSION_PER_TASKFORCE = { — 每个特遣队的最大任务区域/特遣队比例

0, — HOLD (consumes fuel HOLD_MISSION_MOVEMENT_COST fuel while moving)

0，— 保持（移动时消耗HOLD_MISSION_MOVEMENT_COST燃料）





1.5, — PATROL


1.5，——巡逻


6, — STRIKE FORCE

6，— 突击部队





1.5, — CONVOY RAIDING


1.5，——护航袭击


4, — CONVOY ESCORT

4，——护航编队

2, — MINES PLANTING

2，——地雷布设

2, — MINES SWEEPING

2，——扫雷

0, — TRAIN

0，—— 火车

0, — RESERVE_FLEET

0，— 后备舰队

10, — NAVAL INVASION SUPPORT

10，——海军入侵支援

},



— all-screen taskforces will be shared between convoy defense, mine missions and patrols (in this prio)

— 全屏特遣队将按优先顺序分配于护航防御、扫雷任务及巡逻任务之间（优先级如上）

— and these ratios limits the maximum ratio of these taskforces to allocate on type

——这些比率限制了分配给此类任务的最大比例

MAX_SCREEN_TASKFORCES_FOR_CONVOY_DEFENSE_MIN = 0.20, — maximum ratio of all screen-ships forces to be used in convoy defense (increases up to max as AI loses convoys).

MAX_SCREEN_TASKFORCES_FOR_CONVOY_DEFENSE_MIN = 0.20, —— 用于护航防御的所有屏护舰艇力量的最大比例（随着AI损失运输船队而逐步提升至上限）。

MAX_SCREEN_TASKFORCES_FOR_CONVOY_DEFENSE_MAX = 0.70, — maximum ratio of all screen-ships forces to be used in convoy defense (increases up to max as AI loses convoys).

MAX_SCREEN_TASKFORCES_FOR_CONVOY_DEFENSE_MAX = 0.70, —— 用于护航防御的所有屏护舰船部队的最大比例（随AI损失运输船数量增加至上限）。

MAX_SCREEN_TASKFORCES_FOR_CONVOY_DEFENSE_MIN_CONVOY_THREAT = 100, — AI will increase screen assignment for escort missions as threate increases

MAX_SCREEN_TASKFORCES_FOR_CONVOY_DEFENSE_MIN_CONVOY_THREAT = 100, — 随着威胁等级提升，AI将增加护航任务中的警戒舰队配置

MAX_SCREEN_TASKFORCES_FOR_CONVOY_DEFENSE_MAX_CONVOY_THREAT = 1500,— AI will increase screen assignment for escort missions as threate increases

MAX_SCREEN_TASKFORCES_FOR_CONVOY_DEFENSE_MAX_CONVOY_THREAT = 1500,— 随着威胁等级上升，AI将增加护航任务中的屏护舰队配置



MAX_SCREEN_TASKFORCES_FOR_MINE_SWEEPING = 0.10, — maximum ratio of screens forces to be used in mine sweeping

MAX_SCREEN_TASKFORCES_FOR_MINE_SWEEPING = 0.10, —— 用于扫雷的警戒部队最大比例

MAX_SCREEN_TASKFORCES_FOR_MINE_SWEEPING_PRIO = 0.8, — if you have mines near your owned states, you will start priotize mine missions and will assign this ratio of screens

MAX_SCREEN_TASKFORCES_FOR_MINE_SWEEPING_PRIO = 0.8, ——若你拥有的省份附近有水雷，将优先执行扫雷任务并分配此比例的护航舰艇

MAX_SCREEN_TASKFORCES_FOR_MINE_SWEEPING_PRIO_MIN_MINES = 10, — lowest mine for prioing mine missions

MAX_SCREEN_TASKFORCES_FOR_MINE_SWEEPING_PRIO_MIN_MINES = 10, —— 扫雷任务优先处理的最低水雷数量

MAX_SCREEN_TASKFORCES_FOR_MINE_SWEEPING_PRIO_MAX_MINES = 1000, — highest mines for highest prio for mine missions

MAX_SCREEN_TASKFORCES_FOR_MINE_SWEEPING_PRIO_MAX_MINES = 1000, — 扫雷任务最高优先级对应的最大水雷数量



MAX_SCREEN_TASKFORCES_FOR_MINE_LAYING = 0.10, — maximum ratio of screens forces to be used in mine laying

MAX_SCREEN_TASKFORCES_FOR_MINE_LAYING = 0.10, — 用于布雷任务中护航舰队力量的最大比例

MAX_SCREEN_FORCES_FOR_INVASION_SUPPORT = 0.25, — max ratio of screens forces to be used in naval invasion missions

MAX_SCREEN_FORCES_FOR_INVASION_SUPPORT = 0.25, —— 海军入侵任务中护航舰队的最大使用比例

MAX_CAPITAL_FORCES_FOR_INVASION_SUPPORT = 0.25, — max ratio of capital forces to be used in naval invasion missions

MAX_CAPITAL_FORCES_FOR_INVASION_SUPPORT = 0.25, —— 用于海军入侵任务的最大主力部队比例

MAX_PATROL_TO_STRIKE_FORCE_RATIO = 3.0,	— maximum patrol/strike force ratio

MAX_PATROL_TO_STRIKE_FORCE_RATIO = 3.0, — 最大巡逻/打击部队比例



— <start> construction prioritization

— <start> 施工优先级排序

CONSTRUCTION_PRIO_INFRASTRUCTURE = 0.20, — base prio for infrastructure in the construction queue

CONSTRUCTION_PRIO_INFRASTRUCTURE = 0.20, — 基础设施在建造队列中的基础优先级

CONSTRUCTION_PRIO_CIV_FACTORY = 0.80, — base prio for civilian factories in the construction queue

CONSTRUCTION_PRIO_CIV_FACTORY = 0.80, — 民用工厂在建造队列中的基础优先级

CONSTRUCTION_PRIO_MIL_FACTORY = 0.70, — base prio for military factories in the construction queue

CONSTRUCTION_PRIO_MIL_FACTORY = 0.70, — 军事工厂在建造队列中的基础优先级

CONSTRUCTION_PRIO_SUPPLY_BUILDING = 1.10, — base prio for supply buildings (supply hubs, ports) in the construction queue

CONSTRUCTION_PRIO_SUPPLY_BUILDING = 1.10, —— 补给建筑（补给中心、港口）在建造队列中的基础优先级

CONSTRUCTION_PRIO_RAILWAY = 4.00, — base prio for railways in the construction queue

CONSTRUCTION_PRIO_RAILWAY = 4.00, — 铁路在建设队列中的基础优先级

CONSTRUCTION_PRIO_RAILWAY_GUN_REPAIR = 15.00, — base prio for railway gun repairs in the construction queue

CONSTRUCTION_PRIO_RAILWAY_GUN_REPAIR = 15.00, — 建筑队列中铁路炮修理的基础优先级

CONSTRUCTION_PRIO_UNSPECIFIED = 0.50, — base prio for unspecified buildings (none of the categories above) in the construction queue

CONSTRUCTION_PRIO_UNSPECIFIED = 0.50, —— 建筑队列中未指定建筑（不属于上述任何类别）的基础优先级

CONSTRUCTION_PRIO_FACTOR_OCCUPIED_TERRITORY = 1.00, — factor prio with this if occupied territory

CONSTRUCTION_PRIO_FACTOR_OCCUPIED_TERRITORY = 1.00, — 若为占领领土，则以此优先级系数计算

CONSTRUCTION_PRIO_FACTOR_OWNED_NONCORE = 1.50, — factor prio with this if owned non-core territory

CONSTRUCTION_PRIO_FACTOR_OWNED_NONCORE = 1.50, — 如果是拥有的非核心领土，则以此优先级系数计算

CONSTRUCTION_PRIO_FACTOR_OWNED_CORE = 2.00, — factor prio with this if owned core territory

CONSTRUCTION_PRIO_FACTOR_OWNED_CORE = 2.00, — 如果是拥有的核心领土，则以此为优先级因子

CONSTRUCTION_PRIO_FACTOR_REPAIRING = 0.30, — factor prio with this if building is being repaired

CONSTRUCTION_PRIO_FACTOR_REPAIRING = 0.30, — 若建筑正在维修，则采用此优先级系数

— <end> construction prioritization

— <end> 施工优先级设定



MAX_FACTORY_TO_SPARE_FOR_MISSION_FUEL_TRADE = 0.12, 						— amount of factories to spend on oil trade in case of fuel need for missions

MAX_FACTORY_TO_SPARE_FOR_MISSION_FUEL_TRADE = 0.12, —— 为任务燃料需求进行石油贸易时预留的工厂数量比例

MAX_FACTORY_TO_SPARE_FOR_CRITICAL_MISSION_FUEL_TRADE = 0.3, 			— amount of factories to spend on oil trade in case of fuel need for prio missions

MAX_FACTORY_TO_SPARE_FOR_CRITICAL_MISSION_FUEL_TRADE = 0.3, —— 在优先任务需要燃料时，用于石油贸易的工厂数量比例

MAX_FACTORY_TO_TRADE_FOR_FUEL = 0.5,

MAX_FACTORY_TO_TRADE_FOR_FUEL = 0.5,

FUEL_TRADE_PRIO_FOR_CONVOY_DEFENSE = 0.3,								— AI will be less reluctant to cancel convoy missions if it is trading for oil

FUEL_TRADE_PRIO_FOR_CONVOY_DEFENSE = 0.3, —— 当AI正在交易石油时，它会减少取消护航任务的不情愿程度



MAX_FACTORY_TO_SPARE_FOR_MISSION_FUEL_TRADE_IN_PEACE = 0.03, 			— amount of factories to spend on oil trade in case of fuel need for missions in peace time

MAX_FACTORY_TO_SPARE_FOR_MISSION_FUEL_TRADE_IN_PEACE = 0.03, —— 和平时期为任务燃油需求预留用于石油贸易的工厂比例

MAX_FACTORY_TO_SPARE_FOR_CRITICAL_MISSION_FUEL_TRADE_IN_PEACE = 0.1, 	— amount of factories to spend on oil trade in case of fuel need for prio missions in peace time

MAX_FACTORY_TO_SPARE_FOR_CRITICAL_MISSION_FUEL_TRADE_IN_PEACE = 0.1, ——和平时期优先任务需要燃料时用于石油贸易的工厂数量

MAX_FACTORY_TO_TRADE_FOR_FUEL_IN_PEACE = 0.15,

MAX_FACTORY_TO_TRADE_FOR_FUEL_IN_PEACE = 0.15,



FUEL_REQUEST_RATIO_FOR_COMBATS = 0.6,									— ratio of ship combat fuel cost that is to be considered in fuel usage and request system

FUEL_REQUEST_RATIO_FOR_COMBATS = 0.6, ——舰船战斗燃料成本中需计入燃料使用与申请系统的比例

PRIO_FUEL_REQUEST_RATIO_FOR_COMBATS = 0.8,								— ratio of ship combat fuel cost that is to be considered in prio fuel usage and request system

PRIO_FUEL_REQUEST_RATIO_FOR_COMBATS = 0.8, —— 在优先级燃料使用和请求系统中，考虑舰船战斗燃料消耗的比例



FUEL_REQUEST_RATIO_FOR_MOVEMENT = 0.4,									— ratio of ship movement fuel cost that is to be considered in fuel usage and request system

FUEL_REQUEST_RATIO_FOR_MOVEMENT = 0.4, —— 在燃料使用和请求系统中考虑的舰船移动燃料成本比例

PRIO_FUEL_REQUEST_RATIO_FOR_MOVEMENT = 0.2,								— ratio of ship movement fuel cost that is to be considered in prio fuel usage and request system

PRIO_FUEL_REQUEST_RATIO_FOR_MOVEMENT = 0.2, —— 在优先级燃料使用和请求系统中考虑的船舶移动燃料成本比例



NAVY_ACTUAL_FUEL_USAGE_WEIGHT_ON_OIL_REQUEST = 0.5, 					— weight of actual fuel usage of ships compared to what is being asked for missions while calculating oil needed for trade

NAVY_ACTUAL_FUEL_USAGE_WEIGHT_ON_OIL_REQUEST = 0.5, —— 计算贸易所需石油时，舰船实际燃料使用量与任务需求量的比较权重

AIR_ACTUAL_FUEL_USAGE_WEIGHT_ON_OIL_REQUEST = 0.5, 						— weight of actual fuel usage of planes compared to what is being asked for missions while calculating oil needed for trade

AIR_ACTUAL_FUEL_USAGE_WEIGHT_ON_OIL_REQUEST = 0.5, — 在计算贸易所需石油时，飞机实际燃油使用量与任务要求燃油量相比的权重



MONTHS_TO_FILL_FUEL_BUFFER_WITH_OIL_REQUESTS = 6.0, 					— in war time, coutries will try to fill their buffer in this duration and trade for oil if necesarry

MONTHS_TO_FILL_FUEL_BUFFER_WITH_OIL_REQUESTS = 6.0, ——战争时期，各国将努力在此期限内填补燃料储备，必要时进行石油贸易。

MONTHS_TO_FILL_FUEL_BUFFER_WITH_OIL_REQUESTS_IN_PEACE_TIME = 10.0, — in peace time, coutries will try to fill their buffer in this duration and trade for oil if necesarry

和平时期填充燃料缓冲所需的月数 = 10.0，——在和平时期，各国将尝试在此期限内填满其缓冲，并在必要时进行石油贸易。



FUEL_CONSUMPTION_MULT_FOR_FUEL_SAVING_MODE = 0.25,				— fuel consumptions will be limited by this ratio in fuel saving mode

FUEL_CONSUMPTION_MULT_FOR_FUEL_SAVING_MODE = 0.25, — 节油模式下燃油消耗将按此比例限制

FUEL_CONSUMPTION_MULT_REGULAR_FUEL_MODE = 1.0,					— fuel consumptions will be limited by this ratio in regular fuel mode

FUEL_CONSUMPTION_MULT_REGULAR_FUEL_MODE = 1.0, — 在常规燃油模式下，燃油消耗将按此比例限制

FUEL_CONSUMPTION_MULT_AGRESSIVE_FUEL_MODE = 3.0,				— fuel consumptions will be limited by this ratio in aggressive fuel usage mode

FUEL_CONSUMPTION_MULT_AGRESSIVE_FUEL_MODE = 3.0, — 在激进燃油使用模式下，燃油消耗将受此比例限制



DAYS_FUEL_REMAINING_TO_ENTER_FUEL_SAVING_MODE = 30,				— countries will enter fuel saving mode if they will be out of fuel in this number of days and their fuel ratio is below next define

燃料剩余天数进入节能模式阈值 = 30, —— 如果国家将在这一天数内耗尽燃料且其燃料比例低于下一个定义值，则将进入节能模式

DAYS_FUEL_REMAINING_TO_ENTER_FUEL_SAVING_MODE_FUEL_RATIO = 0.4,

剩余燃料天数进入节能模式的燃料比例 = 0.4,



FUEL_RATIO_TO_EXIST_FUEL_SAVING_MODE = 0.60, 					— countries will exit fuel saving mode if they have more fuel ratio than this

FUEL_RATIO_TO_EXIST_FUEL_SAVING_MODE = 0.60, — 国家若燃料比例高于此值将退出节能模式



WANTED_MAX_FUEL_BUFFER_IN_DAYS_FOR_ARMY_MAX_CONSUMPTION = 60, — AI will try to buffer at least this amount of days on max consumption, will trade if necesarry and will go into fuel saving mode/aggresive mode using this buffer

陆军最大消耗所需燃料缓冲天数上限 = 60, —— AI将尝试在最大消耗下至少维持这么多天的燃料缓冲，必要时会进行贸易，并依据此缓冲量进入燃料节省模式或激进模式

WANTED_MAX_FUEL_BUFFER_IN_DAYS_FOR_AIR_MAX_CONSUMPTION = 60, — AI will try to buffer at least this amount of days on max consumption, will trade if necesarry and will go into fuel saving mode/aggresive mode using this buffer

WANTED_MAX_FUEL_BUFFER_IN_DAYS_FOR_AIR_MAX_CONSUMPTION = 60, —— AI将尝试至少按最大消耗量储备这么多天的燃料，必要时会进行交易，并利用此缓冲进入燃料节约模式/激进模式

WANTED_MAX_FUEL_BUFFER_IN_DAYS_FOR_NAVY_MAX_CONSUMPTION = 60, — AI will try to buffer at least this amount of days on max consumption, will trade if necesarry and will go into fuel saving mode/aggresive mode using this buffer

海军最大消耗所需燃料缓冲天数上限 = 60，——AI将尝试至少储备满足最大消耗这么多天的燃料，必要时会进行交易，并依据此缓冲值进入燃料节约模式/激进模式

MIN_WANTED_MAX_FUEL = 50,									 — minimum value for wanted fuel buffers for AI (in thousands)

MIN_WANTED_MAX_FUEL = 50, —— AI所需燃料缓冲区的最小值（以千为单位）



GIE_LEND_LEASE_TO_PLAYER_EXILE_DESIRE_BONUS = 40, — AI host is more likely to accept lend lease requests from a player.

GIE_LEND_LEASE_TO_PLAYER_EXILE_DESIRE_BONUS = 40, — AI主机更有可能接受玩家提出的租借请求。



NAVAL_BASE_RATIO_ALLOCATED_FOR_REPAIRS = 0.25,				— ai will allocate at most this ratio of dockyards for repairs in peace time

NAVAL_BASE_RATIO_ALLOCATED_FOR_REPAIRS = 0.25，——和平时期AI最多分配此比例的船坞用于维修

NAVAL_BASE_RATIO_ALLOCATED_FOR_REPAIRS_IN_WAR_TIME = 0.6,	— ai will allocate at most this ratio of dockyards for repairs in war time

战时海军基地维修分配比例上限 = 0.6, —— 人工智能在战时最多分配此比例的船坞用于维修



MAX_FUEL_CONSUMPTION_RATIO_FOR_AIR_TRAINING = 0.20,			— ai will use at most this ratio of affordable fuel for air training

MAX_FUEL_CONSUMPTION_RATIO_FOR_AIR_TRAINING = 0.20, — 人工智能将最多使用可承受燃料的这一比例进行空中训练

MAX_FUEL_CONSUMPTION_RATIO_FOR_NAVY_TRAINING = 0.20,		— ai will use at most this ratio of affordable fuel for naval training

MAX_FUEL_CONSUMPTION_RATIO_FOR_NAVY_TRAINING = 0.20, — 人工智能在海军训练中最多将使用此比例的可支配燃料



MAX_FULLY_TRAINED_SHIP_RATIO_FOR_TRAINING = 0.7,			— ai will not train a taskforce if fully trained ships are above this ratio

MAX_FULLY_TRAINED_SHIP_RATIO_FOR_TRAINING = 0.7, —— 当完全训练舰船比例超过此阈值时，AI将停止训练该特遣舰队



NUM_SILOS_PER_CIVILIAN_FACTORIES = 0.0025,					— ai will try to build a silo per this ratio of civ factories

NUM_SILOS_PER_CIVILIAN_FACTORIES = 0.0025, — 人工智能将尝试按照与民用工厂数量的这一比例建造导弹发射井

NUM_SILOS_PER_MILITARY_FACTORIES = 0.012,					— ai will try to build a silo per this ratio of mil factories

每座军事工厂对应的导弹发射井数量 = 0.012, —— AI将尝试按照与军事工厂的这一比例建造导弹发射井

NUM_SILOS_PER_DOCKYARDS = 0.02,								— ai will try to build a silo per this ratio of dockyards

NUM_SILOS_PER_DOCKYARDS = 0.02, —— 人工智能将尝试按此比例建造与船坞数量相对应的导弹发射井



SHIP_STR_RATIO_PUT_ON_REPAIRS = 0.8,						— if ships are damaged below this ratio, they are put for repairs

SHIP_STR_RATIO_PUT_ON_REPAIRS = 0.8, ——若舰船损伤比例低于此值，则送修

SHIP_STR_RATIO_EXIT_REPAIRS = 1.00,							— the ships will leave repairs if they are >= this ratio of total str

SHIP_STR_RATIO_EXIT_REPAIRS = 1.00，——当船只的结构强度达到或超过此总强度比例时，它们将离开修理状态。

REPAIR_TASKFORCE_SIZE = 4,									— repair taskforce sizes are limited to this many ships

REPAIR_TASKFORCE_SIZE = 4, — 修理任务队的船只数量限制为此数值



PLAN_VALUE_BONUS_FOR_MOVING_UNITS = 0.35,					— AI plans gets a bonus when units are not moving and ready to fight

PLAN_VALUE_BONUS_FOR_MOVING_UNITS = 0.35, —— 当单位静止不动并准备战斗时，AI计划会获得加成

AGGRESSIVENESS_BONUS_FOR_FRONTS_THAT_ARE_ON_HIGH_AGGRESSIVENESS	= -0.4,	— AI gets a bonus to aggresiveness if it is already executing an aggressive plan (lower is more aggressive)

处于高侵略性前线的侵略性加成 = -0.4, —— 如果AI已经在执行侵略性计划，则其侵略性将获得加成（数值越低侵略性越强）

AGGRESSIVENESS_CHECK_BASE = 1.5,							— front comparison where ai will consider aggressive stance, unless it is already then the number above is used

AGGRESSIVENESS_CHECK_BASE = 1.5，——前端比较，AI将考虑采取激进姿态，除非已处于该状态，此时将使用上述数值。

AGGRESSIVENESS_CHECK_EASY_TARGET = -0.3,					— if target nation is flagged as easy target we also adjust down the front comparison needed

AGGRESSIVENESS_CHECK_EASY_TARGET = -0.3, — 若目标国家被标记为易攻目标，我们也会相应降低前线对比所需值

AGGRESSIVENESS_CHECK_CAREFUL = 0.6,							— at what front strength balance do we go careful

AGGRESSIVENESS_CHECK_CAREFUL = 0.6, —— 在什么前方强度平衡下我们会采取谨慎态度

AGGRESSIVENESS_CHECK_PARTLY_FORTIFIED = 2.0,				— if front strength balance is at or above this value versus a party fortified enemy, we do a balanced attack

AGGRESSIVENESS_CHECK_PARTLY_FORTIFIED = 2.0, —— 若前线实力对比达到或超过此值对抗部分设防的敌人时，我们将采取平衡进攻策略

AGGRESSIVENESS_CHECK_PARTLY_FORTIFIED_WEAK_POINTS = 0.75,	— if front strength balance is at or above this value versus a party fortified enemy, we rush attack weak points; below this value, we are careful

AGGRESSIVENESS_CHECK_PARTLY_FORTIFIED_WEAK_POINTS = 0.75, ——若前线力量对比达到或超过此值对抗部分设防的敌人时，我军将猛攻薄弱点；低于此值则谨慎行事

AGGRESSIVENESS_CHECK_FULLY_FORTIFIED = 10,					— if front strength balance is at or above this value versus a fully fortified enemy with no weak points, we do a balanced attack instead being careful

AGGRESSIVENESS_CHECK_FULLY_FORTIFIED = 10，——若前线力量对比针对一个完全巩固、无弱点的敌人达到或超过此数值，我们将采取平衡进攻而非谨慎行动。

AGGRESSIVENESS_CHECK_FULLY_FORTIFIED_POCKET = 6,			— if front strength balance is at or above this value versus a fully fortified enemy in a pocket, we do a balanced attack instead being careful

AGGRESSIVENESS_CHECK_FULLY_FORTIFIED_POCKET = 6, —— 若对口袋中完全设防敌人的前线力量平衡达到或超过此值，则采取平衡进攻而非谨慎行动

FRONT_EVAL_UNIT_ACCURACY = 1.0,								— scale how stupid ai will act on fronts. 0 is potato

前线评估单元精度 = 1.0，——调整AI在前线的愚蠢行为程度，0表示极其低能

FRONT_EVAL_UNIT_AIR_SUP_IMPACT = 1.0, — scale how good the AI thinks air superiority is for units

FRONT_EVAL_UNIT_AIR_SUP_IMPACT = 1.0, —— 调整AI对单位制空权优势重要性的评估尺度

FRONT_EVAL_UNIT_SUPPLY_AND_ORG_LACK_IMPACT = 1.0,			— scale how painful the AI thinks a combined lack of supply and organization is for units

FRONT_EVAL_UNIT_SUPPLY_AND_ORG_LACK_IMPACT = 1.0, —— 该数值用于调整AI对单位同时缺乏补给与组织度所造成负面影响的评估权重

FRONT_EVAL_PERCENT_TO_ASSIST_ALLY_FRONT = 0.5, 				— percentage of how many units the AI thinks it should have compared to an ally before considering sending units

FRONT_EVAL_PERCENT_TO_ASSIST_ALLY_FRONT = 0.5, —— AI认为需要拥有相对于盟友多少比例的部队才会考虑派遣援军的百分比



PRODUCTION_CARRIER_PLANE_BUFFER_RATIO = 1.5,				— in addition to total deck size of carriers, we want at least this ratio to buffer it

PRODUCTION_CARRIER_PLANE_BUFFER_RATIO = 1.5, ——除了航母总甲板容量外，我们还需要至少这个比例作为缓冲

PRODUCTION_CARRIER_PLANE_PRODUCTION_BOOST_TO_BUFFER = 4.0, — production of carrier planes will go up by this ratio if we lack buffers

PRODUCTION_CARRIER_PLANE_PRODUCTION_BOOST_TO_BUFFER = 4.0, — 如果我们缺乏缓冲，舰载机的产量将按此比例提升



NAVAL_MAX_CONVOY_TO_INTEL_FOR_CONVOY_RAIDS = 200, — number of convoys in region will be clamped to this max, anything more will be ignored while assigning raids

NAVAL_MAX_CONVOY_TO_INTEL_FOR_CONVOY_RAIDS = 200, — 区域内护航船队的最大数量将被限制在此值，超出部分在分配袭击任务时将不予考虑

EXTRA_NAVY_INTEL_FOR_CONVOY_RAIDING = 0.0, — this amount of intel is added to navy intel while ai is assigning convoy raiding mission

EXTRA_NAVY_INTEL_FOR_CONVOY_RAIDING = 0.0, —— 在AI分配护航舰队袭击任务时，该数值会额外增加至海军情报中

INTEL_NEEDED_TO_NEGATVE_CONVOY_COUNT_REDUCTION = 80.0, — navy intel is divided by this ratio to negate NAVAL_CONVOY_COUNT_INTEL_DROPOFF_DUE_TO_LOW_DECYPTION

INTEL_NEEDED_TO_NEGATVE_CONVOY_COUNT_REDUCTION = 80.0, —— 海军情报值将除以该比率以抵消因低解密能力导致的NAVAL_CONVOY_COUNT_INTEL_DROPOFF_DUE_TO_LOW_DECYPTION

NAVAL_CONVOY_COUNT_INTEL_DROPOFF_DUE_TO_LOW_DECYPTION = 200, — on lowest navy intel, ai won’t be able to see enemy convoys lower than this ratio

NAVAL_CONVOY_COUNT_INTEL_DROPOFF_DUE_TO_LOW_DECYPTION = 200, —— 当海军情报解密等级最低时，AI将无法察觉低于此比例的敌方护航船队



CONVOY_RAID_SCORE_FROM_CONVOY_INTELLIGENCE = 2.5,			 — each convoy intelligenge will incease raid score by this

CONVOY_RAID_SCORE_FROM_CONVOY_INTELLIGENCE = 2.5, —— 每份护航情报将使袭击评分增加该数值



AIR_AI_ENEMY_PROV_RATIO_FOR_COMBAT_REGION = 0.15,			 — if a region has more than this ratio of provinces controlled by enemy, AI will consider it as a combat zone while assigning planes

AIR_AI_ENEMY_PROV_RATIO_FOR_COMBAT_REGION = 0.15, —— 若某区域内敌方控制的省份比例超过此值，AI在分配飞机时会将此区域视为战斗区域



RESEARCH_MULTI_DOCTRINE_SCORE = 0.3, — score penalty to researchign multiple doctrines at once for AI

RESEARCH_MULTI_DOCTRINE_SCORE = 0.3, —— AI同时研究多个学说时的分数惩罚

CONVOY_ESCORT_SCORE_FROM_CONVOYS = 15, — score for each convoy you have in area

CONVOY_ESCORT_SCORE_FROM_CONVOYS = 15, — 每个在区域内的护航船队提供的分数

CONVOY_ESCORT_MUL_FROM_NO_CONVOYS = 0.02, 	 — score multiplier when no convoys are around

CONVOY_ESCORT_MUL_FROM_NO_CONVOYS = 0.02, —— 当周围没有运输船队时的分数乘数

CONVOY_RAID_MIN_ENEMY_THREAT = 0.05,

CONVOY_RAID_MIN_ENEMY_THREAT = 0.05,



RAILWAY_GUN_PRODUCTION_BASE_DIVISIONS_RATIO_PERCENT = 0,	— Base ratio of desired railway guns to divisions for AI (5 means 5%). Can be modified by railway_guns_divisions_ratio AI strategy value

RAILWAY_GUN_PRODUCTION_BASE_DIVISIONS_RATIO_PERCENT = 0, —— AI期望的铁路炮与师级单位的基础比例（5表示5%）。可通过railway_guns_divisions_ratio AI策略值进行调整

RAILWAY_GUN_PRODUCTION_MIN_DIVISONS = 20,					— Minimum required number of divisions for the AI to consider producing railway guns

铁路炮生产最小师团数 = 20, ——AI考虑生产铁路炮所需的最小师团数量

RAILWAY_GUN_PRODUCTION_MIN_FACTORIES = 10,					— Minimum required number of military factories for the AI to consider producing railway guns

RAILWAY_GUN_PRODUCTION_MIN_FACTORIES = 10, — 人工智能考虑生产铁路炮所需的最低军事工厂数量

RAILWAY_GUN_PER_ARMY_CAP = 5,								— Maximum railway guns assigned to one army for the AI

RAILWAY_GUN_PER_ARMY_CAP = 5, ——AI为单个集团军分配的铁路炮最大数量

RAILWAY_GUN_ASSIGNMENT_SCORE_UNITCOUNT_MULTIPLIER = 10.0,	— Score multiplier for favoring orders groups with more units when assigning railway guns

RAILWAY_GUN_ASSIGNMENT_SCORE_UNITCOUNT_MULTIPLIER = 10.0, —— 在分配铁路炮时，对拥有更多单位的命令组给予分数加成的乘数

RAILWAY_GUN_ASSIGNMENT_SCORE_HOLD = 20,						— Score for keeping current assignment when assigning railway guns

铁路炮分配保留分数 = 20, —— 分配铁路炮时保持当前分配的分数



MAX_UNIT_RATIO_FOR_INVASIONS = 0.4, — countries won’t use armies more than this ratio of total units for invasions

MAX_UNIT_RATIO_FOR_INVASIONS = 0.4, —— 国家在入侵行动中使用的军队不会超过总兵力这一比例

MIN_UNIT_RATIO_FOR_INVASIONS = 0.1, — don’t allocate more divisions than this for naval invasions

MIN_UNIT_RATIO_FOR_INVASIONS = 0.1, —— 不要为海军入侵分配超过此比例的师团

MAX_INVASION_FRONT_SCORE = 1000, — max score for naval invasion front scores

MAX_INVASION_FRONT_SCORE = 1000, — 海军入侵前线分数的最大值

MIN_FRONT_SCORE_FOR_AFTER_INVASION_AREAS = 1500,			— min score for army fronts that are created on recently invaded regions

MIN_FRONT_SCORE_FOR_AFTER_INVASION_AREAS = 1500, —— 在最近被入侵区域创建的军队前线所需的最低分数



MIN_CONVOY_EFFICIENCY_TO_CANCEL_TRADES = 0.4,				— min efficiency (due to convoy raid) to cancel trades

MIN_CONVOY_EFFICIENCY_TO_CANCEL_TRADES = 0.4, -- 因护航袭击导致贸易取消的最低效率阈值

MIN_CONVOY_EFFICIENCY_TO_START_TRADES = 0.6,				— min efficiency (due to convoy raid) to start be able to trades

MIN_CONVOY_EFFICIENCY_TO_START_TRADES = 0.6, —— 由于护航袭击导致的最低效率阈值，达到此值才能开始贸易

MIN_CONVOY_EFFICIENCY_PER_WAR_SUPPORT_HIT = 0.6,			— percentage of warsupport hit you get is multiplied by this value and added to min convoy efficiencies

MIN_CONVOY_EFFICIENCY_PER_WAR_SUPPORT_HIT = 0.6, —— 所承受的战争支持度打击百分比将乘以该值，并累加到最小运输船效率上



NAVAL_INVADED_AREA_PRIO_DURATION = 90,								— after successful invasion, AI will prio the enemy area for this number of days

NAVAL_INVADED_AREA_PRIO_DURATION = 90, ——成功入侵后，AI将优先关注该敌方区域的天数

NAVAL_INVADED_AREA_PRIO_MULT = 1.2,									— fronts that belongs to recent invasions gets more prio

NAVAL_INVADED_AREA_PRIO_MULT = 1.2, -- 属于近期入侵区域的战线将获得更高优先级

MIN_NUM_CONQUERED_PROVINCES_TO_DEPRIO_NAVAL_INVADED_FRONTS = 20,	— if you conquer this amount of provinces after a naval invasion, it will lose its prio status and will act as a regular front

MIN_NUM_CONQUERED_PROVINCES_TO_DEPRIO_NAVAL_INVADED_FRONTS = 20, — 若在海上入侵后占领此数量的省份，该前线将失去优先状态并作为常规前线运作



INVASION_TARGET_DISTANCE_DENOMINATOR = 1000, — When selecting invasion target, divide this with (pixel) distance to get distance score factor. (Doesn’t really affect the relative scoring, but it affects the linearity of the score function.)

INVASION_TARGET_DISTANCE_DENOMINATOR = 1000, — 选择入侵目标时，将此值除以（像素）距离以获取距离评分因子。（实际上不影响相对评分，但会影响评分函数的线性程度。）

INVASION_TARGET_NO_PORT_FACTOR = 0.3, — When selecting invasion target, multiply score with this if the target has no port

入侵目标无港口系数 = 0.3, —— 选择入侵目标时，若目标无港口，则用此值乘以分数

INVASION_TARGET_TRUNCATION_SELECT_THRESHOLD = 0.6, — When selecting invasion target, use this threshold for truncation selection. (1.0 means select highest scored target, 0.0 means select randomly from all possible target, 0.5 means select randomly from all targets with more than 50 % of highest score)

入侵目标截断选择阈值 = 0.6, —— 在选择入侵目标时，使用此阈值进行截断选择。（1.0 表示选择得分最高的目标，0.0 表示从所有可能目标中随机选择，0.5 表示从得分超过最高分50%的所有目标中随机选择）

INVASION_TARGET_PRIO_NOT_ENEMY_FACTOR = 0.17, — When calculating priority for an invasion, factor the score with this if the target is not an actual enemy.

INVASION_TARGET_PRIO_NOT_ENEMY_FACTOR = 0.17, —— 在计算入侵优先级时，若目标并非实际敌人，则用此系数调整得分。

FAILED_INVASION_AVOID_DURATION = 60, — after a failed invasion, AI will down-prioritize invading the same area again for this number of days

FAILED_INVASION_AVOID_DURATION = 60, —— 入侵失败后，AI将在指定天数内降低再次入侵同一区域的优先级

FAILED_INVASION_AREA_PRIO_FACTOR = 0.5, — for every failed invasion on an area, factor that area’s invasion prio with this value

FAILED_INVASION_AREA_PRIO_FACTOR = 0.5, —— 针对某区域的每次入侵失败，该区域的入侵优先级将乘以该系数

FAILED_INVASION_PORT_PRIO_FACTOR = 0.66, — for every failed invasion on a target port (province), factor the chance that we try to invade that same port again (relative to other ports)

FAILED_INVASION_PORT_PRIO_FACTOR = 0.66, ——对于每次针对目标港口（省份）的入侵失败后，我们会按此系数调整再次尝试入侵同一港口的概率（相对于其他港口而言）



BUILDING_TARGETS_BUILDING_PRIORITIES = {				— buildings in order of pirority when considering building targets strategies. First has the greatest priority, omitted has the lowest. NOTE: not all buildings are supported by building targets strategies.

BUILDING_TARGETS_BUILDING_PRIORITIES = { —— 建筑目标策略中按优先级排序的建筑列表。首位具有最高优先级，未列出的则优先级最低。注意：并非所有建筑都受建筑目标策略支持。

‘industrial_complex’,

‘工业综合体’，

},



MIN_INVASION_PLAN_VALUE_TO_EXECUTE = 0.3, — ai will only activate invasions if plan value is above this

MIN_INVASION_PLAN_VALUE_TO_EXECUTE = 0.3, —— 只有当计划价值超过此阈值时，AI才会启动入侵行动

MIN_INVASION_ORG_FACTOR_TO_EXECUTE = 0.9, — ai will only activate invasions if average org factor is above this

MIN_INVASION_ORG_FACTOR_TO_EXECUTE = 0.9, —— 只有当平均组织度因子高于此值时，AI才会发动入侵

MIN_INVASION_UNITS_READY_TO_EXECUTE = 0.9, — ai will only activate invasions if this ratio of assigned units are ready

MIN_INVASION_UNITS_READY_TO_EXECUTE = 0.9, —— 只有当已分配部队中达到此比例的兵力准备就绪时，AI才会发起入侵

MAX_INVASION_SIZE = 24, — max invasion group size

MAX_INVASION_SIZE = 24, —— 最大入侵群组规模



MAX_PORT_STRIKE_HISTORY_TO_REMEMBER = 5000,				— maximum port strike history to keep track (will be used to disable ports

MAX_PORT_STRIKE_HISTORY_TO_REMEMBER = 5000， — 记录的最大端口攻击历史数量（将用于禁用端口）

PORT_STRIKE_HISTORY_DECAY_MIN = 10,						— minimum decay for port strike history (<7 days since last port strike)

PORT_STRIKE_HISTORY_DECAY_MIN = 10, ——港口打击历史的最小衰减值（自上次港口打击起不满7天）

PORT_STRIKE_HISTORY_DECAY_MAX = 400,					— maximum decay for port strike history (>=37 days since last port strike)

港口打击历史衰减最大值 = 400, —— 港口打击历史的最大衰减值（距离上次港口打击≥37天）

MAX_PORT_RATIO_TO_DISABLE = 0.8,						— max ratio of ports to disable due to port strikes

MAX_PORT_RATIO_TO_DISABLE = 0.8, —— 因端口罢工而停用端口的最大比例

PORT_STRIKE_HISTORY_VALUE_TO_DISABLE_REPAIRS = 200,		— cut off for disabling ports above this threshold

PORT_STRIKE_HISTORY_VALUE_TO_DISABLE_REPAIRS = 200, // 港口罢工历史值超过此阈值时将禁用维修功能

PORT_STRIKE_HISTORY_VALUE_TO_REENABLE_REPAIRS = 10, — cut off for reenabling ports bloew this threshold

PORT_STRIKE_HISTORY_VALUE_TO_REENABLE_REPAIRS = 10, — 低于此阈值时重新启用港口维修的切断点



CURRENT_LAW_SCORE_BONUS = 50.0,							— current score will get an additional bonus to its ai weight

CURRENT_LAW_SCORE_BONUS = 50.0, — 当前分数将在其人工智能权重中获得额外加成

— these values are used for ai_desire_ variables that are used occupation law selection

— 这些数值用于ai_desire_变量，这些变量用于占领法律的选择。

OIL_WANT_PER_POTENTIAL_LAND_CONSUMPTION_K = 0.05, 	— how much extra oil requested on top of balance for country’s potential oil consumptions

OIL_WANT_PER_POTENTIAL_LAND_CONSUMPTION_K = 0.05, —— 在国家潜在石油消费基础上额外请求的石油量

OIL_WANT_PER_POTENTIAL_NAVY_CONSUMPTION_K = 0.03,

OIL_WANT_PER_POTENTIAL_NAVY_CONSUMPTION_K = 0.03,

OIL_WANT_PER_POTENTIAL_AIR_CONSUMPTION_K = 0.03,

OIL_WANT_PER_POTENTIAL_AIR_CONSUMPTION_K = 0.03,

OIL_WANT_PER_POTENTIAL_MISC_CONSUMPTION_K = 0.1,

OIL_WANT_PER_POTENTIAL_MISC_CONSUMPTION_K = 0.1,

OIL_WANT_AT_PEACE_PER_POTENTIAL_LAND_CONSUMPTION_K = 0.02,

OIL_WANT_AT_PEACE_PER_POTENTIAL_LAND_CONSUMPTION_K = 0.02,

OIL_WANT_AT_PEACE_PER_POTENTIAL_NAVY_CONSUMPTION_K = 0.0,

原油期望和平时期潜在海军消耗系数K = 0.0,

OIL_WANT_AT_PEACE_PER_POTENTIAL_AIR_CONSUMPTION_K = 0.0,

OIL_WANT_AT_PEACE_PER_POTENTIAL_AIR_CONSUMPTION_K = 0.0,

OIL_WANT_AT_PEACE_PER_POTENTIAL_MISC_CONSUMPTION_K = 0.1,

OIL_WANT_AT_PEACE_PER_POTENTIAL_MISC_CONSUMPTION_K = 0.1,

RESOURCE_WANT_PER_MISSING_BALANCE = 0.2,					— negative balance increases the desire on a resource

RESOURCE_WANT_PER_MISSING_BALANCE = 0.2, — 资源短缺时，负差额会增加对该资源的需求

RESOURCE_WANT_PER_CONSUMED = 0.05,							— if resource is being used in production, increase the desire

资源需求与消耗比 = 0.05, ——若资源正用于生产，则提高需求

— ~end

— ~结束



— crypto ai calculates a score & a threshold for each cracked crypto

——加密AI会为每个破解的加密货币计算一个分数和阈值

— if score > crypto, it activates the crypto

——如果得分高于加密值，则激活加密功能

CRYPTO_ACTIVATION_THRESHOLD = 1.25,				— will multiply crypto activation threshold. larger

CRYPTO_ACTIVATION_THRESHOLD = 1.25，——将乘以加密货币激活阈值。数值越大



CRYPTO_ACTIVATE_NUM_DAYS_DROP_OFF = 0.4,		— longer decrypted crypto waits, lower threshold it will have. threshold will be multiplied by this value at most

CRYPTO_ACTIVATE_NUM_DAYS_DROP_OFF = 0.4, — 加密数据等待解密的时间越长，其触发阈值将越低。该阈值最多会乘以这个值。

CRYPTO_ACTIVATE_NUM_DAYS_DECAY = 60,			— at this number of days, it will decay by %50 of prev define

CRYPTO_ACTIVATE_NUM_DAYS_DECAY = 60, —— 在此天数后，其值将衰减为先前定义的50%



CRYPTO_ACTIVATE_NUM_ACTIVATED_DROP_OFF = 0.6,				— having an already activated cryptos will further multiply threshold, down to this value

CRYPTO_ACTIVATE_NUM_ACTIVATED_DROP_OFF = 0.6, — 已激活的加密资产将进一步乘以阈值，最低降至该值



CRYPTO_ACTIVATION_SCORE_ARMIES_IN_COMBAT_BONUS = 0.2, 		— having units in combat will increase the score by this ratio

CRYPTO_ACTIVATION_SCORE_ARMIES_IN_COMBAT_BONUS = 0.2, — 战斗中有单位存在将按此比例增加得分

CRYPTO_ACTIVATION_SCORE_OUR_CAPITAL_BONUS = 0.2, 			— fronts of our capital get a bonus by this ratio

CRYPTO_ACTIVATION_SCORE_OUR_CAPITAL_BONUS = 0.2, —— 我方首都前沿地区将按此比例获得加成

CRYPTO_ACTIVATION_SCORE_ENEMY_CAPITAL_BONUS = 0.2, 			— fronts of enemy capital get a bonus by this ratio

CRYPTO_ACTIVATION_SCORE_ENEMY_CAPITAL_BONUS = 0.2, —— 敌方首都前线按此比例获得加成

CRYPTO_AFTER_SCORE_INVASION_FRONT_BONUS = 1.0, 				— a front that is naval invading will increase the score by this ratio

CRYPTO_AFTER_SCORE_INVASION_FRONT_BONUS = 1.0, —— 正在进行海上入侵的战线将按此比例增加得分

— ~crypto ai

— ~加密货币人工智能



MAX_MODULAR_EQUIPMENT_EQUIPMENT_UPGRADE_COUNT_PER_PASS = 4, — the maximum number of level AI will try to add to an equipment upgrade of an equipment defined in common/ai_equipment in one pass

MAX_MODULAR_EQUIPMENT_EQUIPMENT_UPGRADE_COUNT_PER_PASS = 4, — AI单次为common/ai_equipment中定义的装备升级时尝试添加的最大等级数



EQUIPMENT_UPGRADE_VARIANT_MATCH_SCORE_FACTOR = 0.2, — the weight of equipment upgrade level when computing the match score of a variant to an ai equipment design.

EQUIPMENT_UPGRADE_VARIANT_MATCH_SCORE_FACTOR = 0.2, ——计算变体与AI装备设计匹配分数时，装备升级等级的权重系数。



AI_UPDATE_ROLES_FREQUENCY_HOURS = 48; — Update the roles for a country AI this often (affects performance)

AI_UPDATE_ROLES_FREQUENCY_HOURS = 48; — 国家AI的角色更新频率（影响性能），单位为小时



UPDATE_SUPPLY_BOTTLENECKS_FREQUENCY_HOURS = 168; — Check for and try to fix supply bottlenecks this often. (168 hours = 1 week)

UPDATE_SUPPLY_BOTTLENECKS_FREQUENCY_HOURS = 168; — 以此时长检查并尝试解决供应瓶颈问题。（168小时=1周）

FIX_SUPPLY_BOTTLENECK_SATURATION_THRESHOLD = 0.85; — Try to fix supply bottlenecks if supply node saturation exceeds this value.

FIX_SUPPLY_BOTTLENECK_SATURATION_THRESHOLD = 0.85; — 当供应节点饱和度超过此值时，尝试修复供应瓶颈。



UPDATE_SUPPLY_MOTORIZATION_FREQUENCY_HOURS = 52; — Check if activating motorization would improve supply situation this often.

UPDATE_SUPPLY_MOTORIZATION_FREQUENCY_HOURS = 52; — 检查是否激活机动化能如此频繁地改善补给状况。



AI_PREFERRED_TACTIC_WEEKLY_CHANGE_CHANCE = 0.05, 	— Chance for AI to select a new preferred tactic if they don’t have one selected

AI_PREFERRED_TACTIC_WEEKLY_CHANGE_CHANCE = 0.05, —— 如果AI未选定偏好战术，其每周选择新偏好战术的概率为0.05



— <start> assigning leaders to armies

— <start> 为军队指派指挥官

ARMY_LEADER_ASSIGN_KEEP_CURRENT_LEADER_FACTOR = 1.2, — Boosts the score for keeping the current leader. Value > 1.0 favors the current leader.

ARMY_LEADER_ASSIGN_KEEP_CURRENT_LEADER_FACTOR = 1.2, — 提升保留当前领导者的评分权重。数值大于1.0时倾向于维持现任领导者。

ARMY_LEADER_ASSIGN_DONT_STEAL_OTHER_FACTOR = 0.75, — Reduces the score for leaders assigned elsewhere. Value < 1.0 discourages reassigning these leaders.

ARMY_LEADER_ASSIGN_DONT_STEAL_OTHER_FACTOR = 0.75, — 降低被指派至他处将领的评分。数值小于1.0时，不鼓励重新分配这些将领。

ARMY_LEADER_ASSIGN_FIELD_MARSHAL_TO_ARMY = -500, — Score for assigning a field marshal to a normal army (want to use them for army groups)

ARMY_LEADER_ASSIGN_FIELD_MARSHAL_TO_ARMY = -500, — 为普通军队指派元帅的评分（希望将其用于集团军群）

ARMY_LEADER_ASSIGN_EMPTYNESS_MALUS = 0.2, — Factor for avoiding assigning leaders that can lead large armies to small armies (a value of 0.2 reduces the score by max 20 %)

ARMY_LEADER_ASSIGN_EMPTYNESS_MALUS = 0.2, —— 避免将能指挥大军的将领分配到小规模军队的调整因子（值为0.2时最多降低20%的评分）

ARMY_LEADER_ASSIGN_OVERCAPACITY = -200, — Score for assigning leader to a too large army

ARMY_LEADER_ASSIGN_OVERCAPACITY = -200, ——将领被指派指挥规模过大的军队时的得分

ARMY_LEADER_ASSIGN_OVERALL_SKILL_FACTOR = 50, — This times general’s overall skill is added to score

ARMY_LEADER_ASSIGN_OVERALL_SKILL_FACTOR = 50, — 将领的综合能力乘以该值后加入评分

ARMY_LEADER_ASSIGN_DEFENSE_OVERALL_SKILL_FACTOR = 10, — If defensive army, this times general’s overall skill is added to score

ARMY_LEADER_ASSIGN_DEFENSE_OVERALL_SKILL_FACTOR = 10, —— 若为防御部队，此项乘以将领的综合技能值将加入评分

ARMY_LEADER_ASSIGN_DEFENSE_ATTACK_SKILL_FACTOR = 3, — If defensive army, this times general’s attack skill is added to score

ARMY_LEADER_ASSIGN_DEFENSE_ATTACK_SKILL_FACTOR = 3, —— 若为防御部队，此项乘以将领攻击技能后计入总分

ARMY_LEADER_ASSIGN_DEFENSE_DEFENSE_SKILL_FACTOR = 20, — If defensive army, this times general’s defense skill is added to score

ARMY_LEADER_ASSIGN_DEFENSE_DEFENSE_SKILL_FACTOR = 20, —— 若为防御部队，将领防御技能值乘以该系数后计入评分

ARMY_LEADER_ASSIGN_DEFENSE_LOGISTICS_SKILL_FACTOR = 3, — If defensive army, this times general’s logistics skill is added to score

ARMY_LEADER_ASSIGN_DEFENSE_LOGISTICS_SKILL_FACTOR = 3, —— 若为防御部队，将领的后勤技能值乘以该系数后计入总分

ARMY_LEADER_ASSIGN_DEFENSE_PLANNING_SKILL_FACTOR = 3, — If defensive army, this times general’s planning skill is added to score

ARMY_LEADER_ASSIGN_DEFENSE_PLANNING_SKILL_FACTOR = 3, —— 若为防御部队，将领的规划技能值将乘以该系数后加入评分

ARMY_LEADER_ASSIGN_INVASION_ATTACK_SKILL_FACTOR = 10, — If invasion army, this times general’s attack skill is added to score

ARMY_LEADER_ASSIGN_INVASION_ATTACK_SKILL_FACTOR = 10, —— 若是入侵军队，将领的攻击技能会乘以该系数后计入评分

ARMY_LEADER_ASSIGN_INVASION_DEFENSE_SKILL_FACTOR = 10, — If invasion army, this times general’s defense skill is added to score

ARMY_LEADER_ASSIGN_INVASION_DEFENSE_SKILL_FACTOR = 10, — 如果是入侵军队，将领的防御技能将乘以该系数后加入评分

ARMY_LEADER_ASSIGN_INVASION_LOGISTICS_SKILL_FACTOR = 20, — If invasion army, this times general’s logistics skill is added to score

ARMY_LEADER_ASSIGN_INVASION_LOGISTICS_SKILL_FACTOR = 20, — 若为入侵部队，将领的后勤技能将乘以该系数计入评分

ARMY_LEADER_ASSIGN_INVASION_PLANNING_SKILL_FACTOR = 20, — If invasion army, this times general’s planning skill is added to score

ARMY_LEADER_ASSIGN_INVASION_PLANNING_SKILL_FACTOR = 20, ——若为入侵军队，将领的规划技能值将乘以该系数计入总分

ARMY_LEADER_ASSIGN_ATTACK_SKILL_FACTOR = 20, — This times general’s attack skill is added to score

ARMY_LEADER_ASSIGN_ATTACK_SKILL_FACTOR = 20, — 此数值乘以将领的攻击技能将计入总分

ARMY_LEADER_ASSIGN_DEFENSE_SKILL_FACTOR = 10, — This times general’s defense skill is added to score

ARMY_LEADER_ASSIGN_DEFENSE_SKILL_FACTOR = 10, — 将领防御技能的该倍数将加入评分

ARMY_LEADER_ASSIGN_LOGISTICS_SKILL_FACTOR = 7, — This times general’s logistics skill is added to score

ARMY_LEADER_ASSIGN_LOGISTICS_SKILL_FACTOR = 7, — 将领的后勤技能乘以该系数后加入评分

ARMY_LEADER_ASSIGN_PLANNING_SKILL_FACTOR = 7, — This times general’s planning skill is added to score

ARMY_LEADER_ASSIGN_PLANNING_SKILL_FACTOR = 7, —— 将领的规划技能乘以该系数后加入得分

ARMY_LEADER_ASSIGN_NR_TRAITS = 5, — This times general’s nr of active traits is added to score

ARMY_LEADER_ASSIGN_NR_TRAITS = 5, — 将领活跃特质数量乘以该值后计入评分

ARMY_LEADER_ASSIGN_EXILED_LEADS_EXILED_TROOPS = 10, — If exiled leader, increase chance of leading army with exiled troops

ARMY_LEADER_ASSIGN_EXILED_LEADS_EXILED_TROOPS = 10, — 若为流亡领袖，提高其率领流亡部队的几率

ARMY_LEADER_ASSIGN_EXILED_LEADS_OWN_EXILED_TROOPS = 100, — If exiled leader, increase chance of leading army with exiled troops from same country as the leader

ARMY_LEADER_ASSIGN_EXILED_LEADS_OWN_EXILED_TROOPS = 100, —— 若为流亡领袖，提高其率领与领袖同国籍的流亡部队的几率



— the following defines concern the general’s modifiers

——以下定义涉及将军的修饰语

ARMY_LEADER_ASSIGN_DEFENSE_MAX_DIG_IN_FACTOR = 1.0, — If defensive army, importance of general’s MAX_DIG_IN_FACTOR modifier

ARMY_LEADER_ASSIGN_DEFENSE_MAX_DIG_IN_FACTOR = 1.0, —— 若为防御部队，将领MAX_DIG_IN_FACTOR修正值的重要性

ARMY_LEADER_ASSIGN_DEFENSE_ARMY_ARMOR_DEFENCE_FACTOR = 1.0, — If defensive army, importance of general’s ARMY_ARMOR_DEFENCE_FACTOR modifier (proportional to armor ratio in the army)

ARMY_LEADER_ASSIGN_DEFENSE_ARMY_ARMOR_DEFENCE_FACTOR = 1.0, —— 若为防御部队，将领ARMY_ARMOR_DEFENCE_FACTOR修正值的重要性（与部队中装甲比例成正比）

ARMY_LEADER_ASSIGN_PLANNING_SPEED = 0.1, — Importance of general’s PLANNING_SPEED modifier

ARMY_LEADER_ASSIGN_PLANNING_SPEED = 0.1, — 将领PLANNING_SPEED修正因子的重要性

ARMY_LEADER_ASSIGN_MAX_PLANNING = 0.1, — Importance of general’s MAX_PLANNING modifier

ARMY_LEADER_ASSIGN_MAX_PLANNING = 0.1, — 将领MAX_PLANNING修正值的重要性

ARMY_LEADER_ASSIGN_RECON_FACTOR = 2.0, — Importance of general’s RECON_FACTOR modifier

ARMY_LEADER_ASSIGN_RECON_FACTOR = 2.0, — 将领RECON_FACTOR修正值的重要性

ARMY_LEADER_ASSIGN_OUT_OF_SUPPLY_FACTOR = 1.0, — Importance of general’s OUT_OF_SUPPLY_FACTOR modifier

ARMY_LEADER_ASSIGN_OUT_OF_SUPPLY_FACTOR = 1.0, — 将领OUT_OF_SUPPLY_FACTOR修正系数的重要性

ARMY_LEADER_ASSIGN_WINTER_ATTRITION_FACTOR = 1.0, — Importance of general’s WINTER_ATTRITION_FACTOR modifier

ARMY_LEADER_ASSIGN_WINTER_ATTRITION_FACTOR = 1.0, — 将领冬季损耗系数修正的重要性

ARMY_LEADER_ASSIGN_ARMY_ARMOR_SPEED_FACTOR = 20.0, — Importance of general’s ARMY_ARMOR_SPEED_FACTOR modifier (proportional to armor ratio in the army)

ARMY_LEADER_ASSIGN_ARMY_ARMOR_SPEED_FACTOR = 20.0, — 将领的ARMY_ARMOR_SPEED_FACTOR修正值的重要性（与军队中装甲比例成正比）

ARMY_LEADER_ASSIGN_ARMY_ARMOR_ATTACK_FACTOR = 20.0, — Importance of general’s ARMY_ARMOR_ATTACK_FACTOR modifier (proportional to armor ratio in the army)

ARMY_LEADER_ASSIGN_ARMY_ARMOR_ATTACK_FACTOR = 20.0, —— 将领ARMY_ARMOR_ATTACK_FACTOR修正值的重要性（与军队中装甲比例成正比）

ARMY_LEADER_ASSIGN_BOOST_ARMOR_SKILL = 20.0, — Importance of general’s trait where armor skill is boosted, e.g. armor_officer which boosts panzer_leader (proportional to armor ratio in the army)

ARMY_LEADER_ASSIGN_BOOST_ARMOR_SKILL = 20.0, —— 将领特质对装甲技能提升的重要性，例如装甲军官特质可增强装甲领袖（与军队中装甲比例成正比）

ARMY_LEADER_ASSIGN_ARMOR_LEADER_IF_NO_ARMOR = -0.5, — Avoid assigning a general with armor skills to an army with no armor (can be negative)

ARMY_LEADER_ASSIGN_ARMOR_LEADER_IF_NO_ARMOR = -0.5, ——避免将具有装甲技能的将领指派到没有装甲的军队（可为负值）

ARMY_LEADER_ASSIGN_AMPHIBIOUS_INVASION = 1.0, — If involved in invasion, importance of general’s AMPHIBIOUS_INVASION modifier

ARMY_LEADER_ASSIGN_AMPHIBIOUS_INVASION = 1.0, — 若参与两栖作战，将领的AMPHIBIOUS_INVASION修正值的重要性

ARMY_LEADER_ASSIGN_NAVAL_INVASION_PREPARATION = 1.0, — If involved in invasion, importance of general’s NAVAL_INVASION_PREPARATION modifier

ARMY_LEADER_ASSIGN_NAVAL_INVASION_PREPARATION = 1.0, —— 若参与入侵行动，将领的NAVAL_INVASION_PREPARATION修正值的重要性

ARMY_LEADER_ASSIGN_XP_GAIN_FACTOR = 2.0, — Importance of general’s XP_GAIN_FACTOR modifier

ARMY_LEADER_ASSIGN_XP_GAIN_FACTOR = 2.0, — 将领经验获取系数调整因子的重要性

ARMY_LEADER_ASSIGN_SUPPLY_CONSUMPTION_FACTOR = 1.0, — Importance of general’s SUPPLY_CONSUMPTION_FACTOR modifier

ARMY_LEADER_ASSIGN_SUPPLY_CONSUMPTION_FACTOR = 1.0, —— 将领SUPPLY_CONSUMPTION_FACTOR修正因子的重要性

ARMY_LEADER_ASSIGN_LAND_REINFORCE_RATE = 1.0, — Importance of general’s LAND_REINFORCE_RATE modifier

ARMY_LEADER_ASSIGN_LAND_REINFORCE_RATE = 1.0, — 将领的LAND_REINFORCE_RATE修正系数重要性

ARMY_LEADER_ASSIGN_ARMY_MORALE_FACTOR = 1.0, — Importance of general’s ARMY_MORALE_FACTOR modifier

ARMY_LEADER_ASSIGN_ARMY_MORALE_FACTOR = 1.0, —— 将领ARMY_MORALE_FACTOR修正值的重要性

ARMY_LEADER_ASSIGN_TERRAIN_FACTOR = 0.2, — Importance of general’s terrain skills

ARMY_LEADER_ASSIGN_TERRAIN_FACTOR = 0.2, — 将领地形技能的重要性

— <end> assigning leaders to armies

— <end> 为军队指派指挥官



— Which settings will AI use for area defense by default

— 默认情况下，AI将采用哪些区域防御设置

AREA_DEFENSE_SETTING_VP = false,

AREA_DEFENSE_SETTING_VP = false,

AREA_DEFENSE_SETTING_PORTS = true,

AREA_DEFENSE_SETTING_PORTS = true,

AREA_DEFENSE_SETTING_AIRBASES = false,

AREA_DEFENSE_SETTING_AIRBASES = false,

AREA_DEFENSE_SETTING_BORDERS = false,

区域防御设置边界 = false,

AREA_DEFENSE_SETTING_FORTS = false,

区域防御设置_要塞 = false,

AREA_DEFENSE_SETTING_COASTLINES = true,

AREA_DEFENSE_SETTING_COASTLINES = true,

AREA_DEFENSE_SETTING_RAILWAYS = false,

区域防御设置_铁路 = false,

AREA_DEFENSE_SETTING_FACILITY = false,

区域防御设置设施 = false,



AREA_DEFENSE_MINCAP_MAX_CAPITAL_DEFENSE = 100, — MaxUnits for capital defense is at least this. (basically use capital defense as a buffer if we have “too many units”)

AREA_DEFENSE_MINCAP_MAX_CAPITAL_DEFENSE = 100, — 首都防御的最大单位数至少为此值。（本质上，当我们拥有“过多单位”时，将首都防御作为缓冲使用）

AREA_DEFENSE_MINCAP_DESIRED_CAPITAL_DEFENSE = 5, — DesiredUnits for capital defense is at least this.

AREA_DEFENSE_MINCAP_DESIRED_CAPITAL_DEFENSE = 5, —— 首都防御所需的最小期望单位数量至少为此值。

AREA_DEFENSE_MINCAP_MAX_HOME_AREA = 10, — MaxUnits for home area is at least this.

AREA_DEFENSE_MINCAP_MAX_HOME_AREA = 10, — 主基地区域的最大单位数至少为此值。

AREA_DEFENSE_MINCAP_DESIRED_HOME_AREA = 3, — DesiredUnits for home area is at least this.

AREA_DEFENSE_MINCAP_DESIRED_HOME_AREA = 3, —— 家园区域的最低期望单位数为3。



COMMAND_POWER_BEFORE_SPEND_ON_TRAITS = 30.0,

COMMAND_POWER_BEFORE_SPEND_ON_TRAITS = 30.0,



PEACE_BID_FOLD_TURNS_AGAINST_OTHER_AI = 2, — Resolve contests against other AIs after this many turns. Don’t always contest forever, it yields the same results.

PEACE_BID_FOLD_TURNS_AGAINST_OTHER_AI = 2, — 与其他AI竞争时，经过这么多回合后解决争议。不必总是无休止地竞争，结果往往相同。

— When resolving contest against other AI, a tie breaker score is calculated and the loser folds.

— 当与其他AI对决时，会计算决胜分，败者退出。

PEACE_BID_CONTEST_TIE_BREAKER_CONFERENCE_SCORE = 1.0, — How much to weigh relative remaining peace conference score between the countries

PEACE_BID_CONTEST_TIE_BREAKER_CONFERENCE_SCORE = 1.0, — 国家间相对剩余和平会议分数的权重值

PEACE_BID_CONTEST_TIE_BREAKER_INFLUENCE_DISTANCE = 1.0, — How much to weigh relative influence distance between the countries

PEACE_BID_CONTEST_TIE_BREAKER_INFLUENCE_DISTANCE = 1.0, — 国家间相对影响力距离的权重应设为多少

PEACE_BID_CONTEST_TIE_BREAKER_COUNTRY_SCORE = 1.0, — How much to weigh relative country score between the countries

PEACE_BID_CONTEST_TIE_BREAKER_COUNTRY_SCORE = 1.0, —— 在国家间相对国家评分的权重值

— End of tie breaker score factors

—— 平局决胜得分因素结束

PEACE_BID_FOLD_AGAINST_PLAYER_CHANCE = 0.5, — Likelihood that AI will fold in a bidding contest against human player.

PEACE_BID_FOLD_AGAINST_PLAYER_CHANCE = 0.5, —— 人工智能在与人类玩家的竞标对抗中弃牌的概率。

PEACE_BID_FOLD_AGAINST_LIBERATE_CONTEST = 1.0, — Likelihood that the AI will back down against a same-ideology country performing a contesting liberate bid ##Bordergore prevention therapy

PEACE_BID_FOLD_AGAINST_LIBERATE_CONTEST = 1.0, — AI对同意识形态国家发起解放竞标时让步的可能性 ##防止边界混乱疗法

PEACE_AI_GROUP_PEACE_ACTIONS = true, — Whether AI should group peace actions or greedily just select the most-desired peace actions

PEACE_AI_GROUP_PEACE_ACTIONS = true, —— AI是否应将和平行动分组，还是贪婪地仅选择最渴望的和平行动

PEACE_AI_EVALUATE_FOR_SUBJECTS = true, — Whether AI should include subjects when evaluating giving states to other winners (may affect performance on new conference turn)

PEACE_AI_EVALUATE_FOR_SUBJECTS = true, —— AI在评估向其他获胜者授予状态时是否应包含主题（可能影响新会议轮次的性能）

PEACE_AI_EVALUATE_FOR_ALLIES = true, — Whether AI should include allies when evaluating giving states to other winners (may affect performance on new conference turn)

PEACE_AI_EVALUATE_FOR_ALLIES = true, ——AI在评估向其他胜利者转让国家时是否应包含盟友（可能影响新会议回合的性能表现）

PEACE_AI_EVALUATE_FOR_NON_ALLIES = false, — Whether AI should include non-allies (not in same faction) when evaluating giving states to other winners (may affect performance on new conference turn)

PEACE_AI_EVALUATE_FOR_NON_ALLIES = false, —— 人工智能在评估将国家状态给予其他胜利者时是否应包含非盟友（不同阵营）（可能影响新会议回合时的性能表现）

PEACE_AI_EVALUATE_OTHER_IF_CORE = true, — Whether AI should evaluate giving states to other winners if state is their core (may affect performance on new conference turn)

PEACE_AI_EVALUATE_OTHER_IF_CORE = true, ——当某省份为AI核心省份时，是否应评估将该省份分配给其他胜利方（可能影响新会议回合时的性能表现）

PEACE_AI_EVALUATE_OTHER_IF_CLAIM = true, — Whether AI should evaluate giving states to other winners if they have a claim on the state (may affect performance on new conference turn)

PEACE_AI_EVALUATE_OTHER_IF_CLAIM = true, —— 如果其他胜利者对某个州拥有宣称权，AI是否应评估将该州分配给他们（可能影响新会议回合的性能）

PEACE_AI_EVALUATE_OTHER_ALWAYS = false, — Whether AI should always evaluate giving states to other winners (!!! may heavily affect performance on new conference turn for large peace conferences !!!)

PEACE_AI_EVALUATE_OTHER_ALWAYS = false, —— AI是否应始终评估向其他胜利方移交省份（！！！在大型和会的新回合阶段可能严重影响性能！！！）



DIVISION_SUPPLY_RATIO_TO_MOTORIZE = 0.80,						— If supply ratio is less than this, consider motorizing any applicable nearby supply hub

DIVISION_SUPPLY_RATIO_TO_MOTORIZE = 0.80, — 若补给比例低于此值，则考虑将附近适用的补给枢纽机械化



INDUSTRIAL_ORG_TRAIT_UNLOCK_RANDOMNESS = 3,		— AI will pick a random from N top traits when choosing a trait to unlock

INDUSTRIAL_ORG_TRAIT_UNLOCK_RANDOMNESS = 3, — AI在解锁特质时将从N个顶级特质中随机选取一个

INDUSTRIAL_ORG_POLICY_CHANGE_RANDOMNESS = 3,	— AI will pick a random from N top policies when choosing a policy to attach to an MIO

INDUSTRIAL_ORG_POLICY_CHANGE_RANDOMNESS = 3, —— AI将从N个顶级政策中随机选取一个政策附加到MIO上

INDUSTRIAL_ORG_RESEARCH_ASSIGN_RANDOMNESS = 3,	— AI will pick a random from N top MIOs when choosing an MIO to assign to a research

INDUSTRIAL_ORG_RESEARCH_ASSIGN_RANDOMNESS = 3, — 当选择分配给研究的市场工业组织时，AI将在前N个市场工业组织中随机挑选M个

INDUSTRIAL_ORG_PRODUCTION_ASSIGN_RANDOMNESS = 3,— AI will pick a random from N top MIOs when choosing an MIO to assign to a production line

INDUSTRIAL_ORG_PRODUCTION_ASSIGN_RANDOMNESS = 3,— AI在给生产线分配MIO时，会从前N个顶级MIO中随机选取一个

INDUSTRIAL_ORG_POLICY_CHANGE_SCALE = 1.0,		— Policy change weight will be scaled by this value

INDUSTRIAL_ORG_POLICY_CHANGE_SCALE = 1.0, — 政策变更权重将按此值进行缩放

INDUSTRIAL_ORG_TRAIT_RANK_FACTOR = 0.80,		— When precomputing weights, traits will affect the final score less the further down the tree they are, by this factor

INDUSTRIAL_ORG_TRAIT_RANK_FACTOR = 0.80, — 在预先计算权重时，特质在科技树中的位置越靠后，对最终分数的影响越小，影响程度由该系数决定

INDUSTRIAL_ORG_RESEARCH_BONUS_FACTOR = 1.0,		— Research bonus will be multiplied by this factor when evaluating design teams

INDUSTRIAL_ORG_RESEARCH_BONUS_FACTOR = 1.0, — 评估设计团队时，研究加成将乘以该系数



AI_WANTED_LAND_BASED_PLANES_FACTOR = 0.50,		— Factor applied to desire for land based planes (total airbase space * define)

AI_WANTED_LAND_BASED_PLANES_FACTOR = 0.50, —— 应用于陆基飞机需求的因子（总空军基地空间 * 定义值）

AI_WANTED_CARRIER_BASED_PLANES_FACTOR = 1.0,	— Factor applied to desire for carrier based planes (total carrier space * define)

AI_WANTED_CARRIER_BASED_PLANES_FACTOR = 1.0, — 应用于对舰载机需求欲望的因子（总航母空间 * 定义值）



— AIFC stands for “AI Force Concentration”. Using acronym to keep define names shorter.

AIFC代表“人工智能力量集中”（AI Force Concentration）。采用首字母缩略词以保持定义名称的简洁。

AIFC_UPDATE_FREQUENCY_DAYS = 5, — How often will AI run its AI force concentration logic. Lowering this number may decrease performance.

AIFC_UPDATE_FREQUENCY_DAYS = 5, —— AI运行其兵力集中逻辑的频率。降低此数值可能会影响性能。

AIFC_FRESHNESS_BASE_VALUE = 45.0, — AIFC fronts have a “freshness value” which decreases if no progress is made. When it reaches zero, it will give up on the current target and try another.

AIFC_FRESHNESS_BASE_VALUE = 45.0，——AIFC前线有一个“新鲜度值”，如果没有进展，该值会下降。当它降至零时，就会放弃当前目标并尝试另一个。

AIFC_REFRESH_NEED_PER_DAY = 1.0, — Decrease freshness value with this every day.

AIFC_REFRESH_NEED_PER_DAY = 1.0, — 每天按此值降低新鲜度。

AIFC_REFRESH_NEED_SUPPLY_FACTOR_PER_DAY = 0.8, — Decrease freshness value with this multiplied by average supply ratio every day.

AIFC_REFRESH_NEED_SUPPLY_FACTOR_PER_DAY = 0.8, —— 每天用此值乘以平均供应比率来减少新鲜度值。

AIFC_FRESHNESS_ADD_ON_PROGRESS = 25.0, — Increase freshness value with this when we advance a province along the target path.

AIFC_FRESHNESS_ADD_ON_PROGRESS = 25.0， — 当沿目标路径推进省份时，以此数值增加新鲜度值。

AIFC_UNIT_RATIO_BASE = 0.15, — After fulfilling minimum front unit needs, this ratio of the “extra”/desired units can be allocated to AI force concentration duty

AIFC_UNIT_RATIO_BASE = 0.15，——在满足前线最低单位需求后，可将这部分"额外"/期望单位的比例分配给AI部队集结任务

AIFC_MAX_NR_FRONTS = 4, — The X (this) fronts with highest AIFC score are considered for AI force concentration

AIFC_MAX_NR_FRONTS = 4，——X（此处）前线中AIFC得分最高的将被优先考虑用于AI力量集中

AIFC_CA_DIVISIONS_PER_PROVINCE = 3, — AI will use this as a baseline of how many divisions to have per province

AIFC_CA_DIVISIONS_PER_PROVINCE = 3, —— AI将以此作为每个省份应配备师团数量的基准

AIFC_ACTIVATE_AVG_ORG_RATIO_THRESHOLD = 0.2, — Only activate the offensive order if average organisation is above this.

AIFC_ACTIVATE_AVG_ORG_RATIO_THRESHOLD = 0.2, —— 仅当平均组织度高于此值时激活进攻指令。

AIFC_ACTIVATE_IN_POSITION_RATIO_THRESHOLD = 0.3, — Only activate the offensive order if divisions in position is more than this ratio.

AIFC_ACTIVATE_IN_POSITION_RATIO_THRESHOLD = 0.3, — 只有当处于位置的部队比例超过此阈值时，才激活进攻指令。

AIFC_OFFENSIVE_DEACTIVATION_DAYS_THRESHOLD = 5, — Deactivate the offensive order only if the conditions have been unfulfilled for this many days.

AIFC_OFFENSIVE_DEACTIVATION_DAYS_THRESHOLD = 5, — 仅当条件未满足达此天数时，才停用进攻指令。

AIFC_UNIT_NUDGE_FREQUENCY_DAYS = 15, — On average every X day (randomly), check if another division (within same front) is better for AIFC based on score factors below.

AIFC_UNIT_NUDGE_FREQUENCY_DAYS = 15, —— 平均每X天（随机）检查同一战线内是否有其他师团根据以下评分因素更适合AIFC。

— Unit offensiveness score factors for AIFC. Division stats are factored by this before adding up to total score.

— AIFC单位攻击性评分因素。各分部统计在计入总分前需乘以此系数。

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_BREAKTHROUGH = 11.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_BREAKTHROUGH = 11.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_SOFT_ATTACK = 6.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_SOFT_ATTACK = 6.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_HARD_ATTACK = 8.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_HARD_ATTACK = 8.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_ARMOR = 30.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_ARMOR = 30.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_PIERCING = 4.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_PIERCING = 4.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_HARDNESS = 300.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_HARDNESS = 300.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_SPEED = 15.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_SPEED = 15.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_INITIATIVE = 5.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_INITIATIVE = 5.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_ORGANISATION = 0.3,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_ORGANISATION = 0.3,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_HITPOINTS = 0.3,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_HITPOINTS = 0.3,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_DEFENSE = -0.2,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_DEFENSE = -0.2,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_ENTRENCHMENT = -0.5,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_ENTRENCHMENT = -0.5,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_EXPERIENCE = 300.0,

AIFC_UNIT_OFFENSIVE_SCORE_FACTOR_EXPERIENCE = 300.0,

— End of unit offensiveness score factors for AIFC

— AIFC单元结束攻击性评分因素

— Strategic target scoring for AIFC

— 阿斯塔纳国际金融中心的战略目标评分

AIFC_TARGET_IGNORE_VP_THRESHOLD = 10, — VP target needs at leas this many victory points to be considered a target

AIFC_TARGET_IGNORE_VP_THRESHOLD = 10, — VP目标需至少达到此胜利点数才会被视为目标

AIFC_TARGET_SUPPLY_HUB_BASE_SCORE = 20.0, — Base score for supply hubs

AIFC_TARGET_SUPPLY_HUB_BASE_SCORE = 20.0, —— 供应中心的基础分数

AIFC_TARGET_NAVAL_BASE_BASE_SCORE = 10.0, — Base score for naval bases

AIFC_TARGET_NAVAL_BASE_BASE_SCORE = 10.0, — 海军基地的基础分数

AIFC_TARGET_NAVAL_BASE_SCORE_PER_LEVEL = 1.0, — Score for naval bases increases by this for each level

AIFC_TARGET_NAVAL_BASE_SCORE_PER_LEVEL = 1.0, —— 海军基地的分数每级增加此数值

AIFC_TARGET_VP_SCORE_FACTOR = 1.0, — Score for VPs increases by this for every victory point

AIFC_TARGET_VP_SCORE_FACTOR = 1.0, —— 每获得一个胜利点，VP得分按此值增加

AIFC_TARGET_CAPITAL_SCORE_EXTRA = 5.0, — Extra score for Capitals (in addition to VP score)

AIFC_TARGET_CAPITAL_SCORE_EXTRA = 5.0, —— 首都额外得分（在胜利点得分基础上额外增加）

AIFC_TARGET_SHORT_PATH_PENALTY_FACTOR = 0.1, — Penalty factor for short AIFC paths (path <= 3 (including own start province))

AIFC_TARGET_SHORT_PATH_PENALTY_FACTOR = 0.1, —— 短AIFC路径的惩罚因子（路径长度<=3（包含起始省份））

AIFC_TARGET_PERSISTED_FACTOR = 30.0, — Bonus factor for persisted targets (used to incentivize AI to select target again after e.g. front lines have reformed or save file is loaded)

AIFC_TARGET_PERSISTED_FACTOR = 30.0，——持久目标的奖励因子（用于激励AI在例如前线重新形成或加载存档文件后再次选择目标）

— End of strategic target scoring for AIFC

— 阿斯塔纳国际金融中心(AIFC)战略目标评分结束

— Offensive path scoring (cost multipliers) for AIFC

— AIFC的进攻路径得分（成本乘数）

AIFC_PATH_MAX_COST = 7.0, — Only allow paths with total cost <= this. WARNING: increasing this value may cause stuttering and other performance issues (since AIFC will evaluate larger areas)

AIFC_PATH_MAX_COST = 7.0，——仅允许总成本小于等于此值的路径。警告：增加该数值可能导致卡顿及其他性能问题（因为AIFC将评估更大区域）

AIFC_PATH_COST_ADJ_NORMAL = 1.0,

AIFC_PATH_COST_ADJ_NORMAL = 1.0,

AIFC_PATH_COST_ADJ_STRAIT = 4.0,

AIFC_PATH_COST_ADJ_STRAIT = 4.0,

AIFC_PATH_COST_ADJ_RIVER = 2.0,

AIFC_PATH_COST_ADJ_RIVER = 2.0,

AIFC_PATH_COST_ADJ_RIVER_LARGE = 3.0,

AIFC_PATH_COST_ADJ_RIVER_LARGE = 3.0,

AIFC_PATH_COST_TRN_MOUNTAINS = 2.0,

AIFC_PATH_COST_TRN_MOUNTAINS = 2.0,

AIFC_PATH_COST_TRN_FOREST = 1.5,

AIFC_PATH_COST_TRN_FOREST = 1.5,

AIFC_PATH_COST_TRN_DESERT = 1.5,

AIFC_PATH_COST_TRN_DESERT = 1.5,

AIFC_PATH_COST_TRN_HILLS = 1.2,

AIFC_PATH_COST_TRN_HILLS = 1.2,

AIFC_PATH_COST_TRN_JUNGLE = 3.0,

AIFC_PATH_COST_TRN_JUNGLE = 3.0,

AIFC_PATH_COST_TRN_PLAINS = 0.8,

AIFC_PATH_COST_TRN_PLAINS = 0.8,

AIFC_PATH_COST_TRN_URBAN = 1.0,

AIFC_PATH_COST_TRN_URBAN = 1.0,

AIFC_PATH_COST_TRN_MARSH = 3.0,

AIFC_PATH_COST_TRN_MARSH = 3.0,

AIFC_PATH_COST_PER_FORT_LEVEL = 0.3, — This multiplier is calculated as: 1.0 + <define>*fort_level (only for fort levels > 0)

AIFC_PATH_COST_PER_FORT_LEVEL = 0.3, —— 该乘数计算公式为：1.0 + <定义值>*堡垒等级（仅当堡垒等级 > 0 时适用）

AIFC_PATH_COST_HAS_SUPPLY_HUB = 0.5, — If the province we’re entering has a supply hub

AIFC_PATH_COST_HAS_SUPPLY_HUB = 0.5, —— 若我们将进入的省份拥有补给中心

AIFC_PATH_COST_HAS_NAVAL_BASE = 0.5, — If the province we’re entering has a naval base

AIFC_PATH_COST_HAS_NAVAL_BASE = 0.5, ——如果我们进入的省份有一个海军基地

AIFC_PATH_COST_RAILWAY_CONNECTION = 0.75, — If the provinces are connected by a railway with level > 0

AIFC_PATH_COST_RAILWAY_CONNECTION = 0.75, —— 若省份间有等级>0的铁路连接

— End of offensive path scoring for AIFC

— AIFC进攻路线评分结束



RAIDS_ENABLE_AI = true, — Whether AI should use the raid system

RAIDS_ENABLE_AI = true, —— 是否让AI使用突袭系统

RAIDS_CREATE_FREQUENCY_DAYS = 7, — How often will AI run its raid creation logic. Lowering this number may decrease performance.

RAIDS_CREATE_FREQUENCY_DAYS = 7, — AI执行其突袭创建逻辑的频率。降低此数值可能会影响性能。

RAIDS_SCORE_DIFF_TO_CANCEL = 0.3, — If already-created low-scoring raids are blocking higher-scoring ones from being created due to command power, this allows the AI to cancel the lower-scoring raids. If `lowerScore < <value>*higherScore`, then the lower-scoring one may be cancelled. A value of 0.0 means it will never allow cancelling lower-scoring raids, while a value of 1.0 means it will always allow cancelling lower-scoring raids.

RAIDS_SCORE_DIFF_TO_CANCEL = 0.3, — 若已创建的低分突袭因指挥点数阻碍了更高分突袭的生成，此项允许AI取消较低分的突袭。当`lowerScore < <取值>*higherScore`时，系统可能取消较低分的突袭。取值为0.0表示绝不允许取消低分突袭，而1.0则表示始终允许取消低分突袭。

RAIDS_COMMAND_POWER_CAP_TO_CREATE = 60.0, — The AI will only try to create new raids if the command power cap is at least this.

RAIDS_COMMAND_POWER_CAP_TO_CREATE = 60.0, — 仅当指挥点数上限至少达到此值时，AI才会尝试创建新的袭击。

RAIDS_MIN_SUCCESS_FOR_LAUNCH = 0.65, — The AI will not launch a raid if the chance of success is lower than this.

RAIDS_MIN_SUCCESS_FOR_LAUNCH = 0.65，——若成功率低于此值，AI将不会发动突袭。

RAIDS_CANCEL_AFTER_DAYS_LAUNCHABLE = 60, — If a raid has been launchable for more than <this> days but not been launched (e.g. due to bad success chance), the AI will cancel the raid.

RAIDS_CANCEL_AFTER_DAYS_LAUNCHABLE = 60, —— 如果一个突袭行动已具备发动条件超过<此数值>天却仍未发动（例如因成功率过低），AI将取消该突袭。

RAIDS_NUKE_TARGET_CUT_OFF = 10, — When AI selects targets for nukes, only pick from the <x> highest-scoring targets.

RAIDS_NUKE_TARGET_CUT_OFF = 10, — 当AI选择核打击目标时，仅从评分最高的<x>个目标中选取。

RAIDS_UNIT_SCORE_SUCCESS_CHANCE_FACTOR = 500.0, — When AI selects which units to use for raids, multiply the unit success chance modifier with this.

RAIDS_UNIT_SCORE_SUCCESS_CHANCE_FACTOR = 500.0, ——当AI选择用于突袭的部队时，将部队成功率修正值与此相乘。

RAIDS_UNIT_SCORE_DISTANCE_KM_FACTOR = 0.1, — When AI selects which units to use for raids, multiply the km distance with this.

RAIDS_UNIT_SCORE_DISTANCE_KM_FACTOR = 0.1, -- 当AI选择用于突袭的部队时，将公里距离与此因子相乘

RAIDS_AVOID_SAME_TARGET_DURATION_DAYS = 180, — After a raid is finished/canceled, AI is less likely to raid the same target for this time.

RAIDS_AVOID_SAME_TARGET_DURATION_DAYS = 180, —— 突袭结束/取消后，AI在此期间内不太可能再次袭击同一目标。

RAIDS_AVOID_SAME_TARGET_FACTOR = 0.4, — If AI has already raided (or tried to raid) a target, score of new raids against same target is factored by this

RAIDS_AVOID_SAME_TARGET_FACTOR = 0.4，——如果AI已经袭击（或尝试袭击）过一个目标，针对同一目标的新袭击评分将乘以该系数

},



NFocus = {

专注 = {

FOCUS_POINT_DAYS = 7,						— Each point takes a week

FOCUS_POINT_DAYS = 7，——每个焦点周期为一周

FOCUS_PROGRESS_PEACE = 1,					— Progress during peace

FOCUS_PROGRESS_PEACE = 1, — 和平时期的进展

FOCUS_PROGRESS_WAR = 1,					— Progress during war

FOCUS_PROGRESS_WAR = 1, — 战争期间的进度

MAX_SAVED_FOCUS_PROGRESS = 10,				— This much progress can be saved while not having a focus selected

MAX_SAVED_FOCUS_PROGRESS = 10, — 未选择专注目标时可保存的进度上限为10

},



NOperatives = {

NOperatives = {

AGENCY_CREATION_DAYS = 30,						— Number of days needed to create an intelligence agency

AGENCY_CREATION_DAYS = 30, # 创建情报机构所需天数

AGENCY_UPGRADE_DAYS = 30,						— Number of days needed to upgrade an intelligence agency

AGENCY_UPGRADE_DAYS = 30, — 升级情报机构所需的天数

AGENCY_CREATION_FACTORIES = 5,					— Number of factories used to create an intelligence agency

AGENCY_CREATION_FACTORIES = 5, — 用于创建情报机构的工厂数量

AGENCY_AI_BASE_NUM_FACTORIES = 25.0,				— Used by AI to pace the upgrades. Formula : if( AGENCY_AI_BASE_NUM_FACTORIES <= num_civ_factories - num_upgrades * AGENCY_AI_PER_UPGRADE_FACTORIES )

AGENCY_AI_BASE_NUM_FACTORIES = 25.0, —— 用于控制AI升级节奏的基准值。计算公式：若( AGENCY_AI_BASE_NUM_FACTORIES <= 民用工厂总数 - 升级次数 * AGENCY_AI_PER_UPGRADE_FACTORIES )

AGENCY_AI_PER_UPGRADE_FACTORIES = 6.0,			— Used by AI to pace the upgrades. Formula : if( AGENCY_AI_BASE_NUM_FACTORIES <= num_civ_factories - num_upgrades * AGENCY_AI_PER_UPGRADE_FACTORIES )

AGENCY_AI_PER_UPGRADE_FACTORIES = 6.0, —— 用于AI控制升级节奏。公式：如果( AGENCY_AI_BASE_NUM_FACTORIES <= 民用工厂数量 - 升级次数 * AGENCY_AI_PER_UPGRADE_FACTORIES )

AGENCY_UPGRADE_PER_OPERATIVE_SLOT = 5,			— Number of upgrade needed to unlock an additional operative slot

AGENCY_UPGRADE_PER_OPERATIVE_SLOT = 5, —— 每解锁一个额外特工槽所需的升级次数

MAX_OPERATIVE_SLOT_FROM_AGENCY_UPGRADES = 1,	— max operative slots gained from upgrades

MAX_OPERATIVE_SLOT_FROM_AGENCY_UPGRADES = 1, —— 通过升级获得的最大特工槽位数量

AGENCY_OPERATIVE_RECRUITMENT_TIME = 30,			— Number of days to wait to have operative to recruit when an operative slot first becomes available

AGENCY_OPERATIVE_RECRUITMENT_TIME = 30, — 当特工槽位首次可用时，招募一名特工所需的等待天数

BECOME_SPYMASTER_PP_COST = 50,					— Number of political power used to become Spy Master

BECOME_SPYMASTER_PP_COST = 50, ——成为间谍大师所需的政治点数

BECOME_SPYMASTER_MIN_UPGRADES = 3,				— Number of agency upgrades you need before becoming Spy Master

BECOME_SPYMASTER_MIN_UPGRADES = 3, — 成为间谍大师前所需的机构升级次数

BASE_COUNTER_INTELLIGENCE_RATING = 0.0,					— Base national counter intelligence rating for all countries

BASE_COUNTER_INTELLIGENCE_RATING = 0.0, — 所有国家的基础反间谍评级

AGENCY_DEFENSE_EFFECT_ON_HOSTILE_ACTION_COST = 0.2,			— Defense factor that is responsible for multiplying the cost hostile actions against our country by its level and this value

AGENCY_DEFENSE_EFFECT_ON_HOSTILE_ACTION_COST = 0.2, ——防御系数，用于将针对我国的敌对行动成本乘以该系数值及其等级

INTEL_NETWORK_GAIN_RATE_ON_WRONG_CONTROLLER = -10.0,			— Amount of network strength lost in a state when it does not have the right controller anymore

INTEL_NETWORK_GAIN_RATE_ON_WRONG_CONTROLLER = -10.0, — 当网络不再由正确控制器掌控时，在该状态下损失的网络强度值

INTEL_NETWORK_GAIN_RATE_ON_OUT_OF_RANGE = -1.75,				— Amount of network strength lost in a state that has the right controller but is out of range of any operative

INTEL_NETWORK_GAIN_RATE_ON_OUT_OF_RANGE = -1.75, —— 当处于拥有正确控制器但超出任何操作员信号覆盖范围的状态时，网络强度损失的数值

INTEL_NETWORK_GAIN_FROM_ADJACENCY_FACTOR = 0.5,				— Factor multiplied to the sum of the positive difference between a state’s strength and its neighbors’. In other words, how strongly neighbors impact the strength gained in a state. Values greater or equal to 1 are discouraged.

INTEL_NETWORK_GAIN_FROM_ADJACENCY_FACTOR = 0.5, —— 该系数乘以一个州实力与其邻州实力正差值的总和，换言之，反映了邻州对该州实力增益的影响强度。不建议采用大于或等于1的数值。

INTEL_NETWORK_GAIN_DECAY_PER_STEP_FACTOR = 0.5,				— Factor multiplied to the gain of the previous node in the netowrk initially contributed by the agent. In other words, before adjacency, the strength gain in a state would be GainFromOperative * ( INTEL_NETWORK_GAIN_DECAY_PER_STEP_FACTOR ^ NodeDepth ) where NodeDepth is the distance between the state and the operative’s location.

INTEL_NETWORK_GAIN_DECAY_PER_STEP_FACTOR = 0.5, —— 该因子乘以网络中由特工初始贡献的前一节点的增益。换言之，在考虑邻接关系前，某一状态下的强度增益为 GainFromOperative * ( INTEL_NETWORK_GAIN_DECAY_PER_STEP_FACTOR ^ NodeDepth )，其中 NodeDepth 表示该状态与特工位置之间的距离。

INTEL_NETWORK_STRENGTH_TARGET_OFFSET_PER_OPERATIVE = 15.0,		— The amount of strength each operative on build intel network mission in a sub network add to the base target network strength

INTEL_NETWORK_STRENGTH_TARGET_OFFSET_PER_OPERATIVE = 15.0, — 每个在子网络执行构建情报网络任务的特工，为基准目标网络强度增加的数值

INTEL_NETWORK_STRENGTH_DECAY_WHEN_ABOVE_TARGET = -2.5,			— The amount of strength removed each tick from a state that has more strength than the target

INTEL_NETWORK_STRENGTH_DECAY_WHEN_ABOVE_TARGET = -2.5, —— 当国家的情报网络强度超过目标值时，每个时间单位将减少的强度数值

INTEL_NETWORK_BASE_STRENGTH_TARGET_COUNTERINTELLIGENCE_FACTOR = -10.0,	— BaseStrengthTarget = Factor * CounterIntelligenceRating + Offset

INTEL_NETWORK_BASE_STRENGTH_TARGET_COUNTERINTELLIGENCE_FACTOR = -10.0, — 基础强度目标 = 系数 * 反情报评级 + 偏移值

INTEL_NETWORK_BASE_STRENGTH_TARGET_COUNTERINTELLIGENCE_OFFSET = 90,	— Offset mentioned above

INTEL_NETWORK_BASE_STRENGTH_TARGET_COUNTERINTELLIGENCE_OFFSET = 90, — 上述提到的偏移量

INTEL_NETWORK_MIN_VP_TO_TARGET = 15,					— The minimum value of the highest VP in a state to consider the state as a valid target to start building an intel network

INTEL_NETWORK_MIN_VP_TO_TARGET = 15, —— 一个州内最高VP值的最低要求，达到该值才被视为建立情报网络的合格目标

INTEL_NETWORK_MIN_STRENGTH_TO_TARGET = 101.0,				— The minimum value of the intel network in a state to consider it a valid target to deploy an operative in

INTEL_NETWORK_MIN_STRENGTH_TO_TARGET = 101.0, — 某州情报网络的最小值，低于此值则不考虑作为部署特工的有效目标

INTEL_NETWORK_MIN_STRENGTH_TO_LINK_SUBNETWORKS = 0.0,			— Where the influence of two operative meet, the two nodes on each side have to have strictly more than the given strength before the two operatives have a chance of being considered in the same network

INTEL_NETWORK_MIN_STRENGTH_TO_LINK_SUBNETWORKS = 0.0, —— 当两名特工的影响范围重叠时，两端的节点必须严格超过指定强度值，才有机会被视为属于同一网络。

INTEL_NETWORK_OPERATIVE_GAIN_STACKING_FACTOR = 0.5,			— When multiple operative are present in the same location, this factor is applied for each operative with a lower gain than the max. So if operatives have the gain [ 3, 1, 2 ] in the same location, it is sorted to [ 1, 2, 3 ] then converted to [ 1*D^2, 2*D^1, 3 ], with D being this define, so if D=0.5 we have [ 0.25, 1, 3 ] and the final gain from operative at this location will be 4.25. Putting this define to 0 is equivalent to considering the maximum value only.

INTEL_NETWORK_OPERATIVE_GAIN_STACKING_FACTOR = 0.5, —— 当多个特工处于同一地点时，此系数将作用于每个收益低于最大值的特工。例如若特工们在同一地点的收益为[3, 1, 2]，排序为[1, 2, 3]后转换为[1*D^2, 2*D^1, 3]，其中D即为此定义值。设D=0.5时得到[0.25, 1, 3]，该地点特工的最终总收益为4.25。将此定义值设为0则等同于仅取最大值。

INTEL_NETWORK_MIN_STRENGTH_FOR_STATE_TO_COUNT_TOWARD_NATIONAL_COVERAGE = 0.0,	— Amount of strength (0, 100) in a state required for it to count toward the national coverage

INTEL_NETWORK_MIN_STRENGTH_FOR_STATE_TO_COUNT_TOWARD_NATIONAL_COVERAGE = 0.0, — 一个州需要达到的信号强度（0至100之间）才能计入全国覆盖范围

INTEL_NETWORK_NATIONAL_COVERAGE_CONTROLLED_STATES_WEIGHT = 0.2,		— Weight (expected [0,1]) multiplied by the number of states covered by the network that are controlled by the target over the total number of states the target controls

INTEL_NETWORK_NATIONAL_COVERAGE_CONTROLLED_STATES_WEIGHT = 0.2, ——权重（预期范围[0,1]）乘以网络覆盖的目标控制州数量与目标控制州总数之比

INTEL_NETWORK_NATIONAL_COVERAGE_CORE_STATES_WEIGHT = 0.6,			— Weight (expected [0,1]) multiplied by the number of states covered by the network that are core to the target over the total number of states the target has for core

INTEL_NETWORK_NATIONAL_COVERAGE_CORE_STATES_WEIGHT = 0.6, — 权重（期望值[0,1]）乘以网络覆盖的目标核心州数量与目标拥有的核心州总数之比

INTEL_NETWORK_NATIONAL_COVERAGE_OWNED_WORTH_WEIGHT = 0.2,		— Weight (expected [0,1]) multiplied by the value of victory points covered by the network over the total value of victory points controlled by the targets

INTEL_NETWORK_NATIONAL_COVERAGE_OWNED_WORTH_WEIGHT = 0.2, —— 权重（预期范围[0,1]）乘以网络覆盖的胜利点价值与目标控制的总胜利点价值之比

INTEL_NETWORK_OCCUPIED_TAG_STATES_WEIGHT = 0.5,				— Weight (expected [0,1]) multiplied to the fraction of number of state covered by the intel network divided by the number of states occupied by the target of the network, per occupied tag

INTEL_NETWORK_OCCUPIED_TAG_STATES_WEIGHT = 0.5, —— 权重（预期范围[0,1]），乘以情报网络覆盖的州数量与网络目标所占州数量的比值，每个被占标签

INTEL_NETWORK_OCCUPIED_TAG_WORTH_WEIGHT = 0.5,				— Weight (expected [0,1]) multiplied to the fraction of victory points worth of states covered by the intel network divided by the worth of states occupied by the target of the network, per occupied tag

INTEL_NETWORK_OCCUPIED_TAG_WORTH_WEIGHT = 0.5, — 权重（期望值[0,1]），乘以情报网络覆盖区域胜利点价值占网络目标占领区域价值的比例，按占领标签计算

INTEL_NETWORK_MIN_SUB_NETWORK_SIZE_FOR_DETECTION = 0,			— minimum number of state of a sub-intel network before an operative on build intel network mission in this network can be detected

INTEL_NETWORK_MIN_SUB_NETWORK_SIZE_FOR_DETECTION = 0, —— 在该网络中进行情报网络建设任务的行动人员可被检测前，子情报网络状态的最小数量

INTEL_NETWORK_MIN_NATIONAL_COVERAGE_FOR_DETECTION = 0.02,		— [0, 1] minimum national coverage required for an operative on build intel network to have a chance to be discovered

INTEL_NETWORK_MIN_NATIONAL_COVERAGE_FOR_DETECTION = 0.02, — [0, 1] 情报网络建设人员在被发现前所需的最低全国覆盖率

INTEL_NETWORK_MIN_SUB_NETWORK_NATIONAL_COVERAGE_FOR_DETECTION = 0.01,	— [0, 1] minimum national coverage of the network the operative on build intel network is in to have a chance to be discovered

INTEL_NETWORK_MIN_SUB_NETWORK_NATIONAL_COVERAGE_FOR_DETECTION = 0.01, — [0, 1] 情报网络构建操作员所在子网络的最小全国覆盖率，以具备被发现的可能性

INTEL_NETWORK_MIN_SUB_NETWORK_STRENGTH_FOR_DETECTION = 10.0,		— [0, 100] minimum network strength of the network the operative on build intel network mission is in to have a chance to be discovered

INTEL_NETWORK_MIN_SUB_NETWORK_STRENGTH_FOR_DETECTION = 10.0, — [0, 100] 特工在执行建立情报网络任务时所处子网络的最小网络强度，低于此值则无法被发现



INTEL_NETWORK_INTELLIGENCE_AGENCY_DEFENSE_TO_DETECTION_FACTOR = 2.0,	— multiplied to the intelligence agency defense of the target of the intel network

INTEL_NETWORK_INTELLIGENCE_AGENCY_DEFENSE_TO_DETECTION_FACTOR = 2.0, — 乘以情报网络目标的智能机构防御值

INTEL_NETWORK_INTELLIGENCE_AGENCY_DEFENSE_DETECTION_SCALE_FACTOR = 0.0,	— factor multiplied to the intelligence agency defense of the target of the intel network before being factored to the detection chance

INTEL_NETWORK_INTELLIGENCE_AGENCY_DEFENSE_DETECTION_SCALE_FACTOR = 0.0, —— 该系数在计算情报网络检测概率时，会先乘以目标情报机构的防御值

INTEL_NETWORK_MAX_INTELLIGENCE_AGENCY_DEFENSE_DETECTION_SCALE_FACTOR = 1.0,	— clamp the value from the multiplication of the above factor (expect a value greater or equal to 1)

INTEL_NETWORK_MAX_INTELLIGENCE_AGENCY_DEFENSE_DETECTION_SCALE_FACTOR = 1.0, — 对上述因子乘积结果进行限幅（预期值大于或等于1）

INTEL_NETWORK_NATIONAL_COVERAGE_TO_DETECTION_CHANCE_FACTOR = 1.0,	— multiplied to the national coverage (a value in range [0, 1]

INTEL_NETWORK_NATIONAL_COVERAGE_TO_DETECTION_CHANCE_FACTOR = 1.0, — 乘以国家覆盖范围（取值范围为[0, 1]

INTEL_NETWORK_SUB_NETWORK_STRENGTH_TO_DETECTION_CHANCE_FACTOR = 0.1,	— multiplied to the network strength (a value in range [0, 100]

INTEL_NETWORK_SUB_NETWORK_STRENGTH_TO_DETECTION_CHANCE_FACTOR = 0.1, — 乘以网络强度（范围在[0, 100]之间的值）

INTEL_NETWORK_SUB_NETWORK_NATIONAL_COVERAGE_TO_DETECTION_CHANCE_FACTOR = 3.0,	— multiplied to the contribution to the national coverage of the sub network (a value in range [0, 1])

INTEL_NETWORK_SUB_NETWORK_NATIONAL_COVERAGE_TO_DETECTION_CHANCE_FACTOR = 3.0, — 乘以子网络对国家覆盖率的贡献值（取值范围为[0, 1]）

INTEL_NETWORK_DETECTION_GLOBAL_FACTOR = 0.01,				— global factor multiplied to the detection chance before it is multiplied a dice roll in the range [0,1000)

INTEL_NETWORK_DETECTION_GLOBAL_FACTOR = 0.01, —— 全局因子，在乘以[0,1000)范围内的随机骰子值前先与检测几率相乘

BUILD_INTEL_NETWORK_DAILY_XP_GAIN = 1,

BUILD_INTEL_NETWORK_DAILY_XP_GAIN = 1,

QUIET_INTEL_NETWORK_DAILY_XP_GAIN = 0,

QUIET_INTEL_NETWORK_DAILY_XP_GAIN = 0,

OPERATIVE_MISSION_DETECTION_CHANCE_FACTOR = {

行动任务侦测几率系数 = {

— Factor multiplied to the detection chance of an agent on mission before the offsets

—— 特工执行任务时检测几率的基础乘数因子（偏移调整前）

0.0, — NoMission

0.0, —— 无任务

1.0, — BuildIntelNetwork

1.0，——构建智能网络

1.0, — QuietIntelNetwork

1.0，——静默智能网络

1.0, — CounterIntelligence

1.0，——反情报

0.0, — RootOutResistance

0.0，—— RootOutResistance

3.0, — BoostIdeology

3.0，—— 助推理念

0.1, — ControlTrade

0.1，—— ControlTrade

0.1, — DiplomaticPressure

0.1，——外交施压





3.0, — Propaganda


3.0，— 宣传


},



— used for calculating how many operatives will a spy master gain from its faction members

— 用于计算间谍大师从其派系成员中将获得多少特工

— first number in every now is number of operatives gained

— 当前每个时间点获取的首个数字为新增行动人员数量

— second number is total factory needed (mil and civ) for giving previous ratio

第二个数字为达到前一比例所需总工厂数（军用工与民用）

OPERATIVE_SLOTS_FROM_FACTION_MEMBERS_FOR_SPY_MASTER = {

OPERATIVE_SLOTS_FROM_FACTION_MEMBERS_FOR_SPY_MASTER = {派系成员为间谍大师提供的特工槽位 = {

0.0, 	0.0, — 0 operative for [0, 10)

0.0, 0.0, — 0 在区间[0, 10)内生效

0.25, 	10.0, — 0.25 operative for [10, 50)

0.25，10.0，—0.25 适用于 [10, 50)

0.5, 	50.0, — 0.5 operative for >= 50

0.5、50.0，——0.5 适用于 >=50

},



INTEL_NETWORK_STATE_MODIFIER_STRENGTH_THRESHOLD = 10,			— Minimum amount of strength required in a state for the intel network related modifiers to start being applied

INTEL_NETWORK_STATE_MODIFIER_STRENGTH_THRESHOLD = 10, —— 情报网络相关修正开始生效所需的最小国家强度值



INTEL_NETWORK_MIN_DEFAULT_FOR_SHOWING = 25, — default min level for networks used to filter operation requirements if not overriden

INTEL_NETWORK_MIN_DEFAULT_FOR_SHOWING = 25, —— 默认最低网络等级，用于筛选操作需求，若无覆盖则生效



OPERATIVE_BASE_INTEL_NETWORK_GAIN = 0.4,				— Base amount of network strength gain per day provided by an operative

行动人员基础情报网络增益 = 0.4, —— 每位行动人员每日提供的基础网络强度增益量

OPERATIVE_MAX_INTEL_NETWORK_GAIN = -1.0,				— Max amount of network strength gain per day provided by an operative after modifiers have been applied (negative value means no max)

OPERATIVE_MAX_INTEL_NETWORK_GAIN = -1.0, — 特工在应用修正因子后每日提供的网络强度增益最大值（负值表示无上限）

COUNTER_INTELLIGENCE_FOREIGN_AGENT_FACTOR = 0.0,			— Multiplier to the counter intelligence provided by foreign (ally) operatives

COUNTER_INTELLIGENCE_FOREIGN_AGENT_FACTOR = 0.0, — 外国（盟国）特工提供的反间谍能力乘数

COUNTER_INTELLIGENCE_STACKING_FACTOR = 0.5,				— Multiplier applied to each operative after the first one. So if we have the following counter intelligence rating values [ 0.1, 0.3, 0.2 ], the factor is applied twice for the lowest value and once for the 2nd lowest one as such : [ 0.3, 0.2 D, 0.1 D * D ] and then the result is summed up to give the final rating value

COUNTER_INTELLIGENCE_STACKING_FACTOR = 0.5, —— 对第一个之后的每个特工应用的乘数。例如，如果我们有以下反间谍评级值 [ 0.1, 0.3, 0.2 ]，则该因子对最低值应用两次，对第二低的值应用一次，如：[ 0.3, 0.2 D, 0.1 D * D ]，然后将结果相加得出最终评级值。

COUNTER_INTELLIGENCE_TO_DEFENSE_LOG_FACTOR = 0.0,			— Defense = LogFactor * log( 1 + CounterIntelligence ) + CounterIntelligence / Divisor

COUNTER_INTELLIGENCE_TO_DEFENSE_LOG_FACTOR = 0.0, — 防御值 = 对数系数 * log( 1 + 反情报值 ) + 反情报值 / 除数

COUNTER_INTELLIGENCE_TO_DEFENSE_DIVISOR = 1.0,				— see above

COUNTER_INTELLIGENCE_TO_DEFENSE_DIVISOR = 1.0, —— 同上所述

COUNTER_INTELLIGENCE_DAILY_XP_GAIN = 0.112,

反情报日常经验值增益 = 0.112,

BOOST_IDEOLOGY_NATIONAL_COVERAGE_FACTOR = 1.0,				— used to compute the drift factor as follow: BASE SUB_NETWORK_NC BOOST_IDEOLOGY_DEFENSE_FACTOR

BOOST_IDEOLOGY_NATIONAL_COVERAGE_FACTOR = 1.0，——用于按以下方式计算漂移因子：基础子网国家覆盖 BOOST_IDEOLOGY_DEFENSE_FACTOR

BOOST_IDEOLOGY_MAX_DRIFT_BY_OPERATIVE = 0.25,				— the maximum drift an operative can cause, a negative value means no maximum

BOOST_IDEOLOGY_MAX_DRIFT_BY_OPERATIVE = 0.25, —— 单个行动人员可造成的最大漂移值，负值表示无上限

BOOST_IDEOLOGY_DRIFT_STACKING_FACTOR = 0.5,				— multiplied to the drift of an operative for each operative after the first one, with the greatest drift. So if we have the following drift values [ 0.1, 0.3, 0.2 ], the factor is applied twice for the lowest value and once for the 2nd lowest one as such : [ 0.3, 0.2 D, 0.1 D * D ] and then the result is summed up to give the final drift value.

BOOST_IDEOLOGY_DRIFT_STACKING_FACTOR = 0.5, ——对于意识形态漂移值最大的特工之后每位特工的漂移值，该系数将作为乘数作用于其漂移值。例如给定漂移值数组[ 0.1, 0.3, 0.2 ]时，最低值会被施加两次系数，次低值施加一次，计算方式为：[ 0.3, 0.2*D, 0.1*D*D ]，最终将所有结果相加得出总漂移值。

BOOST_IDEOLOGY_DEFENSE_FACTOR = 0.2,					— multiplied to the target’s defense to get the amount of drift to remove from each operative’s drift

BOOST_IDEOLOGY_DEFENSE_FACTOR = 0.2, ——乘以目标的防御值，得到从每位特工的偏移中需移除的偏移量

BOOST_IDEOLOGY_DAILY_XP_GAIN = 0.274,

BOOST_IDEOLOGY_DAILY_XP_GAIN = 0.274,

OPERATIVE_BASE_INTEL_AGENCY_DEFENSE = 1.0,				— Base amount of intel agency defense contributed by an operative on counter_intelligence mission

OPERATIVE_BASE_INTEL_AGENCY_DEFENSE = 1.0, — 特工执行反情报任务时对情报机构防御的基础贡献值

OPERATIVE_BASE_BOOST_IDEOLOGY = 0.1,					— Base amount of daily ideology drift provoked by an operative

OPERATIVE_BASE_BOOST_IDEOLOGY = 0.1, — 特工每日引发意识形态漂移的基础数值

OPERATIVE_BASE_PROPAGANDA_POWER = 0.0005,					— Base amount of daily war support and stability change when an operative is assigned to propaganda

OPERATIVE_BASE_PROPAGANDA_POWER = 0.0005, —— 当特工被分配进行宣传时，每日战争支持度和稳定性的基础变化量

PROPAGANDA_SUB_NETWORK_STRENGTH_FACTOR = 1.0,				— Multiplied to the network strength before being multiplied to the Stability/WarSupport drift caused by an operative

PROPAGANDA_SUB_NETWORK_STRENGTH_FACTOR = 1.0, — 在乘以由特工导致的稳定性/战争支持度漂移前，先与网络强度相乘的系数

PROPAGANDA_DEFENSE_FACTOR = 0.01,					— Multiplied to the target’s defense before being subtracted from the Stability/WarSupport drift caused by an operative

宣传防御系数 = 0.01, ——在从特工导致的稳定度/战争支持度变动中减去之前，乘以目标的防御值

PROPAGANDA_OPERATIVE_STACKING_FACTOR = 0.5,				— Multiplied to the Stability/WarSupport drift values of each operative after the one with the greatest values. The process is done separatly for Stability and WarSupport

宣传行动人员叠加系数 = 0.5, —— 在基础值最高的行动人员之后，每位行动人员的稳定性/战争支持度漂移值将乘以该系数。此过程分别针对稳定性和战争支持度独立计算。

PROPAGANDA_COUNTRY_STACKING_FACTOR = 0.5,				— Multiplied to the Stability/WarSupport drift values of each country after the one with the greatest values. The process is done separatly for Stability and WarSupport

PROPAGANDA_COUNTRY_STACKING_FACTOR = 0.5, —— 该系数将乘以每个国家在稳定性/战争支持度最高值之后的漂移值。此过程分别针对稳定性和战争支持度独立进行。

PROPAGANDA_DAILY_XP_GAIN = 0.350,

宣传日报_XP_增益 = 0.350,

OPERATIVE_BASE_ROOT_OUT_RESISTANCE_EFFICIENCY = 1.0,			— The base efficiency of an operative at the RootOutResistance mission (this is a percentage, 1.0 == 100%)

OPERATIVE_BASE_ROOT_OUT_RESISTANCE_EFFICIENCY = 1.0, — 特工执行RootOutResistance任务的基础效率（此为百分比数值，1.0代表100%）

ROOT_OUT_RESISTANCE_STACKING_FACTOR = 0.5,				— Multiplied to each operative efficiency after the first one

ROOT_OUT_RESISTANCE_STACKING_FACTOR = 0.5, —— 从第二个操作效率开始，每个都乘以该系数

ROOT_OUT_RESISTANCE_RANGE_STEP_FACTOR = 0.5,				— Multiplied to the summed up efficiency from all operative operating in a same state to determine the efficiency in neighboring states

ROOT_OUT_RESISTANCE_RANGE_STEP_FACTOR = 0.5， — 乘以同一状态下所有运作中的操作效率之和，用于确定相邻状态的效率

ROOT_OUT_RESISTANCE_DAILY_XP_GAIN = 0.068,

ROOT_OUT_RESISTANCE_DAILY_XP_GAIN = 0.068,

OPERATIVE_BASE_CONTROL_TRADE_DRIFT = 0.5,				— The base daily drift in trade influence caused by an operative

OPERATIVE_BASE_CONTROL_TRADE_DRIFT = 0.5, — 特工造成贸易影响力的基础每日漂移量

CONTROL_TRADE_STACKING_FACTOR = 0.5,					— Multiplied to the drift of each operative after the first one

CONTROL_TRADE_STACKING_FACTOR = 0.5, —— 对第一个之后每个操作员的漂移值进行相乘的系数

CONTROL_TRADE_MAX_INFLUENCE = 50.0,					— The maximum amount of trade influence that can be gained through the control trade mission

CONTROL_TRADE_MAX_INFLUENCE = 50.0, — 通过控制贸易任务可获得的贸易影响力最大值

CONTROL_TRADE_INFLUENCE_DAILY_DECAY = 0.1,				— The amount of trade influence lost when no operative are assigned to the mission

CONTROL_TRADE_INFLUENCE_DAILY_DECAY = 0.1, — 当未分配特工执行任务时每日损失贸易影响力数值

CONTROL_TRADE_DAILY_XP_GAIN = 0.137,

CONTROL_TRADE_DAILY_XP_GAIN = 0.137,

OPERATIVE_BASE_DIPLOMATIC_PRESSURE_AI_ACCEPTANCE_SCORE_DRIFT = 0.4,	— The daily change in the amount of opinion requiered to join a faction

OPERATIVE_BASE_DIPLOMATIC_PRESSURE_AI_ACCEPTANCE_SCORE_DRIFT = 0.4, — 加入阵营所需好感度的每日变化量

OPERATIVE_BASE_DIPLOMATIC_PRESSURE_TENSION_REQUIREMENTS_DRIFT = 0.001,	— The daily change in world tension requiered to join a faction

OPERATIVE_BASE_DIPLOMATIC_PRESSURE_TENSION_REQUIREMENTS_DRIFT = 0.001, — 加入阵营所需的世界紧张度每日变化量

DIPLOMATIC_PRESSURE_MAX_AI_ACCEPTANCE_SCORE_INCREASE = 20.0,	— the maximum amount of ai acceptance score from diplomatic pressure

DIPLOMATIC_PRESSURE_MAX_AI_ACCEPTANCE_SCORE_INCREASE = 20.0, —— 外交施压所能带来的AI接受度分数最大增加值

DIPLOMATIC_PRESSURE_MAX_TENSION_REQUIREMENTS_DECREASE = 0.20,	— amount of tension (tensions is in range [0,1]) that can be removed from the requirements imposed by the modifier join_faction_tension_limit

DIPLOMATIC_PRESSURE_MAX_TENSION_REQUIREMENTS_DECREASE = 0.20, —— 该修饰符join_faction_tension_limit所施加要求中可降低的紧张度数值（紧张度范围在[0,1]之间）

DIPLOMATIC_PRESSURE_OPERATIVE_STACKING_FACTOR = 0.5,		— The diminishing return factor to apply to operative working for the same faction after the first one. Operatives operating for a same faction are ranked by their efficiency and their opinion and tension drift are individually applyied a stacking factor like so: DRIFT * STACKING_FACTOR^RANK where RANK is a value from 0 to the number of operative -1 where the opperative with the highest drift value has rank 0

DIPLOMATIC_PRESSURE_OPERATIVE_STACKING_FACTOR = 0.5, — 应用于同一派系中第二名及以后特工时的收益递减系数。为同一派系工作的特工将按其效率排序，每位特工的意见倾向与紧张度漂移值将分别应用如下叠加系数：漂移值 * 叠加系数^排名，其中排名范围为0（漂移值最高的特工）至特工总数减1。

DIPLOMATIC_PRESSURE_AI_ACCEPTANCE_SCORE_DECAY = 0.4,			— daily decay when the mission is not active

DIPLOMATIC_PRESSURE_AI_ACCEPTANCE_SCORE_DECAY = 0.4, —— 任务未激活时的每日衰减值

DIPLOMATIC_PRESSURE_TENSION_REQUIREMENTS_DECAY = 0.001,			—

外交压力紧张需求衰减 = 0.001,

DIPLOMATIC_PRESSURE_DAILY_XP_GAIN = 0.137,

外交压力每日经验增益 = 0.137,

MIN_NATIONAL_COVERAGE_FOR_BOOST_IDEOLOGY = 0.01,			— Minimum network coverage required to start the mission (the code ensures that a network exists at all)

MIN_NATIONAL_COVERAGE_FOR_BOOST_IDEOLOGY = 0.01, — 启动任务所需的最低网络覆盖率（代码确保始终存在网络）

MIN_NATIONAL_COVERAGE_FOR_PROPAGANDA = 0.01,			— Minimum network coverage required to start the mission (the code ensures that a network exists at all)

MIN_NATIONAL_COVERAGE_FOR_PROPAGANDA = 0.01, —— 启动任务所需的最低网络覆盖率（代码确保网络始终存在）

OPERATIVE_MIN_DAYS_HARMED = 30,						— Minimum number of days an operative can be harmed. Applied after modifiers. Can be zero.

OPERATIVE_MIN_DAYS_HARMED = 30, — 特工可被伤害的最小天数。在应用修正后生效。可设为零。

OPERATIVE_MAX_DAYS_HARMED = 120,						— Maximum number of days an operative can be harmed. Applied after modifiers. Is ignored if negative

OPERATIVE_MAX_DAYS_HARMED = 120, —— 特工可受伤状态的最大天数。在应用修饰符后生效。若为负数则忽略此限制

OPERATIVE_MIN_DAYS_FORCED_INTO_HIDING = 7,				— Minimum number of days an operative can be forced into hiding. Applied after modifiers. Can be zero.

OPERATIVE_MIN_DAYS_FORCED_INTO_HIDING = 7, — 特工被强制隐藏的最少天数。在应用修改器后生效。可为零。

OPERATIVE_MAX_DAYS_FORCED_INTO_HIDING = 120,				— Maximum number of days an operative can be forced into hiding. Applied after modifiers. Is ignored if negative

OPERATIVE_MAX_DAYS_FORCED_INTO_HIDING = 120, — 特工被迫隐藏的最大天数。在应用修正值后生效。若为负值则忽略此限制

OPERATIVE_MAX_DAYS_TO_AUTO_RESUME_MISSION = 30,				— Maximum number of days an operative has to be disabled before its mission is not automatically resumed once he is available again

OPERATIVE_MAX_DAYS_TO_AUTO_RESUME_MISSION = 30, — 特工在被禁用后，其任务在其重新可用时仍会自动恢复的最长天数限制

MAX_RECRUITED_OPERATIVES = 10,

最大招募特工数 = 10,



CRYPTO_BASE_CRYPTO_LEVEL = 12000,						— base crypto strength for a country

CRYPTO_BASE_CRYPTO_LEVEL = 12000, — 国家基础加密强度

CRYPTO_CRYPTO_LEVEL_PER_CRYPTO_UPGRADE = 4250,			— crypto strength per crypto upgrade

CRYPTO_CRYPTO_LEVEL_PER_CRYPTO_UPGRADE = 4250, // 每次加密升级对应的加密强度



CRYPTO_CRYPTO_ACTIVE_BONUS_DURATION = 30,				— number of days the active decryption bonuses will be applied before enemy resets their intelligence

CRYPTO_CRYPTO_ACTIVE_BONUS_DURATION = 30, —— 敌方情报重置前，主动解密奖励将持续应用的天数

CYRPTO_ACTIVE_BONUS_ACTIVATION_PROGRESS_RATIO = 0.5,	— once bonus is activated, decryption progress will be reduced to this ratio

CYRPTO_ACTIVE_BONUS_ACTIVATION_PROGRESS_RATIO = 0.5, —— 一旦奖励激活，解密进度将降低至此比例



OPERATION_AI_MINIMUM_SCORE = 10.0,						— Once an operation’s AI weight falls below the minimum score it will be scrapped if it is being prepared

OPERATION_AI_MINIMUM_SCORE = 10.0, — 当操作的AI权重低于最低分数时，若该操作处于准备状态则会被废弃

OPERATION_COMPLETION_XP = 18,

操作完成经验值 = 18,



OPERATIVE_CAPTURE_DURATION_IN_DAYS = 9*30,

OPERATIVE_CAPTURE_DURATION_IN_DAYS = 9*30,



— operation cost & time are increased by default this ratios for each

— 默认情况下，运营成本和时间会按此比例自动增加

— instance of operation that were already executed against same target.

— 针对同一目标已执行的操作实例。

— can be overridden using time_multiplier & cost_multiplier in operation.

可通过在操作中使用time_multiplier和cost_multiplier来覆盖。

DEFAULT_OPERATION_COST_MULTIPLIER = 0.15,

默认操作成本乘数 = 0.15,

DEFAULT_OPERATION_TIME_MULTIPLIER = 0.0,

DEFAULT_OPERATION_TIME_MULTIPLIER = 0.0,



— The following defines are multiplied to the number of operatives operating in the target country the activity level is computed for

— 以下定义将乘以目标国家内执行任务的操作人员数量，用于计算活动水平

BUILD_INTEL_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 10,

BUILD_INTEL_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 10,

BOOST_IDEOLOGY_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 10,

BOOST_IDEOLOGY_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 10,

PROPAGANDA_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 10,

PROPAGANDA_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 10,

CONTROL_TRADE_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 1,

CONTROL_TRADE_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 1,

DIPLOMATIC_PRESSURE_NETWORK_MISSION_ACTIVITY_INDICATOR_FACTOR = 1,

外交压力网络任务活动指标系数 = 1,



— multiplied to the sum of the network coverage [0,1] all countries have over the target

— 乘以各国对目标网络覆盖率的[0,1]区间总和

INTEL_NETWORK_COVERAGE_ACTIVITY_FACTOR = 100,

INTEL_NETWORK_COVERAGE_ACTIVITY_FACTOR = 100,



— multiplied to the strength [0,100] of the strongest network over that country

—乘以该国最强网络的信号强度[0,100]

INTEL_NETWORK_STRENGTH_DANGER_FACTOR = 1,

INTEL_NETWORK_STRENGTH_DANGER_FACTOR = 1,



— Activity level PID values

— 活动级别PID数值

ACTIVITY_LEVEL_PROPORTIONAL_FACTOR = 0.01,

活动水平比例因子 = 0.01,

ACTIVITY_LEVEL_INTEGRAL_FACTOR = 0.001,

ACTIVITY_LEVEL_INTEGRAL_FACTOR = 0.001,

ACTIVITY_LEVEL_DERIVATIVE_FACTOR = 0,

活动级别衍生因子 = 0,



— Danger level PID values

— 危险级别PID数值

DANGER_LEVEL_PROPORTIONAL_FACTOR = 0.01,

DANGER_LEVEL_PROPORTIONAL_FACTOR = 0.01,

DANGER_LEVEL_INTEGRAL_FACTOR = 0.001,

危险等级积分因子 = 0.001,

DANGER_LEVEL_DERIVATIVE_FACTOR = 0,

危险等级衍生因子 = 0,



NUM_DAYS_BEFORE_REMOVING_PREPARED_OPERATIONS = 60, — num days before removing prepared operations

NUM_DAYS_BEFORE_REMOVING_PREPARED_OPERATIONS = 60, — 准备操作移除前的天数



ON_CAPTURE_COUNTERINTELLIGENCE_OPERATIVE_XP_GAIN = 100,					— Xp gain when an enemy operative is captured in the country the operative is assigned to counter intelligence to. Apply to a single randomly selected operative

ON_CAPTURE_COUNTERINTELLIGENCE_OPERATIVE_XP_GAIN = 100, — 当敌方特工在被指派进行反情报工作的国家被捕获时获得的经验值。随机选择一名特工应用此经验值。

ON_CAPTURE_COUNTERINTELLIGENCE_OPERATIVE_WEIGHT_OWN_COUNTRY_FOR_XP = 2,			— An integer on how likely an operative operating in his own country is to get selected for the xp reward on enemy operative capture

ON_CAPTURE_COUNTERINTELLIGENCE_OPERATIVE_WEIGHT_OWN_COUNTRY_FOR_XP = 2, — 一个整数，表示在本国活动的特工被选中获得俘虏敌方特工经验值奖励的倾向程度

ON_CAPTURE_COUNTERINTELLIGENCE_OPERATIVE_WEIGHT_DIFFERENT_COUNTRY_FOR_XP = 1,		— same for an operative assigned to counter intelligence in a different country than his own

ON_CAPTURE_COUNTERINTELLIGENCE_OPERATIVE_WEIGHT_DIFFERENT_COUNTRY_FOR_XP = 1, ——对于被派往不同于其本国的国家执行反情报任务的特工同样适用



— risk and outcome texts. each number array should match its labels in size, but its ok to have different amount of risk levels than outcomes

——风险与结果文本。每个数字数组的大小应与其标签相匹配，但风险等级的数量与结果数量不同是可以接受的。

RISK_LEVELS = { 0.1, 0.2, 0.3 }, — each risk level comes with a label to display for operations if it goes abve that number. If below the first it will isntead show the good outcomes

风险等级 = { 0.1, 0.2, 0.3 }, —— 每个风险等级对应一个标签，在操作超过该数值时显示。若低于第一个等级，则会显示良好结果。

RISK_LEVELS_LABELS = { “RISK_LOW”, “RISK_MID”, “RISK_HIGH” },

风险级别标签 = { "低风险", "中风险", "高风险" },

OUTCOME_LEVELS = { 0.0, 0.2, 0.3 }, — outcome levels are shown if risk is below its first entry instead

OUTCOME_LEVELS = { 0.0, 0.2, 0.3 }, —— 若风险低于其首个条目，则显示结果等级

OUTCOME_LEVELS_LABELS = { “OUTCOME_BASE”, “OUTCOME_GOOD”, “OUTCOME_VGOOD” },

OUTCOME_LEVELS_LABELS = { "基础结果", "良好结果", "优秀结果" },



TECH_STEAL_EQUIPMENT_FACTOR = 4,

科技窃取装备系数 = 4,

TECH_STEAL_YEAR_FACTOR = 4,

技术窃取年份因子 = 4,

},



NIntel = {

NIntel = {

COUNTRY_LEVEL_INTEL_MAXIMUMS = {			— The maximum intel a country can have over another

国家情报上限 = { — 一国对另一国所能拥有的最大情报量

100.0, — Civilian

100.0，——平民

100.0, — Army

100.0，——陆军

100.0, — Navy

100.0，— 海军





100.0, — Airforce


100.0，— 空军


},



— Static sources:

— 静态资源：

—

— A static source is a source that will fully decay once its origin disappear.

静态源是指一旦其来源消失便会完全衰变的源头。

— (e.g. radar destroyed)

— （例如雷达被摧毁）

—

— MAXIMUMS:

— 最大值：

— if set to an non-empty arrays, overrides COUNTRY_LEVEL_INTEL_MAXIMUMS

——如果设置为非空数组，将覆盖COUNTRY_LEVEL_INTEL_MAXIMUMS

— for this specific source (note that COUNTRY_LEVEL_INTEL_MAXIMUMS is

— 针对这一特定来源（请注意COUNTRY_LEVEL_INTEL_MAXIMUMS是

— applied after INTEL_SOURCE_XXX_MAXIMUMS)

— 在应用INTEL_SOURCE_XXX_MAXIMUMS后



STATIC_INTEL_SOURCE_OPERATION_TOKENS_MAXIMUMS = {},

STATIC_INTEL_SOURCE_OPERATION_TOKENS_MAXIMUMS = {},

STATIC_INTEL_SOURCE_BROKEN_CYPHER_MAXIMUMS = { 60.0, 60.0, 60.0, 60.0 },

STATIC_INTEL_SOURCE_BROKEN_CYPHER_MAXIMUMS = { 60.0, 60.0, 60.0, 60.0 },

STATIC_INTEL_SOURCE_RADAR_MAXIMUMS = { 10.0, 10.0, 20.0, 20.0 },

STATIC_INTEL_SOURCE_RADAR_MAXIMUMS = { 10.0, 10.0, 20.0, 20.0 },

STATIC_INTEL_SOURCE_INTEL_NETWORK_MAXIMUMS = { 30.0, 30.0, 40.0, 30.0},

STATIC_INTEL_SOURCE_INTEL_NETWORK_MAXIMUMS = { 30.0, 30.0, 40.0, 30.0},



— Dynamic intel pool can be manipulated through the following defines:

动态情报池可通过以下定义进行操作：

—

— FLAT_DECAY and MULT_DECAY control the rate at which the intel decays

— FLAT_DECAY 和 MULT_DECAY 控制情报衰减的速率

— The formula is applied as follow (runs daily):

该公式应用如下（每日运行）：

— NextIntel = ( Intel - FLAT_DECAY ) * MULT_DECAY

— 下一轮智力值 = (当前智力值 - 基础衰减) * 衰减系数

—

— AGGREGAT_LOG_FACTOR and AGGREGAT_DIVISOR control the rate at which

AGGREGAT_LOG_FACTOR 和 AGGREGAT_DIVISOR 用于控制聚合速率

— intel accumulates. It is applied to the sum of the intel generated

——情报不断累积。它适用于所生成情报的总和

— throughout the day as follow:

全天按如下安排：

— Aggregat = LOG_FACTOR * log( 1 + IntelOfTheDay ) + IntelOfTheDay / DIVISOR

— 聚合值 = 对数系数 * 对数( 1 + 当日情报值 ) + 当日情报值 / 除数

— The Aggregat is then added to the pool of intel.

随后，Aggregat被加入情报池中。

— If DIVISOR is zero then the division is evaluated to zero.

— 如果除数为零，则除法运算结果为零。

—

— MAXIMUMS controls the maximum value that the pool can contribute to

— MAXIMUMS 控制池可贡献的最大值

— the final intel values.

——最终的整数值。

—

— ABSOLUTE_MAXIMUMS defines a ceiling for the intel in the pool that

—— ABSOLUTE_MAXIMUMS 定义了情报池中情报数量的上限

— will never be exceeded. They are meant to be greater or equal to

— 永远不会被超越。它们的设定旨在大于或等于

— MAXIMUMS. If the array is empty, no absolute maximum is defined.

— 最大值。若数组为空，则未定义绝对最大值。



— Dynamic pool EVENT

— 动态池活动

DYNAMIC_INTEL_SOURCE_EVENT_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_EVENT_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_EVENT_MULT_DECAY = 0.985,

DYNAMIC_INTEL_SOURCE_EVENT_MULT_DECAY = 0.985,

DYNAMIC_INTEL_SOURCE_EVENT_AGGREGAT_LOG_FACTOR = 0,

DYNAMIC_INTEL_SOURCE_EVENT_AGGREGAT_LOG_FACTOR = 0,

DYNAMIC_INTEL_SOURCE_EVENT_AGGREGAT_DIVISOR = 1,

动态英特尔源事件聚合除数 = 1,

DYNAMIC_INTEL_SOURCE_EVENT_MAXIMUMS = { 40, 40, 40, 40 },

DYNAMIC_INTEL_SOURCE_EVENT_MAXIMUMS = { 40, 40, 40, 40 },

DYNAMIC_INTEL_SOURCE_EVENT_ABSOLUTE_MAXIMUMS = { 50, 50, 50, 50 },

DYNAMIC_INTEL_SOURCE_EVENT_ABSOLUTE_MAXIMUMS = { 50, 50, 50, 50 },



— Dynamic pool LAND_COMBAT

— 动态池 陆地战斗

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_MULT_DECAY = 0.985,

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_MULT_DECAY = 0.985,

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_AGGREGAT_LOG_FACTOR = 0.25,

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_AGGREGAT_LOG_FACTOR = 0.25,

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_AGGREGAT_DIVISOR = 10,

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_AGGREGAT_DIVISOR = 10,

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_MAXIMUMS = { 0, 30, 5, 10 },

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_MAXIMUMS = { 0, 30, 5, 10 },

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_ABSOLUTE_MAXIMUMS = { 0, 40, 10, 15 },

DYNAMIC_INTEL_SOURCE_LAND_COMBAT_ABSOLUTE_MAXIMUMS = { 0, 40, 10, 15 },



— Dynamic pool NAVAL_COMBAT

动态池 海战_战斗

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_MULT_DECAY = 0.985,

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_MULT_DECAY = 0.985,

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_AGGREGAT_LOG_FACTOR = 0.02,

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_AGGREGAT_LOG_FACTOR = 0.02,

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_AGGREGAT_DIVISOR = 200,

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_AGGREGAT_DIVISOR = 200,

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_MAXIMUMS = { 10, 0, 40, 20 },

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_MAXIMUMS = { 10, 0, 40, 20 },

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_ABSOLUTE_MAXIMUMS = { 15, 0, 45, 25 },

DYNAMIC_INTEL_SOURCE_NAVAL_COMBAT_ABSOLUTE_MAXIMUMS = { 15, 0, 45, 25 },



— Dynamic pool AIR_COMBAT

— 动态空中作战池

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_MULT_DECAY = 0.985,

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_MULT_DECAY = 0.985,

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_AGGREGAT_LOG_FACTOR = 1,

动态英特尔源空战聚合日志因子 = 1,

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_AGGREGAT_DIVISOR = 2,

动态英特尔源空战聚合除数 = 2,

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_MAXIMUMS = { 0, 0, 0, 25 },

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_MAXIMUMS = { 0, 0, 0, 25 },

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_ABSOLUTE_MAXIMUMS = { 0, 0, 0, 30 },

DYNAMIC_INTEL_SOURCE_AIR_COMBAT_ABSOLUTE_MAXIMUMS = { 0, 0, 0, 30 },



— Dynamic pool AIR_RECON

— 动态资源池 AIR_RECON

DYNAMIC_INTEL_SOURCE_AIR_RECON_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_AIR_RECON_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_AIR_RECON_MULT_DECAY = 0.995,

动态情报来源空中侦察多重衰减系数 = 0.995,

DYNAMIC_INTEL_SOURCE_AIR_RECON_AGGREGAT_LOG_FACTOR = 0.05,

DYNAMIC_INTEL_SOURCE_AIR_RECON_AGGREGAT_LOG_FACTOR = 0.05,

DYNAMIC_INTEL_SOURCE_AIR_RECON_AGGREGAT_DIVISOR = 200,

DYNAMIC_INTEL_SOURCE_AIR_RECON_AGGREGAT_DIVISOR = 200,

DYNAMIC_INTEL_SOURCE_AIR_RECON_MAXIMUMS = { 25, 20, 30, 20 },

DYNAMIC_INTEL_SOURCE_AIR_RECON_MAXIMUMS = { 25, 20, 30, 20 },

DYNAMIC_INTEL_SOURCE_AIR_RECON_ABSOLUTE_MAXIMUMS = { 30, 25, 35, 25 },

动态英特尔源空中侦察绝对最大值 = { 30, 25, 35, 25 },



— Dynamic pool CAPTURED_OPERATIVE

— 动态池 捕获的特工

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_FLAT_DECAY = 0.0,

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_MULT_DECAY = 0.95,

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_MULT_DECAY = 0.95,

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_AGGREGAT_LOG_FACTOR = 1,

动态英特尔源捕获操作员聚合日志因子 = 1,

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_AGGREGAT_DIVISOR = 2,

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_AGGREGAT_DIVISOR = 2,

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_MAXIMUMS = { 50, 40, 40, 30 },

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_MAXIMUMS = { 50, 40, 40, 30 },

DYNAMIC_INTEL_SOURCE_CAPTURED_OPERATIVE_ABSOLUTE_MAXIMUMS = { 50, 40, 40, 30 },

动态情报源捕获特工绝对最大值 = { 50, 40, 40, 30 },



LAND_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_INSTANCE = 1.0,			— if the opponent has any division present, flat intel value generated py a participant against an opponent

LAND_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_INSTANCE = 1.0, ——若敌方有任何师级单位在场，参与者对抗该敌手时每实例生成的基础情报值

LAND_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_COMITTED_DIVISIONS = 0.5,		— multiplied to the number of comitted divisions of the opponent

LAND_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_COMITTED_DIVISIONS = 0.5, — 乘以对手投入的师数量

LAND_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_RESERVE_DIVISIONS = 0.1,		— same for divisions in reserve

LAND_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_RESERVE_DIVISIONS = 0.1, —— 对后备师同样适用

LAND_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_RETREATING_DIVISIONS = 0.2,		— same for retreating divisions

LAND_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_RETREATING_DIVISIONS = 0.2, —— 撤退师单位同样适用

LAND_COMBAT_ARMY_INTEL_FACTOR = 0.01,						— factor applied once all values have been added together

LAND_COMBAT_ARMY_INTEL_FACTOR = 0.01, —— 所有数值相加后应用的系数

LAND_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_INSTANCE = 1.0,				— if the opponent has any plane active in the, flat intel value generated by a participant against that opponent

LAND_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_INSTANCE = 1.0, —— 若对手在该区域有任何活跃飞机，参与者对抗该对手时生成的基础情报值

LAND_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_PLANE = 0.1,				— multiplied to the number of plane that opponent has in the combat

陆地战斗中对敌方每架飞机的空中情报优势 = 0.1, — 乘以敌方在战斗中拥有的飞机数量

LAND_COMBAT_AIR_INTEL_FACTOR = 0.01,						— factor applied once all values have been added together

陆地战斗空中情报因子 = 0.01, — 在所有数值相加后应用的因子

RECON_INTEL_BONUS = 0.075, — each recon gives this bonus to overall gathered land intel in combat

RECON_INTEL_BONUS = 0.075, —— 每次侦察在战斗中为整体收集的陆地情报提供此加成



NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_INSTANCE = 1.0,

海军战斗情报优势每实例对抗对手值 = 1.0,

NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_SUBMARINE = 0.2,

NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_SUBMARINE = 0.2,

NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_SCREEN_SHIP = 0.5,

NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_SCREEN_SHIP = 0.5,

NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_CAPITAL_SHIP = 1.0,

NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_CAPITAL_SHIP = 1.0,

NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_INTERNAL_PLANES = 0.05,

NAVAL_COMBAT_NAVY_INTEL_OVER_OPPONENT_PER_INTERNAL_PLANES = 0.05,

NAVAL_COMBAT_NAVY_INTEL_FACTOR = 1.0,

海军战斗情报系数 = 1.0,

NAVAL_COMBAT_CIVILIAN_INTEL_OVER_OPPONENT_PER_INSTANCE = 0.0,

NAVAL_COMBAT_CIVILIAN_INTEL_OVER_OPPONENT_PER_INSTANCE = 0.0,

NAVAL_COMBAT_CIVILIAN_INTEL_OVER_OPPONENT_PER_TRADE_CONVOY = 1.0,

NAVAL_COMBAT_CIVILIAN_INTEL_OVER_OPPONENT_PER_TRADE_CONVOY = 1.0,

NAVAL_COMBAT_CIVILIAN_INTEL_FACTOR = 1.0,

NAVAL_COMBAT_CIVILIAN_INTEL_FACTOR = 1.0,

NAVAL_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_INSTANCE = 0.0,

NAVAL_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_INSTANCE = 0.0,

NAVAL_COMBAT_ARMY_INTEL_OVER_OPPONENT_PER_TRANSFER_CONVOY = 1.0,

海军战斗陆军情报对敌方每艘运输船的影响 = 1.0,

NAVAL_COMBAT_ARMY_INTEL_FACTOR = 1.0,

海军战斗_陆军情报系数 = 1.0,

NAVAL_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_INSTANCE = 1.0,

NAVAL_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_INSTANCE = 1.0,

NAVAL_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_INTERNAL_PLANES = 0.0,

NAVAL_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_INTERNAL_PLANES = 0.0,

NAVAL_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_EXTERNAL_PLANES = 0.01,

NAVAL_COMBAT_AIR_INTEL_OVER_OPPONENT_PER_EXTERNAL_PLANES = 0.01,

NAVAL_COMBAT_AIR_INTEL_FACTOR = 1.0,

海军战斗空中情报系数 = 1.0,



NAVY_INTEL_BASE_SPOTTING_BONUS_MIN_INTEL_FOR_BONUS = 5, — at least this intel diff is needed for start applying BASE_SPOTTING_FROM_DECRYPTION bonus

NAVY_INTEL_BASE_SPOTTING_BONUS_MIN_INTEL_FOR_BONUS = 5, —— 至少需要这样的情报差异才能开始应用BASE_SPOTTING_FROM_DECRYPTION加成

NAVY_INTEL_BASE_SPOTTING_BONUS_MAX_INTEL_FOR_BONUS = 40, — at this intel BASE_SPOTTING_FROM_DECRYPTION will be applied fully

NAVY_INTEL_BASE_SPOTTING_BONUS_MAX_INTEL_FOR_BONUS = 40， — 当情报达到此值时，BASE_SPOTTING_FROM_DECRYPTION的效果将完全生效



NAVY_INTEL_MINE_DAMAGE_REDUCTION_FACTOR_MIN_INTEL_FOR_BONUS = 5, — at least this intel diff is needed for start applying NAVAL_MINES_INTEL_DIFF_FACTOR bonus

NAVY_INTEL_MINE_DAMAGE_REDUCTION_FACTOR_MIN_INTEL_FOR_BONUS = 5, ——至少需要达到这个情报差异值才能开始应用NAVAL_MINES_INTEL_DIFF_FACTOR加成

NAVY_INTEL_MINE_DAMAGE_REDUCTION_FACTOR_MAX_INTEL_FOR_BONUS = 40, — t this intel NAVAL_MINES_INTEL_DIFF_FACTOR will be applied fully

NAVY_INTEL_MINE_DAMAGE_REDUCTION_FACTOR_MAX_INTEL_FOR_BONUS = 40, — 达到此情报值后，NAVAL_MINES_INTEL_DIFF_FACTOR将完全生效



AIR_COMBAT_AIR_INTEL_PER_INSTANCE = 1.0,

空中作战_空中情报_每次实例 = 1.0,

AIR_COMBAT_AIR_INTEL_PER_OPPONENT_PLANE = 0.0,

空中作战中每架敌机的智能对抗值 = 0.0,

AIR_COMBAT_AIR_INTEL_FACTOR = 0.2,

AIR_COMBAT_AIR_INTEL_FACTOR = 0.2,



INTEL_NETWORK_NATIONAL_COVERAGE_FACTOR = 2.0,			 — multiplied to the national coverage to deduce the fraction of the maximum value listed below that will be added to the intel against the network’s target

INTEL_NETWORK_NATIONAL_COVERAGE_FACTOR = 2.0, ——乘以国家覆盖率以推算出将针对网络目标添加到情报中的最大值以下部分的比例

INTEL_NETWORK_NATIONAL_COVERAGE_NAVAL_BASE_FACTOR = 15.0, — factor used instead of above in case you dont cover naval bases etc

INTEL_NETWORK_NATIONAL_COVERAGE_NAVAL_BASE_FACTOR = 15.0, — 在不覆盖海军基地等情况下替代上述数值的系数



— the maximum intel values that an intel network will provide against a target

——情报网络针对目标所能提供的最大情报值

INTEL_NETWORK_MAX_CIVILIAN_INTEL = 20.0,

INTEL_NETWORK_MAX_CIVILIAN_INTEL = 20.0,

INTEL_NETWORK_MAX_ARMY_INTEL = 20.0,

INTEL_NETWORK_MAX_ARMY_INTEL = 20.0,

INTEL_NETWORK_MAX_NAVY_INTEL = 25.0,				— only apply if the network encompass a naval base controlled by the network’s target

INTEL_NETWORK_MAX_NAVY_INTEL = 25.0, — 仅当网络覆盖目标控制的海军基地时适用

INTEL_NETWORK_MAX_AIRFORCE_INTEL = 15.0,

INTEL_NETWORK_MAX_AIRFORCE_INTEL = 15.0,



RADAR_LEVEL_INTEL_FACTOR = 1.25,					— Multiplied to the radar level to tell the fraction of intel per covered province we get. The radar level is computed as BuildingLevel / MaxBuildingLevel.

RADAR_LEVEL_INTEL_FACTOR = 1.25, —— 乘以雷达等级以确定我们在每个覆盖省份获得的情报比例。雷达等级的计算公式为建筑等级除以最大建筑等级。

RADAR_INTEL_STACKING_FACTOR = 0.5,				— Used when multiple radars cover the same province

RADAR_INTEL_STACKING_FACTOR = 0.5, ——当多个雷达覆盖同一省份时使用

RADAR_BASE_INTEL_VALUES_FOR_COUNTRY_COVERAGE_PERCENTAGE = {

雷达基础情报值对应国家覆盖率百分比 = {

— Values are the same order as in COUNTRY_LEVEL_INTEL_MAXIMUMS

— 数值顺序与COUNTRY_LEVEL_INTEL_MAXIMUMS中保持一致

— Multiplied by the total radar efficiency over the provinces of

— 乘以各省份雷达效率的总和

— a specific country divided by the number of provinces controlled

— 特定国家按其控制的省份数量划分

— by that same country.

——由同一国家所为。

9.0,

9.0,

0.0,





18.0,


},

RADAR_BASE_INTEL_VALUES_FOR_COVERED_LAND_PROVINCES = {

雷达基础情报值对于被覆盖的陆地省份 = {

— Values are the same order as in COUNTRY_LEVEL_INTEL_MAXIMUMS

— 数值顺序与COUNTRY_LEVEL_INTEL_MAXIMUMS中保持一致

— Multiplied by the total radar efficiency of the provinces of

——乘以各省雷达效率的总和

— a specific country divided by the individual radar’s

——一个被单个雷达划分的具体国家

— percentage of covered provinces.

— 覆盖省份的百分比。

5.0,

5.0,

0.0,





12.0,


},

RADAR_BASE_INTEL_VALUES_FOR_COVERED_SEA_PROVINCES = {

RADAR_BASE_INTEL_VALUES_FOR_COVERED_SEA_PROVINCES = {

— Values are the same order as in COUNTRY_LEVEL_INTEL_MAXIMUMS

— 数值顺序与COUNTRY_LEVEL_INTEL_MAXIMUMS中保持一致

— Multiplied by the total radar efficiency of the provinces

——乘以各省雷达效率的总和

— covered by the radar for each strategic region that has

——由雷达覆盖的每一个战略区域

— convoy routes and multiplied by the fraction of convoy

— 护航路线乘以护航船队被袭击的比例

— that country has going through the region (excluding the

该国正在穿越该地区（不包括

— convoys of the radar’s owner)

— 雷达所有者的车队

0.0,

0.0,

280.0,





0.0,


},

RADAR_NAVY_INTEL_FACTOR_PER_SHIP_TYPE = {

RADAR_NAVY_INTEL_FACTOR_PER_SHIP_TYPE = {

— Navy intel value factored to the fraction of the country’s

海军情报价值被折算为国家的一小部分

— ships in the sea zone covered by the radar, by ship type

——雷达覆盖海域内的船只，按船只类型分类

5.0, — Submarine

5.0，— 潜艇

10.0, — Screen ship

10.0，— 屏幕船

20.0, — Capital ship

20.0，——主力舰





30.0, — Carrier ship


30.0，—— 运输船


},

CAPTURED_OPERATIVE_MAX_FACTOR = 35.0,	— Define the maximum of the randomized factor, before the factor from operative is applied

被俘特工最大系数 = 35.0, — 定义应用特工自身系数前随机化系数的上限

CAPTURED_OPERATIVE_MIN_FACTOR = 10.0,	— Define the minimum of the randomized factor, before the factor from operative is applied

被俘特工最小系数 = 10.0, —— 定义在应用特工系数前的随机系数最小值

CAPTURED_OPERATIVE_INTEL_YIELD = {

捕获的特工情报产出 = {

— Values are the same order as in COUNTRY_LEVEL_INTEL_MAXIMUMS

— 数值顺序与COUNTRY_LEVEL_INTEL_MAXIMUMS中保持一致

— Daily base intel yield from an operative, before the

——特工每日基础情报产出，在...之前

— factors defined above are applied

以上定义的因素得以应用

0.3,

0.3,

0.3,





0.3,


},



RECON_PLANE_INTEL_BASE = 0.02, 				— intel base amount for a strategic area per plane

RECON_PLANE_INTEL_BASE = 0.02, —— 每架侦察机对战略区域的基础情报值

RECON_PLANE_LAND_DISTRIBUTION = { 10.0, 6.0, 0.0, 3.0 }, — controls for land and sea zones how much of each intel typee is given (civ, army, navy, air)

RECON_PLANE_LAND_DISTRIBUTION = { 10.0, 6.0, 0.0, 3.0 }, — 控制陆地和海洋区域各情报类型的分配比例（民用、陆军、海军、空军）

RECON_PLANE_SEA_DISTRIBUTION = { 0.0, 0.0, 10.0, 0.0 },

RECON_PLANE_SEA_DISTRIBUTION = { 0.0, 0.0, 10.0, 0.0 },



LAND_SPOT_DECAY = 0.05,

土地点衰减 = 0.05,

NAVAL_SPOT_DECAY = 1,

NAVAL_SPOT_DECAY = 1,



ENCRYPTION_DECRYPTION_INTEL_FACTORS = {

加密解密情报因素 = {

— Factored to ( 1 + A.decryption ) / ( 1 + B.encryption ) to determine the intel

— 分解为 (1 + A.解密) / (1 + B.加密) 以确定情报

— A has over B when legacy encryption and decryption modifier are used.

使用传统加密和解密修饰符时，A对B具有优势。

— Note that if A.decryption is zero, the result is forced to zero

— 请注意，如果A.decryption为零，则结果被强制设为零

— In the ame order as COUNTRY_LEVEL_INTEL_MAXIMUMS

— 按照COUNTRY_LEVEL_INTEL_MAXIMUMS的相同顺序排列

15.0, 15.0, 15.0, 15.0

},



— intel ledger defines

英特尔账本定义

CIVILIAN_PRODUCTION_RANGE_INTEL_MIN = 0.1, — minimum value to show fuzzy factory counts below this you will get ???

CIVILIAN_PRODUCTION_RANGE_INTEL_MIN = 0.1, —— 显示模糊工厂数量的最小值，低于此值将显示 ???

CIVILIAN_PRODUCTION_RANGE_INTEL_MAX = 0.5, — maximum value to show fuzzy factory counts. above this you will get full count

CIVILIAN_PRODUCTION_RANGE_INTEL_MAX = 0.5, —— 显示模糊工厂数量的最大值。超过此值将显示完整数量。

CIVILIAN_PRODUCTION_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — range of intel values at lowest intel

CIVILIAN_PRODUCTION_INTEL_RANGE_AT_LOWEST_INTEL = 0.5，——最低情报值下的情报范围



CIVILIAN_FUEL_RANGE_INTEL_MIN = 0.3, — minimum value to show fuzzy factory counts below this you will get ???

CIVILIAN_FUEL_RANGE_INTEL_MIN = 0.3, —— 显示模糊工厂数量的最小值，低于此值将显示 ???

CIVILIAN_FUEL_RANGE_INTEL_MAX = 0.7, — maximum value to show fuzzy factory counts. above this you will get full count

CIVILIAN_FUEL_RANGE_INTEL_MAX = 0.7, — 显示模糊工厂数量的最大值。超过此值将显示完整数量

CIVILIAN_FUEL_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — range of intel values at lowest intel

平民燃料情报范围_最低情报值 = 0.5, —— 最低情报下的情报值范围



CIVILIAN_MANPOWER_RANGE_INTEL_MIN = 0.1, — minimum value to show fuzzy factory counts below this you will get ???

CIVILIAN_MANPOWER_RANGE_INTEL_MIN = 0.1, — 低于此值将显示模糊工厂数量，若数值更小则显示???

CIVILIAN_MANPOWER_RANGE_INTEL_MAX = 0.7, — maximum value to show fuzzy factory counts. above this you will get full count

CIVILIAN_MANPOWER_RANGE_INTEL_MAX = 0.7, —— 显示模糊工厂数量的最大值。超过此值将显示完整数量。

CIVILIAN_MANPOWER_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — range of intel values at lowest intel

CIVILIAN_MANPOWER_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, —— 最低情报值时的情报范围



CIVILIAN_CONVOYS_RANGE_INTEL_MIN = 0.1, — minimum value to show fuzzy factory counts below this you will get ???

民用车队情报范围最小值 = 0.1, ——低于此值将显示模糊工厂计数（显示为???）的最低阈值

CIVILIAN_CONVOYS_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — range of intel values at lowest intel

平民车队情报最低值范围 = 0.5, —— 情报最低值时的情报范围



CIVILIAN_TRUCKS_RANGE_INTEL_MIN = 0.1, — minimum value to show fuzzy factory counts below this you will get ???

CIVILIAN_TRUCKS_RANGE_INTEL_MIN = 0.1, — 显示模糊工厂数量的最小值，低于此值将显示???

CIVILIAN_TRUCKS_RANGE_INTEL_MAX = 0.5, — maximum value to show fuzzy factory counts. above this you will get full count

CIVILIAN_TRUCKS_RANGE_INTEL_MAX = 0.5, ——显示模糊工厂数量的最大值。超过此值将显示完整计数

CIVILIAN_TRUCKS_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — range of intel values at lowest intel

CIVILIAN_TRUCKS_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — 情报值在最低情报状态下的作用范围



CIVILIAN_TRAINS_RANGE_INTEL_MIN = 0.1, — minimum value to show fuzzy factory counts below this you will get ???

CIVILIAN_TRAINS_RANGE_INTEL_MIN = 0.1, — 显示模糊工厂数量的最小值，低于此值将显示 ???

CIVILIAN_TRAINS_RANGE_INTEL_MAX = 0.5, — maximum value to show fuzzy factory counts. above this you will get full count

CIVILIAN_TRAINS_RANGE_INTEL_MAX = 0.5, — 显示模糊工厂数量的最大值，超过此值将显示完整计数

CIVILIAN_TRAINS_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — range of intel values at lowest intel

CIVILIAN_TRAINS_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — 最低情报值时的情报范围



CIVILIAN_SUPPLY_RANGE_INTEL_MIN = 0.1, — minimum value to show fuzzy factory counts below this you will get ???

CIVILIAN_SUPPLY_RANGE_INTEL_MIN = 0.1, — 显示模糊工厂数量的最小值，低于此值将显示???

CIVILIAN_SUPPLY_RANGE_INTEL_MAX = 0.5, — maximum value to show fuzzy factory counts. above this you will get full count

CIVILIAN_SUPPLY_RANGE_INTEL_MAX = 0.5, — 显示模糊工厂数量的最大值。超过此数值将显示完整计数。

CIVILIAN_SUPPLY_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — range of intel values at lowest intel

CIVILIAN_SUPPLY_INTEL_RANGE_AT_LOWEST_INTEL = 0.5, — 情报最低时的情报值范围



CIVILIAN_TRADE_SHOW_TRADE_AMOUNTS = 0.0, — minimum value to show how much a country trades a resource

平民贸易展示贸易额 = 0.0, — 显示国家资源贸易量的最小值

CIVILIAN_TRADE_SHOW_TRADE_PARTNERS = 0.1, — minimum value to show who a country trades with

平民贸易展_贸易伙伴 = 0.1, — 显示国家间贸易关系的最低阈值

CIVILIAN_MIN_INTEL_FOR_RESOURCE_ROUTES_TOOLTIPS = 0.9, — minimum value to show convoy routes for resource transfer

CIVILIAN_MIN_INTEL_FOR_RESOURCE_ROUTES_TOOLTIPS = 0.9, — 显示资源转移护航路线所需的最低情报值

CIVILIAN_MIN_INTEL_FOR_TRADE_ROUTES = 0.7, — minimum value to show trade routes on map

CIVILIAN_MIN_INTEL_FOR_TRADE_ROUTES = 0.7, ——在地图上显示贸易路线所需的最低情报值

CIVILIAN_MIN_INTEL_FOR_RESOURCE_ORIGIN_ROUTES = 0.5, — minimum value to show resource transfers to mainland on map

CIVILIAN_MIN_INTEL_FOR_RESOURCE_ORIGIN_ROUTES = 0.5, —— 在地图上显示资源向本土转移的最低情报值



ARMY_MIN_INTEL_FOR_SUPPLY_ROUTES = 0.5, — minimum value to show convoy routes for supply transfer

ARMY_MIN_INTEL_FOR_SUPPLY_ROUTES = 0.5, ——显示补给运输路线所需的最低情报值

ARMY_MIN_INTEL_FOR_SUPPLY_ROUTES_TOOLTIPS = 0.7, — minimum value to show convoy route tooltips for supply transfer

ARMY_MIN_INTEL_FOR_SUPPLY_ROUTES_TOOLTIPS = 0.7, ——显示补给转移护航路线工具提示的最低阈值



CIVILIAN_INTEL_NEEDED_TO_SHOW_ANTI_AIR_REDUCTION = 0.3, — minimum value to show anti air damage reduction

CIVILIAN_INTEL_NEEDED_TO_SHOW_ANTI_AIR_REDUCTION = 0.3, — 显示防空伤害减免所需的最低值



CIVILIAN_INTEL_NEEDED_TO_SHOW_FOCUS_TREE = 0.5, — min required intel to focus tree with taken focuses

平民情报需求以显示焦点树 = 0.5, — 采取焦点所需的最低情报值以显示焦点树

CIVILIAN_INTEL_NEEDED_TO_SHOW_CURRENT_FOCUS = 0.7, — min required intel to show currently focus

CIVILIAN_INTEL_NEEDED_TO_SHOW_CURRENT_FOCUS = 0.7, — 显示当前关注所需的最低情报值

CIVILIAN_INTEL_NEEDED_TO_SHOW_CURRENT_FOCUS_PROGRESS = 0.7, — min required intel to show current focus progress

CIVILIAN_INTEL_NEEDED_TO_SHOW_CURRENT_FOCUS_PROGRESS = 0.7, — 显示当前焦点进度所需的最低情报值



CIVILIAN_MIN_INTEL_TO_SHOW_INDUSTRY_GRAPH = 0.30,

CIVILIAN_MIN_INTEL_TO_SHOW_INDUSTRY_GRAPH = 0.30,

CIVILIAN_MIN_INTEL_TO_SHOW_CONVOYS_GRAPH = 0.70,

CIVILIAN_MIN_INTEL_TO_SHOW_CONVOYS_GRAPH = 0.70,

CIVILIAN_MIN_INTEL_TO_SHOW_BOMBERS_GRAPH = 0.8,

CIVILIAN_MIN_INTEL_TO_SHOW_BOMBERS_GRAPH = 0.8,

CIVILIAN_MIN_INTEL_TO_SHOW_TRUCKS_GRAPH = 0.5,

平民显示卡车情报所需最低值 = 0.5,

CIVILIAN_MIN_INTEL_TO_SHOW_TRAINS_GRAPH = 0.5,

CIVILIAN_MIN_INTEL_TO_SHOW_TRAINS_GRAPH = 0.5,



CIVILIAN_MIN_INTEL_TO_SHOW_RAIL_STAUS = 0.4, — when mousing over supply map mode, shows damage/construction status

CIVILIAN_MIN_INTEL_TO_SHOW_RAIL_STAUS = 0.4, —— 当鼠标悬停在补给地图模式上时，显示损坏/建设状态



OLD_TECH_COUNT_NUM_DAYS = 180, — num days after researched to consider a tech as “old”

OLD_TECH_COUNT_NUM_DAYS = 180，— 技术研究完成后被视为“旧技术”的天数

INTEL_TO_SHOW_TECH_COUNT = { 0.5, 0.3, 0.3, 0.3 }, — minimum value to show current tech count and current doctrine

INTEL_TO_SHOW_TECH_COUNT = { 0.5, 0.3, 0.3, 0.3 }, — 显示当前科技数量和当前学说的最低值

INTEL_TO_SHOW_PREVIOUSLY_RESEARCHED = { 0.7, 0.7, 0.7, 0.7 }, — minimum value to show previously researched tech

INTEL_TO_SHOW_PREVIOUSLY_RESEARCHED = { 0.7, 0.7, 0.7, 0.7 }, — 显示已研究技术的最小值

INTEL_TO_SHOW_CURRENTLY_RESEARCHED = { 0.8, 0.8, 0.8, 0.8 }, — minimum value to show currently being researched tech

INTEL_TO_SHOW_CURRENTLY_RESEARCHED = { 0.8, 0.8, 0.8, 0.8 }, — 显示当前正在研究科技的最小值



INTEL_TO_SHOW_IDEAS = { 0.0, 0.0, 0.0, 0.0 },

INTEL_TO_SHOW_IDEAS = { 0.0, 0.0, 0.0, 0.0 },



ARMY_ARMY_COUNT_RANGE_INTEL_MIN = 0.05,

ARMY_ARMY_COUNT_RANGE_INTEL_MIN = 0.05,

ARMY_ARMY_COUNT_RANGE_INTEL_MAX = 0.7,

ARMY_ARMY_COUNT_RANGE_INTEL_MAX = 0.7,

ARMY_ARMY_COUNT_RANGE_INTEL_RANGE_AT_LOWEST_INTEL = 0.8,

ARMY_ARMY_COUNT_RANGE_INTEL_RANGE_AT_LOWEST_INTEL = 0.8,



ARMY_SPECIAL_FORCES_COUNT_RANGE_INTEL_RANGE_AT_LOWEST_INTEL = 0.7,

陆军特种部队在最低情报水平下的数量范围情报范围 = 0.7,



ARMY_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_MIN = 0.1,

ARMY_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_MIN = 0.1,

ARMY_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_MAX = 0.7,

ARMY_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_MAX = 0.7,

ARMY_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

陆军部署人力数量范围情报范围最低情报值 = 0.5,

ARMY_MIN_INTEL_TO_SHOW_EQUIPMENT_RATIO = 0.7,

ARMY_MIN_INTEL_TO_SHOW_EQUIPMENT_RATIO = 0.7,



ARMY_MIN_INTEL_TO_SHOW_BASIC_TEMPLATE_INFO = 0.3,

ARMY_MIN_INTEL_TO_SHOW_BASIC_TEMPLATE_INFO = 0.3,

ARMY_TEMPLATE_UNIT_COUNT_INTEL_MIN = 0.5,

ARMY_TEMPLATE_UNIT_COUNT_INTEL_MIN = 0.5,

ARMY_TEMPLATE_UNIT_COUNT_INTEL_MAX = 0.7,

ARMY_TEMPLATE_UNIT_COUNT_INTEL_MAX = 0.7,

ARMY_TEMPLATE_UNIT_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 1.0,

ARMY_TEMPLATE_UNIT_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 1.0,

ARMY_MIN_INTEL_TO_SHOW_EXACT_TEMPLATE_INFO = 0.8,

ARMY_MIN_INTEL_TO_SHOW_EXACT_TEMPLATE_INFO = 0.8,



ARMY_STOCKPILE_COUNT_INTEL_MIN = 0.3,

ARMY_STOCKPILE_COUNT_INTEL_MIN = 0.3,

ARMY_STOCKPILE_COUNT_INTEL_MAX = 0.7,

陆军库存情报最大值 = 0.7,

ARMY_STOCKPILE_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

ARMY_STOCKPILE_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,



ARMY_MIN_INTEL_TO_SHOW_EQUIPMENT_DESIGN_DETAILS = 0.8,

ARMY_MIN_INTEL_TO_SHOW_EQUIPMENT_DESIGN_DETAILS = 0.8,



ARMY_MIN_INTEL_RATIO_NEEDED_FOR_DISPLAYING_FAKE_ENEMY_INTEL_IN_LEDGER = 0.9,

ARMY_MIN_INTEL_RATIO_NEEDED_FOR_DISPLAYING_FAKE_ENEMY_INTEL_IN_LEDGER = 0.9

ARMY_MIN_INTEL_RATIO_NEEDED_FOR_REVEALING_FAKE_ENEMY_INTEL = 0.9,

ARMY_MIN_INTEL_RATIO_NEEDED_FOR_REVEALING_FAKE_ENEMY_INTEL = 0.9



ARMY_INTEL_COMBAT_BONUS_MAX_BONUS = 0.15, — max combat bonus that will apply when intel is high enough

ARMY_INTEL_COMBAT_BONUS_MAX_BONUS = 0.15, — 情报充足时可应用的最大战斗加成

ARMY_INTEL_COMBAT_BONUS_FACTOR_ATTACK = 1.0, — multiplier for attack value of intel combat bonus

ARMY_INTEL_COMBAT_BONUS_FACTOR_ATTACK = 1.0, — 情报战斗加成攻击值的乘数

ARMY_INTEL_COMBAT_BONUS_FACTOR_DEFENSE = 1.0, — multiplier for defense value of intel combat bonus

ARMY_INTEL_COMBAT_BONUS_FACTOR_DEFENSE = 1.0, —— 情报战斗加成防御值的乘数



ARMY_INTEL_COMBAT_BONUS_MIN_INTEL_FOR_BONUS = 5, — min intel needed to start applying ARMY_INTEL_COMBAT_BONUS_MAX_BONUS

ARMY_INTEL_COMBAT_BONUS_MIN_INTEL_FOR_BONUS = 5, — 开始应用ARMY_INTEL_COMBAT_BONUS_MAX_BONUS所需的最低情报值

ARMY_INTEL_COMBAT_BONUS_MAX_INTEL_FOR_BONUS = 50, — intel needed to fully apply ARMY_INTEL_COMBAT_BONUS_MAX_BONUS

ARMY_INTEL_COMBAT_BONUS_MAX_INTEL_FOR_BONUS = 50, —— 需要的情报点数以完全应用ARMY_INTEL_COMBAT_BONUS_MAX_BONUS



NAVAL_SUPREMACY_INTEL_LOW = 0.4,								— we need more intel than this to get any supremacy

NAVAL_SUPREMACY_INTEL_LOW = 0.4, — 需要比这更多的情报才能获得任何制海权

NAVAL_SUPREMACY_INTEL_LOW_SUPREMACY_PENALTY_START = 0.1,		— supremacy is reduced to NAVAL_SUPREMACY_INTEL_LOW_SUPREMACY_MIN_PENALTY at or below this intel

NAVAL_SUPREMACY_INTEL_LOW_SUPREMACY_PENALTY_START = 0.1, ——当情报值等于或低于此值时，制海权将降至NAVAL_SUPREMACY_INTEL_LOW_SUPREMACY_MIN_PENALTY

NAVAL_SUPREMACY_INTEL_LOW_SUPREMACY_MIN_PENALTY = 0.5, — you get this much supremacy at NAVAL_SUPREMACY_INTEL_LOW_SUPREMACY_PENALTY_START and scales up to 1 at NAVAL_SUPREMACY_INTEL_LOW

NAVAL_SUPREMACY_INTEL_LOW_SUPREMACY_MIN_PENALTY = 0.5, —— 当达到NAVAL_SUPREMACY_INTEL_LOW_SUPREMACY_PENALTY_START时获得此数值的制海权，并逐步递增至1，在NAVAL_SUPREMACY_INTEL_LOW处达到上限。



NAVY_FLEET_COUNT_INTEL_MIN = 0.1,

海军舰队情报计数下限 = 0.1,

NAVY_FLEET_COUNT_INTEL_MAX = 0.3,

海军舰队数量情报最大值 = 0.3,

NAVY_FLEET_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

海军舰队情报最低范围下的计数系数 = 0.5,



NAVY_TASKFORCE_COUNT_INTEL_MIN = 0.3,

海军特遣部队情报任务最小数量 = 0.3,

NAVY_TASKFORCE_COUNT_INTEL_MAX = 0.7,

海军特遣队情报数量上限 = 0.7,

NAVY_TASKFORCE_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

海军特遣部队最低情报范围的情报数量 = 0.5,



NAVY_SHIP_COUNT_INTEL_MIN = 0.1,

海军舰船数量情报最小值 = 0.1,

NAVY_SHIP_COUNT_INTEL_MAX = 0.8,

海军舰船数量情报最大值 = 0.8,

NAVY_SHIP_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

海军舰船数量情报范围在最低情报等级时为0.5,



NAVY_MIN_INTEL_TO_SHOW_EXISTING_CATEGORY_TYPES = 0.1, —this is about disaplying ships by class category

NAVY_MIN_INTEL_TO_SHOW_EXISTING_CATEGORY_TYPES = 0.1，——此参数用于按舰船类别分类显示

NAVY_SHIP_TYPE_COUNT_INTEL_MIN = 0.3,					—this range is used both when for disaplying counts by class and counts by variant

NAVY_SHIP_TYPE_COUNT_INTEL_MIN = 0.3, ——此范围既用于按类别显示计数，也用于按型号显示计数

NAVY_SHIP_TYPE_COUNT_INTEL_MAX = 0.7,

NAVY_SHIP_TYPE_COUNT_INTEL_MAX = 0.7,

NAVY_SHIP_TYPE_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

海军舰船类型情报数量最低情报范围 = 0.5,



NAVY_MIN_INTEL_TO_SHOW_SHIP_CLASSES = 0.5, —this unclocks the display of a given variant

NAVY_MIN_INTEL_TO_SHOW_SHIP_CLASSES = 0.5, ——此值用于解锁显示特定舰船变体

NAVY_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_MIN = 0.05,

海军部署人力计数范围情报最小值 = 0.05,

NAVY_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_MAX = 0.7,

海军部署人力计数范围情报最大值 = 0.7,

NAVY_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

海军部署人员数量情报范围最低情报值为0.5,



NAVY_MIN_INTEL_TO_SHOW_SHIP_DESIGN_DETAILS = 0.8,

海军最小情报显示舰船设计详情 = 0.8,



AIR_AIRWING_COUNT_INTEL_MIN = 0.0,

AIR_AIRWING_COUNT_INTEL_MIN = 0.0,

AIR_AIRWING_COUNT_INTEL_MAX = 0.7,

AIR_AIRWING_COUNT_INTEL_MAX = 0.7,

AIR_AIRWING_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

AIR_AIRWING_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,



AIR_MIN_INTEL_TO_SHOW_AIRWING_CLASSES = 0.3,

AIR_MIN_INTEL_TO_SHOW_AIRWING_CLASSES = 0.3,

AIR_WING_TYPE_COUNT_INTEL_MIN = 0.5,

AIR_WING_TYPE_COUNT_INTEL_MIN = 0.5,

AIR_WING_TYPE_COUNT_INTEL_MAX = 0.7,

AIR_WING_TYPE_COUNT_INTEL_MAX = 0.7,

AIR_WING_TYPE_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

AIR_WING_TYPE_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,



AIR_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_MIN = 0.1,

空投人力情报计数范围最小值 = 0.1,

AIR_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_MAX = 0.7,

空投人力情报最大范围 = 0.7,

AIR_DEPLOYED_MANPOWER_COUNT_RANGE_INTEL_RANGE_AT_LOWEST_INTEL = 0.5,

空中部署人力数量范围情报范围最低情报时 = 0.5,



RAID_MIN_INTEL_FOR_WARNING_ON_LAUNCH = 0.1, — how much intel (of the relevant type) is needed to show a warning when raid is launched

RAID_MIN_INTEL_FOR_WARNING_ON_LAUNCH = 0.1, —— 发动突袭时需要多少（相关类型的）情报才会显示警告

RAID_MIN_INTEL_FOR_WARNING_HALFWAY_TO_LAUNCH = 0.5, — how much intel (of the relevant type) is needed to show a warning halfway through preparation

RAID_MIN_INTEL_FOR_WARNING_HALFWAY_TO_LAUNCH = 0.5, —— 显示准备阶段中途警告所需的相关类型情报量

— (this limit is a dummy value only used for communicating the role of intel in the intel ledger )

—（此限制仅为虚拟值，用于说明情报在情报分类账中的作用）

— (in reality, detection scales linearly with intel. 70% intel = detection at 30% preparation, 50% intel = detection at 50% preparation, etc.

—（实际上，探测效率与情报呈线性关系。70%的情报意味着在30%的准备阶段被探测到，50%的情报对应50%的准备阶段被探测，以此类推。）

RAID_MIN_INTEL_FOR_WARNING_EARLY_PREPARATION = 0.8, — how much intel (of the relevant type) is needed to show a warning early in the preparation

RAID_MIN_INTEL_FOR_WARNING_EARLY_PREPARATION = 0.8，—— 需要多少相关类型的情报值才能在准备阶段早期显示警告

— (this limit is a dummy value only used for communicating the role of intel in the intel ledger )

—（此限制仅为虚拟值，用于说明情报在情报分类账中的作用）

— (in reality, detection scales linearly with intel. 70% intel = detection at 30% preparation, 50% intel = detection at 50% preparation, etc.

—（实际上，探测效率与情报呈线性关系。70%的情报意味着在30%的准备阶段被探测到，50%的情报对应50%的准备阶段被探测，以此类推。）



CIVILIAN_MAPICON_INDUSTRY_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = 0.7,

平民地图图标工业计数情报范围在最低情报等级时 = 0.7,



MAP_INTEL_VISIBILITY_CUTOFFS = { — how much map intel is gained with intel over a country. first number is threshold, second is amount of intel map intel gained

MAP_INTEL_VISIBILITY_CUTOFFS = { —— 决定国家情报值达到多少时解锁地图情报。第一个数字为阈值，第二个数字为获得的地图情报量

0.1, -50,

0.4, 0,

0.6, 50,





1.0, 100,


},



— these are used in some triggers

— 这些用于某些触发器

ARMY_AVG_ARMOR_INTEL_MIN = 0.0,

ARMY_AVG_ARMOR_INTEL_MIN = 0.0,

ARMY_AVG_ARMOR_INTEL_MAX = 0.5,

ARMY_AVG_ARMOR_INTEL_MAX = 0.5,

ARMY_AVG_ARMOR_RANGE_AT_LOWEST_INTEL = 1.0,

ARMY_AVG_ARMOR_RANGE_AT_LOWEST_INTEL = 1.0,



ARMY_MAX_ARMOR_INTEL_MIN = 0.0,

ARMY_MAX_ARMOR_INTEL_MIN = 0.0,

ARMY_MAX_ARMOR_INTEL_MAX = 0.5,

ARMY_MAX_ARMOR_INTEL_MAX = 0.5,

ARMY_MAX_ARMOR_RANGE_AT_LOWEST_INTEL = 1.0,

ARMY_MAX_ARMOR_RANGE_AT_LOWEST_INTEL = 1.0,



ARMY_AVG_PIERCING_INTEL_MIN = 0.0,

ARMY_AVG_PIERCING_INTEL_MIN = 0.0,

ARMY_AVG_PIERCING_INTEL_MAX = 0.5,

ARMY_AVG_PIERCING_INTEL_MAX = 0.5,

ARMY_AVG_PIERCING_RANGE_AT_LOWEST_INTEL = 1.0,

ARMY_AVG_PIERCING_RANGE_AT_LOWEST_INTEL = 1.0,



ARMY_MAX_PIERCING_INTEL_MIN = 0.0,

ARMY_MAX_PIERCING_INTEL_MIN = 0.0,

ARMY_MAX_PIERCING_INTEL_MAX = 0.5,

ARMY_MAX_PIERCING_INTEL_MAX = 0.5,

ARMY_MAX_PIERCING_RANGE_AT_LOWEST_INTEL = 1.0,

ARMY_MAX_PIERCING_RANGE_AT_LOWEST_INTEL = 1.0,

—~

NAVY_MAPICON_MISSION_COUNT_INTEL_MIN = 0.5, — min intel to show assigned naval missions

NAVY_MAPICON_MISSION_COUNT_INTEL_MIN = 0.5, — 显示已分配海军任务所需的最小情报值

NAVY_MAPICON_MISSION_COUNT_INTEL_MAX = 0.8, — min intel to show assigned naval missions with perfect accuracy, and taskforces count

NAVY_MAPICON_MISSION_COUNT_INTEL_MAX = 0.8, —— 显示指派海军任务及舰队数量的最小情报需求值，需达到完全精确



NAVY_MAPICON_SHOW_ALL_NAVAL_PORTS = 0.3, — min intel to show all naval ports (otherwise you will only see nearby ones)

NAVY_MAPICON_SHOW_ALL_NAVAL_PORTS = 0.3, — 显示所有海军港口所需的最低情报值（否则仅显示附近的港口）

NAVY_MAPICON_NAVAL_PORT_VISIBILITY_DETAIL_THRESHOLDS = { — how detailed the post tooltips will be

NAVY_MAPICON_NAVAL_PORT_VISIBILITY_DETAIL_THRESHOLDS = { — 港口工具提示将显示的详细程度

0.0,	— for no intel

0.0，——表示无情报

0.1,	— show port level

0.1，— 显示端口级别

0.3,	— show fuzzy taskforce count

0.3，——显示模糊任务组计数

0.7,	— show full taskforce count

0.7，——显示完整任务组计数





0.8,	— show taskforce details


0.8，——显示任务组详情


},

NAVY_MAPICON_NAVAL_PORT_TASKFORCE_FUZZY_THRESHOLD = 0.5,

NAVY_MAPICON_NAVAL_PORT_TASKFORCE_FUZZY_THRESHOLD = 0.5



AIR_MAPICON_MISSION_COUNT_INTEL_MIN = {

空中地图图标任务情报最小计数 = {

0.3, — AIR_SUPERIORITY

0.3，——空中优势

0.3, — CAS

0.3，— CAS

0.3, — INTERCEPTION

0.3，——拦截

0.3, — STRATEGIC_BOMBER

0.3，——战略轰炸机

0.3, — NAVAL_BOMBER

0.3，——海军轰炸机

0.3, — DROP_NUKE

0.3，——投放核弹

0.3, — PARADROP

0.3，——空降

0.3, — NAVAL_KAMIKAZE

0.3，— NAVAL_KAMIKAZE

0.3, — PORT_STRIKE

0.3，——港口罢工

0.3, — ATTACK_LOGISTICS

0.3，——攻击后勤

0.3, — AIR_SUPPLY

0.3，— 空气供应

0.3, — TRAINING

0.3，——训练

0.3, — NAVAL_MINES_PLANTING

0.3，— 海军水雷布设

0.3, — NAVAL_MINES_SWEEPING

0.3，——扫雷行动

0.3, — RECON

0.3，——侦察





0.3, — NAVAL_PATROL


0.3，—海军巡逻


},

AIR_MAPICON_MISSION_COUNT_INTEL_MAX = {

空中地图图标任务情报计数最大值 = {

0.6, — AIR_SUPERIORITY

0.6，——空中优势

0.6, — CAS

0.6，— CAS

0.6, — INTERCEPTION

0.6，——拦截

0.6, — STRATEGIC_BOMBER

0.6，——战略轰炸机

0.6, — NAVAL_BOMBER

0.6，— 海军轰炸机

0.6, — DROP_NUKE

0.6，——投放核弹

0.6, — PARADROP

0.6，——空投

0.6, — NAVAL_KAMIKAZE

0.6，—NAVAL_KAMIKAZE

0.6, — PORT_STRIKE

0.6，— 港口打击

0.6, — ATTACK_LOGISTICS

0.6，——攻击后勤

0.6, — AIR_SUPPLY

0.6，——空气供应

0.6, — TRAINING

0.6，——训练

0.6, — NAVAL_MINES_PLANTING

0.6，— 海军_布雷作业

0.6, — NAVAL_MINES_SWEEPING

0.6，— 扫雷行动

0.6, — RECON

0.6，——侦察





0.6, — NAVAL_PATROL


0.6，— 海军巡逻


},

AIR_MAPICON_MISSION_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = {

AIR_MAPICON_MISSION_COUNT_INTEL_RANGE_AT_LOWEST_INTEL = {最低情报级别下的空中地图图标任务数量情报范围 = {

0.5, — AIR_SUPERIORITY

0.5，——空中优势

0.5, — CAS

0.5，— CAS

0.5, — INTERCEPTION

0.5，—拦截

0.5, — STRATEGIC_BOMBER

0.5，—战略轰炸机

0.5, — NAVAL_BOMBER

0.5，—海军轰炸机

0.5, — DROP_NUKE

0.5，— 投放核弹

0.5, — PARADROP

0.5，— 空投

0.5, — NAVAL_KAMIKAZE

0.5，— NAVAL_KAMIKAZE

0.5, — PORT_STRIKE

0.5，—港口罢工

0.5, — ATTACK_LOGISTICS

0.5，——攻击后勤

0.5, — AIR_SUPPLY

0.5，— 空气供应

0.5, — TRAINING

0.5，——训练

0.5, — NAVAL_MINES_PLANTING

0.5，——海军水雷布设

0.5, — NAVAL_MINES_SWEEPING

0.5，—— 扫雷行动

0.5, — RECON

0.5，—侦察





0.5, — NAVAL_PATROL


0.5，—海军巡逻


},



AIR_MAPICON_SHOW_ALL_AIR_PORTS = 0.3, — min intel to show all air ports (otherwise you will only see nearby ones)

AIR_MAPICON_SHOW_ALL_AIR_PORTS = 0.3, — 显示所有机场所需的最低情报值（否则仅显示附近机场）

AIR_MAPICON_AIR_PORT_VISIBILITY_DETAIL_THRESHOLDS = { — how detailed the post tooltips will be

AIR_MAPICON_AIR_PORT_VISIBILITY_DETAIL_THRESHOLDS = { — 机场图标提示信息的详细程度阈值

0.0,	— for no intel

0.0，——表示无情报

0.3,	— show fuzzy air plane count

0.3，——显示模糊飞机数量

0.7,	— show full air count

0.7，——显示完整空气计数





0.8,	— show air plane details


0.8，— 显示飞机详情


},

AIR_MAPICON_AIR_PORT_PLANE_FUZZY_THRESHOLD = 0.5,

AIR_MAPICON_AIR_PORT_PLANE_FUZZY_THRESHOLD = 0.5

AIR_MIN_INTEL_TO_SHOW_EQUIPMENT_DESIGN_DETAILS = 0.8,

AIR_MIN_INTEL_TO_SHOW_EQUIPMENT_DESIGN_DETAILS = 0.8,



— ~intel ledger defines

英特尔账本定义

},



NCharacter = {

N角色 = {

OFFICER_CORP_ADVISOR_ENTRIES_IN_MENU = { “high_command”, “theorist”, “army_chief”, “air_chief”, “navy_chief” },

OFFICER_CORP_ADVISOR_ENTRIES_IN_MENU = { "高级指挥部", "理论家", "陆军司令", "空军司令", "海军司令" },

OFFICER_CORP_HIGH_COMMAND_SLOTS_IN_MENU = 3, —For Alert manager to count the number of High Command Slots in the UI

OFFICER_CORP_HIGH_COMMAND_SLOTS_IN_MENU = 3, ——供警报管理器统计用户界面中的高级指挥部槽位数量

POLITICAL_ADVISOR_SLOTS_IN_MENU = 3, —For Alert manager to count the number of Political Advisor Slots in the UI

POLITICAL_ADVISOR_SLOTS_IN_MENU = 3, ——供警报管理器统计用户界面中政治顾问槽位的数量



DEFAULT_PP_COST_FOR_MILITARY_ADVISOR = 50,	— When an advisor does not have cost assigned this is the default used

DEFAULT_PP_COST_FOR_MILITARY_ADVISOR = 50, —— 当顾问未被分配成本时，默认使用此数值

DEFAULT_PP_COST_FOR_POLITICAL_ADVISOR = 150,

DEFAULT_PP_COST_FOR_POLITICAL_ADVISOR = 150,

DEFAULT_CP_COST_FOR_ADVISOR = 0,	— For Starting Advisors

DEFAULT_CP_COST_FOR_ADVISOR = 0, ——初始顾问的默认CP成本

DEFAULT_CP_COST_FOR_DYNAMIC_ADVISORS = 0,	— For Advisors created during gameplay

DEFAULT_CP_COST_FOR_DYNAMIC_ADVISORS = 0, — 用于游戏过程中创建的顾问

ADVISOR_PROMOTION_COST = 5,	— Cost to promote someone to advisor

ADVISOR_PROMOTION_COST = 5, —— 将某人提升为顾问的费用



COUNTRY_LEADER_BASE_EXPIRE_YEAR_LENGTH = 5, — When creating a dynamic country leader if an expire date is not set it will have 5 years as a base expiration date

COUNTRY_LEADER_BASE_EXPIRE_YEAR_LENGTH = 5, — 当创建动态国家领导人时，若未设置到期日期，将默认以5年作为基础任期期限

COUNTRY_LEADER_BASE_RANDOM_MAX_YEAR_LENGTH = 15, — Max random value added to COUNTRY_LEADER_BASE_EXPIRE_YEAR_LENGTH

COUNTRY_LEADER_BASE_RANDOM_MAX_YEAR_LENGTH = 15, — 添加到COUNTRY_LEADER_BASE_EXPIRE_YEAR_LENGTH的最大随机值



SPECIALIST_ADVISOR_MIN_RANK = 4,

SPECIALIST_ADVISOR_MIN_RANK = 4,

EXPERT_ADVISOR_MIN_RANK = 6,

EXPERT_ADVISOR_MIN_RANK = 6,

GENIUS_ADVISOR_MIN_RANK = 8,

GENIUS_ADVISOR_MIN_RANK = 8,

},



NSupply = {

供应量 = {

MAX_RAILWAY_LEVEL = 5, — update railway texture as well, each frame corresponds to a level

MAX_RAILWAY_LEVEL = 5, —— 同时更新铁路贴图，每一帧对应一个等级



—defines to calculate the capitals supply. This will be also used for max supply of other nodes depending on how well they are connected to capital. Using the formula:

—用于计算首都的供应量。该公式也将根据其他节点与首都的连接程度，决定它们的最大供应量。计算公式如下：

—CapitalSupply = CAPITAL_SUPPLY_BASE + (NumberOfCivilianFactories CAPITAL_SUPPLY_CIVILIAN_FACTORIES) + (NumberOfMilitaryFactories CAPITAL_SUPPLY_MILITARY_FACTORIES) + (NumberOfDockyards * CAPITAL_SUPPLY_DOCKYARDS)

—资本供应量 = 资本供应基础值 + (民用工厂数量 × 民用工厂资本供应系数) + (军用工厂数量 × 军用工厂资本供应系数) + (造船厂数量 × 造船厂资本供应系数)

CAPITAL_SUPPLY_BASE = 5.0, — base supply for capital

资本供应基础值 = 5.0，——资本的基础供应量

CAPITAL_SUPPLY_CIVILIAN_FACTORIES = 0.3, — supply from one civilian factory

CAPITAL_SUPPLY_CIVILIAN_FACTORIES = 0.3, —— 每座民用工厂提供的补给

CAPITAL_SUPPLY_MILITARY_FACTORIES = 0.6, — supply from one military factory

CAPITAL_SUPPLY_MILITARY_FACTORIES = 0.6, —— 每个军事工厂提供的补给

CAPITAL_SUPPLY_DOCKYARDS = 0.4, —supply from one naval factory

CAPITAL_SUPPLY_DOCKYARDS = 0.4, —每座海军工厂提供的补给



— defines that are used for supply reach for capital

— 用于资本供应覆盖范围的定义

— supply flow will start from INITIAL_SUPPLY_FLOW and will be reduced by a penalty on each province it travels (which depends on how far we are from our origin, terrain etc)

— 补给流将从初始补给流（INITIAL_SUPPLY_FLOW）出发，每经过一个省份将根据与源头的距离、地形等因素扣除相应的损耗值

— a supply reach >= 1.0 considered “perfect” and will be able to fully support units on that particular province (assuming you are not over capacity)

— 补给范围 >= 1.0 被视为“完美”，将能够完全支持该特定省份上的单位（假设未超出容量上限）

CAPITAL_INITIAL_SUPPLY_FLOW = 5.0, — starting supply from

CAPITAL_INITIAL_SUPPLY_FLOW = 5.0, —— 起始供应量为

CAPITAL_STARTING_PENALTY_PER_PROVINCE = 0.5, — starting penalty that will be added as supply moves away from its origin (modified by stuff like terrain)

CAPITAL_STARTING_PENALTY_PER_PROVINCE = 0.5, —— 初始惩罚值，将随着补给远离其来源地而累加（受地形等因素影响）

CAPITAL_ADDED_PENALTY_PER_PROVINCE = 1.2, — added penalty as we move away from origin

CAPITAL_ADDED_PENALTY_PER_PROVINCE = 1.2, — 随着与起始地的距离增加而添加的惩罚



— defines that are used for supply reach for built nodes

— 定义用于供应已构建节点的覆盖范围

NODE_INITIAL_SUPPLY_FLOW = 2.8,

NODE_INITIAL_SUPPLY_FLOW = 2.8,

NODE_STARTING_PENALTY_PER_PROVINCE = 0.50,

NODE_STARTING_PENALTY_PER_PROVINCE = 0.50,

NODE_ADDED_PENALTY_PER_PROVINCE = 0.70,

每省份节点添加惩罚值 = 0.70,



— defines that are used for supply reach for dockyards

— 定义了用于船坞供应范围的标准

NAVAL_BASE_INITIAL_SUPPLY_FLOW = 3.3,

海军基地初始补给流量 = 3.3,

NAVAL_BASE_STARTING_PENALTY_PER_PROVINCE = 0.84,

海军基地初始每省份惩罚值 = 0.84,

NAVAL_BASE_ADDED_PENALTY_PER_PROVINCE = 1.1,

海军基地每省份额外惩罚值 = 1.1,



— Node Flow (i.e. province caps) increase by this amount per railway level of the node’s bottleneck

——节点流量（即省份上限）按该节点瓶颈的铁路等级每级增加相应数值

NODE_FLOW_BONUS_PER_RAIL_LEVEL = 0.34,

NODE_FLOW_BONUS_PER_RAIL_LEVEL = 0.34,



— rivers will transfer in between nodes as if they were this level

— 河流将在节点间流动，仿佛它们处于同一水平面上

RIVER_RAILWAY_LEVEL = 1,

河流铁路等级 = 1,



— defines that are used for supply reach for floating harbors

— 为浮动港口供应覆盖范围所定义的标准

FLOATING_HARBOR_INITIAL_SUPPLY_FLOW = 2.6,

FLOATING_HARBOR_INITIAL_SUPPLY_FLOW = 2.6,

FLOATING_HARBOR_STARTING_PENALTY_PER_PROVINCE = 0.8,

FLOATING_HARBOR_STARTING_PENALTY_PER_PROVINCE = 0.8,

FLOATING_HARBOR_ADDED_PENALTY_PER_PROVINCE = 0.8,

浮动港口每省份额外惩罚 = 0.8,



FLOATING_HARBOR_BASE_SUPPLY = 15.0, — supply given by a floating harbor

FLOATING_HARBOR_BASE_SUPPLY = 15.0, —— 浮动港口提供的基础补给量

FLOATING_HARBOR_BASE_DURATION = 21, — duration of a full hp floating harbor

FLOATING_HARBOR_BASE_DURATION = 21, — 满血浮动港口的持续时间

FLOATING_HARBOR_DURATION_RATIO_AT_MIN_HP = 0.0, — duration mult for a harbor that was reduced to 0 hp

FLOATING_HARBOR_DURATION_RATIO_AT_MIN_HP = 0.0, — 生命值降至0时的浮动港口持续时间倍率



FLOATING_HARBOR_MIN_DECAY = 0.2, — Always reduce Floating Harbor longevity by this many “hours” per hour

FLOATING_HARBOR_MIN_DECAY = 0.2, — 每小时"浮动港口"的持续时间至少减少这么多"小时"

FLOATING_HARBOR_DECAY_MAX_AIR_BONUS = -0.1, — At 100% Friendly Air superiourity, change decay rate by this many “hours” per hour

FLOATING_HARBOR_DECAY_MAX_AIR_BONUS = -0.1, — 当友方空中优势达到100%时，每小时衰减率变化为此“小时”数值

FLOATING_HARBOR_DECAY_MAX_AIR_PENALTY = 0.4, — At 100% Enemy Air superiourity, change decay rate by this many “hours” per hour

FLOATING_HARBOR_DECAY_MAX_AIR_PENALTY = 0.4, —— 当敌方空中优势达100%时，每小时衰减速率的调整值为“小时”数

FLOATING_HARBOR_DECAY_MAX_NAVAL_BONUS = -0.2, — At 100% Friendly naval superiourity, change decay rate by this many “hours” per hour

FLOATING_HARBOR_DECAY_MAX_NAVAL_BONUS = -0.2， — 当友方海军优势达到100%时，每小时衰减率变化为此数值（单位：“小时”）

FLOATING_HARBOR_DECAY_MAX_NAVAL_PENALTY = 0.5, — At 100% Enemy Naval superiourity, change decay rate by this many “hours” per hour

FLOATING_HARBOR_DECAY_MAX_NAVAL_PENALTY = 0.5, —— 在敌方100%海军优势的情况下，每小时按此“小时”数改变衰减速率

FLOATING_HARBOR_DECAY_NO_CONTROL_PENALTY = 1.0, — If adjacent land province is not held, change decay rate by this many “hours” per hour

FLOATING_HARBOR_DECAY_NO_CONTROL_PENALTY = 1.0, — 若相邻陆地省份未被占领，每小时衰减速率将增加此数值的“小时”量



SUPPLY_FLOW_DROP_REDUCTION_AT_MAX_INFRA = 0.30, — max infrastructure level will reduce the supply flow drop off by this ratio

SUPPLY_FLOW_DROP_REDUCTION_AT_MAX_INFRA = 0.30, —— 最高基础设施等级将按此比例减少补给流量下降

SUPPLY_FLOW_PENALTY_CROSSING_RIVERS = 0.20, — crossing rivers introduces additional penalty

SUPPLY_FLOW_PENALTY_CROSSING_RIVERS = 0.20, —— 跨越河流会引入额外惩罚



— node flow terrain falloff is scaled by logistics curve based on distance(d) (scalar / (1+e^(-k(d-midpoint))))

节点流地形衰减通过基于距离(d)的逻辑曲线进行缩放（标量 / (1+e^(-k(d-中点))))）

SUPPLY_FLOW_DIST_LOGISTICS_FALLOFF_K = 1.3, — How steep the curve is

SUPPLY_FLOW_DIST_LOGISTICS_FALLOFF_K = 1.3, — 曲线陡峭程度

SUPPLY_FLOW_DIST_LOGISTICS_FALLOFF_MIDPOINT = 2.3, — sigmoid inflection point

SUPPLY_FLOW_DIST_LOGISTICS_FALLOFF_MIDPOINT = 2.3, — 逻辑函数拐点

SUPPLY_FLOW_DIST_LOGISTICS_FALLOFF_SCALAR = 0.9, — Max Penalty adjustment due to distance

SUPPLY_FLOW_DIST_LOGISTICS_FALLOFF_SCALAR = 0.9, — 基于距离的最大惩罚调整系数

SUPPLY_FLOW_DIST_LOGISTICS_FALLOFF_MIN_PENALTY_SCALE = 0.25, — Logistics curve never reduces penalty facor below this limit

SUPPLY_FLOW_DIST_LOGISTICS_FALLOFF_MIN_PENALTY_SCALE = 0.25, —— 物流曲线永远不会将惩罚系数降低至此限值以下



— The range bonus added to a fully motorized hub. This supply is added on top of the XXX_INITIAL_SUPPLY_FLOW defined above.

——为完全机动化的枢纽添加的范围加成。此补给量是在上述定义的XXX_INITIAL_SUPPLY_FLOW基础上额外增加的。

SUPPLY_HUB_FULL_MOTORIZATION_BONUS = 2.2,

SUPPLY_HUB_FULL_MOTORIZATION_BONUS = 2.2,

— How many trucks does it cost to fully motorize a hub

— 完全机动化一个枢纽需要耗费多少辆卡车

SUPPLY_HUB_FULL_MOTORIZATION_TRUCK_COST = 60.0,

SUPPLY_HUB_FULL_MOTORIZATION_TRUCK_COST = 60.0,

— For each additional level of motorization on a hub (i.e. contry with set motoriazation) reduce max bonus for next level by this amount

— 每增加一个枢纽的机动化等级（即在已设定机动化的国家中），下一等级的最大奖励将按此数值递减

SUPPLY_HUB_MOTORIZATION_MARGINAL_EFFECT_DECAY = 1.6,

SUPPLY_HUB_MOTORIZATION_MARGINAL_EFFECT_DECAY = 1.6,



— used for calculating “flow” for railways.

——用于计算铁路的“流量”。

RAILWAY_BASE_FLOW = 10.0, 		— how much base flow railway gives when a node connected to its capital/a naval node by a railway

铁路基础流量 = 10.0, ——当节点通过铁路连接至其首都或海军节点时，铁路提供的基础流量值

RAILWAY_FLOW_PER_LEVEL = 5.0, 	— how much additional flow a railway level gives

RAILWAY_FLOW_PER_LEVEL = 5.0, —— 每级铁路提供的额外流量

RAILWAY_FLOW_PENALTY_PER_DAMAGED = 5.0, — penalty to flow per damaged railway

RAILWAY_FLOW_PENALTY_PER_DAMAGED = 5.0, —— 每段受损铁路对运输流量的惩罚值

RAILWAY_MIN_FLOW = 5.0, 		— minimum railway flow can be reduced to

RAILWAY_MIN_FLOW = 5.0, —— 铁路流量可降低到的最小值



— used for calculating “flow” from a naval node to another naval node when it is connected via a convoy route

—用于计算从一个海军节点到另一个海军节点的“流量”，当两者通过护航路线连接时

— NAVAL_BASE_MAX_SUPPLY_FLOW_FACTOR = 0.9, — flow of the parent node is factored to this ratio (so at most it can transfer parent naval node flow * this define)

— 海军基地最大补给流通系数 = 0.9, — 父节点的流通量按此比例折算（因此最多可传递父海军节点流通量 * 此定义值）

NAVAL_BASE_FLOW = 5.0, — max output/input of a naval node is limited by this base value + additional ratio for each level

海军基地流量 = 5.0, —— 海军节点的最大输出/输入受此基础值及每级额外比率限制

NAVAL_FLOW_PER_LEVEL = 3.0, — max output/input of a naval node is limited by previous base value + this define per its level

NAVAL_FLOW_PER_LEVEL = 3.0, —— 海军节点的最大输出/输入受限于其等级对应的基础值加上此定义值



SUPPLY_NODE_MIN_SUPPLY_THRESHOLD = 1.0, — if supply of a node is below this value it will be set to 0 — Currently unused? This should happen when enough damage occurs

SUPPLY_NODE_MIN_SUPPLY_THRESHOLD = 1.0, —— 若节点的补给低于此值，将被设为0 —— 当前未使用？应在遭受足够伤害时触发



INFRA_TO_SUPPLY = 0.3,							— each level of infra gives this many supply

INFRA_TO_SUPPLY = 0.3, — 每级基础设施提供这么多的补给

VP_TO_SUPPLY_BASE = 0.2,							— Bonus to supply from a VP, no matter the level

VP_TO_SUPPLY_BASE = 0.2, — 每点胜利分数对补给的基础加成，不受等级影响

VP_TO_SUPPLY_BONUS_CONVERSION = 0.05,			— Bonus to supply local supplies from Victory Points, multiplied by this aspect and rounded to closest integer

VP_TO_SUPPLY_BONUS_CONVERSION = 0.05, ——胜利点数对本地补给的加成，乘以该系数后四舍五入取整

SUPPLY_FROM_DAMAGED_INFRA = 0.15, — damaged infrastructure counts as this in supply calcs

SUPPLY_FROM_DAMAGED_INFRA = 0.15, —— 受损基础设施在补给计算中按此值计算

SUPPLY_BASE_MULT = 0.2,							— multiplier on supply base values

SUPPLY_BASE_MULT = 0.2, — 供应基础值的乘数

SUPPLY_DISRUPTION_DAILY_RECOVERY = 1.5,		— every day nodes recover this much of their accumulated disruption.

SUPPLY_DISRUPTION_DAILY_RECOVERY = 1.5, — 每天节点恢复其累积中断的这么多。



RAILWAY_CONVERSION_COOLDOWN = 10, — railways will be put on cooldown when they are captured by enemy and will not be usable during the cooldown

RAILWAY_CONVERSION_COOLDOWN = 10, — 铁路被敌方占领后将进入冷却状态，冷却期间无法使用

RAILWAY_CONVERSION_COOLDOWN_CORE = 5,

铁路转换冷却核心 = 5,

RAILWAY_CONVERSION_COOLDOWN_CIVILWAR = 0,

RAILWAY_CONVERSION_COOLDOWN_CIVILWAR = 0,



DEFAULT_STARTING_TRUCK_RATIO = 1.5, — countries get this ratio of starting truck in their buffers compared to their need

DEFAULT_STARTING_TRUCK_RATIO = 1.5， —— 各国初始卡车数量与其需求的比例将保持此比值

DEFAULT_STARTING_TRAIN_RATIO = 1, — countries get this ratio of starting trains in their buffers compared to their need

DEFAULT_STARTING_TRAIN_RATIO = 1, —— 国家在其缓冲区获得的初始列车数量与其需求的比例为此值



SUPPLY_POINTS_PER_TRAIN = 1.0, — old default 1.25 — Amount of supply that can fit in a train. (Trains distribute supply from capital to a supply node.)

SUPPLY_POINTS_PER_TRAIN = 1.0, — 旧默认值 1.25 — 每列火车可装载的补给量。（火车将补给从首都运送到补给节点。）

NUM_RAILWAYS_TRAIN_FACTOR = 0.03, — the train usage is scaled by railway distance between the supply node and the capital multiplied by this factor

NUM_RAILWAYS_TRAIN_FACTOR = 0.03, ——火车使用量按供应节点与首都之间的铁路距离乘以该系数进行缩放



BASE_SUPPLY_MULT_FOR_TRUCK_DEFAULT_BUFFER = 1.0, — initial value for wanted buffers over potential truck usage

BASE_SUPPLY_MULT_FOR_TRUCK_DEFAULT_BUFFER = 1.0, —— 卡车潜在使用量所需缓冲区的初始值

BASE_SUPPLY_MULT_FOR_TRUCK_MIN_BUFFER = 0.0, — min and max values for buffer ratio

BASE_SUPPLY_MULT_FOR_TRUCK_MIN_BUFFER = 0.0, —— 卡车最小缓冲比的最小与最大值

BASE_SUPPLY_MULT_FOR_TRUCK_MAX_BUFFER = 100.0,

BASE_SUPPLY_MULT_FOR_TRUCK_MAX_BUFFER = 100.0,



TRUCK_ATTRITION = 0.003, — base truck attrition

卡车损耗率 = 0.003, ——基础卡车损耗

TRUCK_ATTRITION_FACTOR = 0.65, —a scale on total truck attrition

TRUCK_ATTRITION_FACTOR = 0.65, ——用于衡量卡车总损耗的比例系数



BASE_TRUCK_HP = 100.0,

基本卡车生命值 = 100.0,

TRUCK_HP_PER_ARMOR = 2,

卡车每点装甲值对应生命值 = 2,



BASE_TRAIN_HP = 100.0,

BASE_TRAIN_HP = 100.0,

TRAIN_ARMOR_TARGETING_WEIGHT = 0.01, — For each health point gained by armor_value, enemy bombers are this much more likely to target

TRAIN_ARMOR_TARGETING_WEIGHT = 0.01, —— 装甲值每提升一点生命值，敌方轰炸机瞄准该目标的概率相应增加此数值

TRAIN_ANTI_AIR_HIT_CHANCE = 0.07, — Balancing value to determine the chance of train anti-air hitting an attacking airwing.

TRAIN_ANTI_AIR_HIT_CHANCE = 0.07, —— 用于平衡列车防空武器击中攻击机群的几率的数值。

TRAIN_ANTI_AIR_HIT_ROLL_COUNT = 12, — The air_attack of all attacked trains are accumulated, and then we do this many random rolls each with the hit chance set above to determine the fraction of the accumulated air_attack that hits.

TRAIN_ANTI_AIR_HIT_ROLL_COUNT = 12, —— 所有受攻击列车的防空值将被累加，随后进行指定次数的随机掷骰（每次命中概率由上文设定），以此确定累计防空值中实际命中的比例。

TRAIN_ANTI_AIR_ATTACK_TO_AMOUNT = 0.001, — Balancing value to convert the hitting air_attack to a percentage value of the attacking planes that are killed.

TRAIN_ANTI_AIR_ATTACK_TO_AMOUNT = 0.001, —— 平衡值，用于将对空攻击命中转化为被击落攻击机数量的百分比值。



MIN_TRAIN_SUPPLY_FACTOR = 0.5, — Having 0 trains in stockpile only applies this penalty factor, scaling up to 1.0 when need is met

MIN_TRAIN_SUPPLY_FACTOR = 0.5, — 当库存中列车数为零时仅施加此惩罚系数，随着需求满足度提升，该系数逐步增大至1.0

MIN_TRAIN_REQUIREMENT = 2, — If total train need <= this, then don’t apply any supply penalty, even if stockpile is insufficient

MIN_TRAIN_REQUIREMENT = 2，——若总训练需求<=此值，即使库存不足也不施加任何补给惩罚



SUPPLY_FLOW_REDUCTION_THRESHOLD = 0.1, — if supply flow is lower than this, it is not applied

SUPPLY_FLOW_REDUCTION_THRESHOLD = 0.1，——当供应流量低于此值时，将不予应用



— following values are used for calculating potential truck usage

—— 以下数值用于计算潜在卡车使用率

— generally potential is ~= current usage but as units moves along the map

— 通常情况下，潜力值约等于当前使用量，但随着单位在地图上的移动而变化

— they are assigned to different nodes which adds slightly higher usage due to minimum truck needed being 1

它们被分配到不同的节点，这会因最低卡车需求量为1而略微增加使用量。

BASE_AIR_SUPPLY_MULT_FOR_TRUCK_BUFFER = 1.0,

BASE_AIR_SUPPLY_MULT_FOR_TRUCK_BUFFER = 1.0,

BASE_ARMY_SUPPLY_MULT_FOR_TRUCK_BUFFER = 1.0,

BASE_ARMY_SUPPLY_MULT_FOR_TRUCK_BUFFER = 1.0,

BASE_NAVY_SUPPLY_MULT_FOR_TRUCK_BUFFER = 1.0,

BASE_NAVY_SUPPLY_MULT_FOR_TRUCK_BUFFER = 1.0,



CAPITAL_NODE_BASE_SUPPLY_ADD = 0,

CAPITAL_NODE_BASE_SUPPLY_ADD = 0,

BUILT_NODE_BASE_SUPPLY_ADD = 0.6,

BUILT_NODE_BASE_SUPPLY_ADD = 0.6,

LOCAL_NODE_BASE_SUPPLY_ADD = 0.5,

LOCAL_NODE_BASE_SUPPLY_ADD = 0.5,

NAVAL_NODE_BASE_SUPPLY_ADD = 0.3,

NAVAL_NODE_BASE_SUPPLY_ADD = 0.3,

— ~end

— ~结束



— armies slowly gains and buffers supply above >100% up to their supply grace if they have efficent supply flow

— 军队若拥有高效的补给流，将缓慢获得并积累补给，使其超过100%直至达到补给宽限值

— otherwuse they will lose up to 100% supply every day depending on how bad supply flow is

——否则，他们每天可能会损失高达100%的供应量，具体损失程度取决于供应流的糟糕程度。

ARMY_SUPPLY_RATIO_STARTING_GAIN = 0.0,

陆军补给比例初始增益 = 0.0,

ARMY_SUPPLY_RATIO_SPEED_GAIN_PER_HOUR = 0.01,

陆军补给比例每小时速度增益 = 0.01,

ARMY_MAX_SUPPLY_RATIO_GAIN_PER_HOUR = 0.15,

军队最大补给比率每小时增益 = 0.15,



MIN_SURRENDER_LIMIT_TO_MOVE_SUPPLY_CAPITAL = 0.15, — country needs to be above thos surrender ratio to be able to move its capital

MIN_SURRENDER_LIMIT_TO_MOVE_SUPPLY_CAPITAL = 0.15, — 国家需高于此投降比率才能迁移其首都

COOLDOWN_DAYS_AFTER_MOVING_SUPPLY_CAPITAL = 30, — cooldown for moving supply again after last move

COOLDOWN_DAYS_AFTER_MOVING_SUPPLY_CAPITAL = 30, — 上次迁移供应中心后再次迁移的冷却时间

DAYS_TO_START_GIVING_SUPPLY_AFTER_MOVING_SUPPLY_CAPITAL = 7, — the country will start gaining supply after this many days moving its capital

DAYS_TO_START_GIVING_SUPPLY_AFTER_MOVING_SUPPLY_CAPITAL = 7, —— 国家将在迁移首都后经过这么多天开始获得补给

DAYS_TO_START_GIVING_FULL_SUPPLY_AFTER_MOVING_SUPPLY_CAPITAL = 21, — the country will reach max supply after this many days moving its capital

DAYS_TO_START_GIVING_FULL_SUPPLY_AFTER_MOVING_SUPPLY_CAPITAL = 21, — 国家迁移补给首都后，经过这么多天将达到最大补给量



MIN_DIFF_FOR_AUTO_UPDATING_EXISTING_RAILWAYS = 5, — while building railways, the system will prefer updating existing railway if new railway is close enough to existing one

MIN_DIFF_FOR_AUTO_UPDATING_EXISTING_RAILWAYS = 5, —— 在建设铁路时，如果新铁路与现有铁路足够接近，系统将优先更新现有铁路



— reinforcements depends on distance to capital and following defines are used for calculating reinforcement time

— 增援时间取决于与首都的距离，以下定义用于计算增援时间

SUPPLY_PATH_MAX_DISTANCE = 15,	— max time it can take

SUPPLY_PATH_MAX_DISTANCE = 15, — 最大耗时

RAILWAY_DISTANCE_FACTOR_FOR_REINFORCEMENT_SPEED = 0.3, — time factor for total railway distance

RAILWAY_DISTANCE_FOR_REINFORCEMENT_SPEED = 0.3, — 铁路总距离的时间因子

TRUCK_DISTANCE_FACTOR_FOR_REINFORCEMENT_SPEED = 0.01, — time factor for total truck distance

卡车距离对增援速度的影响系数 = 0.01, —— 卡车总距离的时间系数

NAVAL_DISTANCE_FACTOR_FOR_REINFORCEMENT_SPEED = 0.08, — time factor for total naval distance

NAVAL_DISTANCE_FACTOR_FOR_REINFORCEMENT_SPEED = 0.08, —— 海军总距离的时间因子



ALERT_VERY_LOW_SUPPLY_LEVEL = 0.2,			 — At which point we show up the low and very low supply level alert. Value is in % of supplies supported vs required.

ALERT_VERY_LOW_SUPPLY_LEVEL = 0.2, —— 当支持供应量与需求量的比例达到此百分比时，将显示供应量极低警报。

ALERT_LOW_SUPPLY_LEVEL = 0.5,

警报_低供应水平 = 0.5,



AI_FRONT_MINIMUM_UNITS_PER_PROVINCE_FOR_SUPPLY_CALCULATIONS = 1, — AI will try to keep this amount of divisions per province as a minimum when evaluating supply limitations for war fronts

AI_FRONT_MINIMUM_UNITS_PER_PROVINCE_FOR_SUPPLY_CALCULATIONS = 1, — 在进行战争前线补给限制评估时，AI会尝试将每个省份的部队数量至少维持在这个数值

AI_FRONT_DIVISIONS_PER_SUPPLY_POINT = 1.0, — How many divisions should the AI consider it can supply per available supply point

AI_FRONT_DIVISIONS_PER_SUPPLY_POINT = 1.0, —— AI认为每个可用补给点可以供应多少部队

AI_FRONT_MAX_UNITS_ENEMY_COUNT_FACTOR = 1.2, — Make sure AI front MaxNrUnits is at least EnemyCount multiplied by this factor

AI_FRONT_MAX_UNITS_ENEMY_COUNT_FACTOR = 1.2, ——确保AI前线最大单位数至少为敌方数量乘以该系数

SUPPLY_THRESHOLD_FOR_ARMY_ATTRITION = 0.35, — armies will only get attrition below this supply

SUPPLY_THRESHOLD_FOR_ARMY_ATTRITION = 0.35, — 军队补给低于此阈值时才会产生损耗

NUMBER_OF_SHOWN_SUPPLY_SOURCES_IN_SUPPLY_MAPMODE = 3, — number of supply flow sources shown in breakdown tooltip

NUMBER_OF_SHOWN_SUPPLY_SOURCES_IN_SUPPLY_MAPMODE = 3, — 供给模式分解工具提示中显示的供给来源数量

ESTIMATED_DIVISION_WEIGHT_FOR_SUPPLY_ESTIMATIONS_GUI = 1.0,	—Division supply consumption used for estimating frontline weight for order tooltips

预估供应消耗前线权重计算用师级单位补给消耗因子 = 1.0, ——用于订单工具提示中前线权重估算的师级补给消耗参数

AVAILABLE_MANPOWER_STATE_SUPPLY = 0.18,						—Factor for state supply from max manpower (population)

AVAILABLE_MANPOWER_STATE_SUPPLY = 0.18, ——从最大人力（人口）中获取的州供应系数

NON_CORE_MANPOWER_STATE_SUPPLY = 0.2,						—Factor for population sttate supply when controlled by an occupier (NO TAKE FOOD)

非核心人力状态供应 = 0.2, —被占领者控制时人口状态供应因子（不消耗食物）

STORED_SUPPLY_CONSUMPTION_RATE_FACTOR = 0.75,				—Multiplies consumption rate of stored supply (more/less easement)

STORED_SUPPLY_CONSUMPTION_RATE_FACTOR = 0.75, —乘以储存物资的消耗速率系数（调整消耗难易程度）

},

NAITheatre = {

NAI剧院 = {

AI_THEATRE_GENERATION_HOME_THEATRE_DEPTH_RESTRICTION = 2,			— The home theatre is generated based off a initial depth restriction

AI_THEATRE_GENERATION_HOME_THEATRE_DEPTH_RESTRICTION = 2, — 家庭影院是根据初始深度限制生成的

AI_THEATRE_GENERATION_BORDER_SIZE_RESTRICTION = 7,					— Theatres are generated based off borders, Higher value means larger theatres

AI_THEATRE_GENERATION_BORDER_SIZE_RESTRICTION = 7, — 剧院基于边界生成，数值越大代表剧院规模越大

AI_THEATRE_GENERATION_DEPTH_TO_START_CONSIDERING_BORDERSTATES = 2,	— Distance from capital in terms of states

AI_THEATRE_GENERATION_DEPTH_TO_START_CONSIDERING_BORDERSTATES = 2, —— 从首都出发按州计算的距离

AI_THEATRE_GENERATION_MINIMUM_STATE_COUNT = 3,						— Small Theatres - Minimum state count for a theatre

AI_THEATRE_GENERATION_MINIMUM_STATE_COUNT = 3, ——小型剧院——剧院的最小状态数

AI_THEATRE_GENERATION_MAX_DISTANCE_TO_MERGE = 200,					— Small Theatres - Dont merge with too far away theatres, higher value means less merging will occur

AI_THEATRE_GENERATION_MAX_DISTANCE_TO_MERGE = 200, —— 小型剧院 - 不与过远的剧院合并，数值越大合并发生的几率越低

AI_THEATRE_GENERATION_MAX_DISTANCE_TO_FILL = 350,					— Final generation step - Max distance to fill states, higher values means less theatres

AI_THEATRE_GENERATION_MAX_DISTANCE_TO_FILL = 350，——最终生成步骤 - 填充状态的最大距离，数值越大意味着生成的剧院越少。



AI_THEATRE_DISTRIBUTION_SAME_THEATRE_SCORE_MODIFIER = 0.25, 			— Value that affects the score of units when distributing to fronts within the same theatre, its a percentage multiplier, the higher it is the higher the chance of units staying in close proximity

AI_THEATRE_DISTRIBUTION_SAME_THEATRE_SCORE_MODIFIER = 0.25, —— 该数值影响同一战区内部署部队时的评分，作为百分比乘数，数值越高意味着部队越倾向于维持在邻近区域

AI_THEATRE_DISTRIBUTION_MAX_SCORE = 250000, 						— Max Score that a unit can have when being distributed to ai fronts, higher value means more granularity in score changes, lower values means less variation in where units can go

AI_THEATRE_DISTRIBUTION_MAX_SCORE = 250000, — 单位被分配到AI前线时可能获得的最高分数，数值越高意味着分数变化的粒度更细，数值越低则单位可分配位置的差异越小

AI_THEATRE_DISTRIBUTION_PERCENTAGE_OF_MINIMUM_UNITS_TO_KEEP = 1.0,	— How much should a frontline adheer to its minimum unit demand, when removing/reassigning units

AI_THEATRE_DISTRIBUTION_PERCENTAGE_OF_MINIMUM_UNITS_TO_KEEP = 1.0, —— 在移除/重新分配单位时，前线应保留其最低单位需求的比例是多少

AI_THEATRE_DISTRIBUTION_MAX_PERCENT_UNMET_DEMAND_PER_FRONT = 0.5, — Percentage of how much fronts should request from other lower priority fronts, 0 means once a front gets hold of a unit it stays there forever until its demand is reduced, controlls shuffling of units.

AI_THEATRE_DISTRIBUTION_MAX_PERCENT_UNMET_DEMAND_PER_FRONT = 0.5, —— 表示前线应从其他低优先级前线请求多少比例的未满足需求，0意味着一旦某前线获得单位就会一直保留直至其需求减少，该参数控制单位的调拨流动。



AI_THEATRE_STATE_UPDATE_MAX_STATE_COUNT_TO_EXPAND = 25,				— Max theatre size

AI_THEATRE_STATE_UPDATE_MAX_STATE_COUNT_TO_EXPAND = 25, —— 最大剧场规模



AI_THEATRE_BREAKDOWN_MIN_STATE_COUNT = 3,							— Theatres below this size will break and merge with others

AI_THEATRE_BREAKDOWN_MIN_STATE_COUNT = 3, — 规模小于此数值的剧院将解散并与其他剧院合并

AI_THEATRE_BREAKDOWN_MAX_DISTANCE_TO_MERGE = 200,					— Dont merge with too far away theatres, higher value means less merging will occur

AI_THEATRE_BREAKDOWN_MAX_DISTANCE_TO_MERGE = 200, // 避免与过远战区合并，数值越大合并发生的概率越低



AI_THEATRE_SEARCH_SUPPLY_NODE_MAX_DEPTH = 5,						— Max depth of breadth-first search while looking for supply nodes when out of supply

AI_THEATRE_SEARCH_SUPPLY_NODE_MAX_DEPTH = 5, —— 当补给耗尽时，广度优先搜索寻找补给节点的最大深度

AI_THEATRE_SUPPLY_CRISIS_LIMIT = 0.1, — If a unit is standing in an area with this supply ratio it will try to escape

AI_THEATRE_SUPPLY_CRISIS_LIMIT = 0.1, —— 若某单位所处区域的补给比率达到此值，该单位将尝试撤离

AI_THEATRE_AI_FRONT_MIN_DESIRED_RATIO = 0.18,						— Fronts are sorted based on priority, we nudge unit demand based on this sorting, the higher the value the more units the most important front gets

AI_THEATRE_AI_FRONT_MIN_DESIRED_RATIO = 0.18, —— 前线根据优先级排序，我们依据此排序调整单位需求，数值越高，最重要的前线获得的单位越多

},

NIndustrialOrganisation = {

N工业组织 = {

ASSIGN_DESIGN_TEAM_PP_COST_PER_DAY = 0.1,					— Cost in Political Power daily generation when one MIO is assigned to a research slot. If 0, cost is entirely disabled.

ASSIGN_DESIGN_TEAM_PP_COST_PER_DAY = 0.1, —— 当一名军事工业组织成员被分配到研究槽位时，每日政治力量生成的成本。若为0，则完全禁用该成本。

ASSIGN_INDUSTRIAL_MANUFACTURER_PP_COST_PER_DAY = 0.0,		— Cost in Political Power daily generation when one MIO is assigned to a production line. If 0, cost is entirely disabled.

ASSIGN_INDUSTRIAL_MANUFACTURER_PP_COST_PER_DAY = 0.0, —— 当一名军事工业组织成员被分配至生产线时，每日产生的政治点数成本。若为0，则完全禁用该成本。

FUNDS_FOR_SIZE_UP = 700,									— Funds needed for a MIO to increment its size and get points to unlock traits

升级所需资金 = 700, — 军事工业综合体（MIO）提升规模并获取解锁特性点数所需的资金

FUNDS_FOR_SIZE_UP_LEVEL_FACTOR = 100, 						— How much each level mutliplies the funds for size up

FUNDS_FOR_SIZE_UP_LEVEL_FACTOR = 100, — 每个等级放大资金规模的乘数因子

FUNDS_FOR_SIZE_UP_LEVEL_POW = 1.8, 							— the power we applie to the mio size when calculating funds to level up.

FUNDS_FOR_SIZE_UP_LEVEL_POW = 1.8, ——在计算升级所需资金时应用到mio规模上的幂值。

UNLOCKED_TRAITS_PER_SIZE_UP = 1,							— Number of points for unlocking traits obtained when the MIO increments its size

UNLOCKED_TRAITS_PER_SIZE_UP = 1, —— MIO规模提升时解锁特性获得的点数

DESIGN_TEAM_CHANGE_XP_COST = 5,								— Flat cost added to the XP cost of a new equipment design. If 0, cost is entirely disabled.

DESIGN_TEAM_CHANGE_XP_COST = 5, — 新装备设计时添加到经验值消耗中的固定成本。若为0，则完全取消此项消耗。

FUNDS_FOR_RESEARCH_COMPLETION_PER_RESEARCH_COST = 500, 	— Funds added to MIO when the Design Team has completed a research, multiplied by research_cost in technology template

每项研究完成资金_每研究成本 = 500，——当设计团队完成一项研究时，资金将添加到MIO中，金额为技术模板中的research_cost乘以该数值

FUNDS_FOR_CREATING_EQUIPMENT_VARIANT = 0,					— Funds added to MIO when a new variant is created with the Design Team assigned to it

FUNDS_FOR_CREATING_EQUIPMENT_VARIANT = 0, —— 当设计团队创建新变体时加入MIO的资金

FUNDS_FROM_MANUFACTURER_PER_IC_PER_DAY = 0.1,				— Funds added to MIO when a manufacturer is attached to a production line. Added every day proportional to IC produced.

FUNDS_FROM_MANUFACTURER_PER_IC_PER_DAY = 0.1, — 当制造商附加到生产线时，每天根据生产的IC比例向MIO添加的资金。

MAX_FUNDS_FROM_MANUFACTURER_PER_DAY = 100,					— Max funds generated per manufacturer per day. Set to 0 for no Maximum.

MAX_FUNDS_FROM_MANUFACTURER_PER_DAY = 100, —— 每个制造商每天生成的最大资金量。设为0则表示无上限。

DESIGN_TEAM_RESEARCH_BONUS = 0.05,							— Research bonus for applying a Design Team that matches the technology

设计团队研究加成 = 0.05，——应用与技术匹配的设计团队所获得的研究加成

ENABLE_TASK_CAPACITY = false,								— Enable limited task capacity for MIOs

ENABLE_TASK_CAPACITY = false, ——为MIOs启用有限任务容量

DEFAULT_INITIAL_TASK_CAPACITY = 0,							— Default start task capacity for each MIO (may be overriden in DB)

DEFAULT_INITIAL_TASK_CAPACITY = 0, — 每个MIO的默认初始任务容量（可在数据库中覆盖）

DEFAULT_INITIAL_POLICY_ATTACH_COST = 25,					— Default start attach cost in PP for policies

DEFAULT_INITIAL_POLICY_ATTACH_COST = 25, — 政策默认初始附加成本（以PP为单位）

DEFAULT_INITIAL_ATTACH_POLICY_COOLDOWN = 180,				— Default start cooldown in days after attaching a policy

DEFAULT_INITIAL_ATTACH_POLICY_COOLDOWN = 180, — 默认策略附加后的初始冷却天数

LEGACY_COST_FACTOR_SCALE = 1.0,								— Multiplier to use when legacy Designer cost factors is applied to MIOs (<IdeaGroup>_cost_factor)

LEGACY_COST_FACTOR_SCALE = 1.0， — 当对MIO应用旧版设计器成本系数（<IdeaGroup>_cost_factor）时使用的乘数

},

NProject = {

N项目 = {

FACILITY_SUPPLY_WARNING_RED_RATIO = 0.66,		— When lacking supply for a facility it will be a yellow icon shown until the supply is less than this value, where it will turn red.

FACILITY_SUPPLY_WARNING_RED_RATIO = 0.66, — 当设施供应不足时，会显示黄色图标，直到供应量低于此值，图标将变为红色。

DEFAULT_COMPLEXITY = 100,						— Default special project prototype phase to only require one iteration.

DEFAULT_COMPLEXITY = 100，——默认特殊项目原型阶段仅需一次迭代。

DEFAULT_EMPTY_REWARD_WEIGHT = 1.0,				— The weight for no reward being given after a prototype iteration.

DEFAULT_EMPTY_REWARD_WEIGHT = 1.0，——原型迭代后未给予奖励时的权重值。

DEFAULT_STOP_PROJECT_DAYS = 10,					— The amount of days it takes for a cancelled project to be stopped.

DEFAULT_STOP_PROJECT_DAYS = 10, —— 取消的项目在被停止前所需的天数。

DAYS_TO_REMOVE_SCIENTIST = 10,					— Amount of days needed for a scientist to be unassigned.

DAYS_TO_REMOVE_SCIENTIST = 10, —— 科学家被解除分配所需的天数。

DISMANTLE_FACILITY_DAYS = 100, — Amount of days needed to dismantle a facility.

拆除设施所需天数 = 100, —— 拆除设施所需的天数。

PROTOTYPE_PHASE_MAX_PROGRESS = 100,				— the number of progress points needed to finish the prototype phase and complete the project

PROTOTYPE_PHASE_MAX_PROGRESS = 100, —— 完成原型阶段并结束项目所需的进度点数

MINIMUM_PROJECT_SPEED_FACTOR_FROM_SUPPLY = 0.2,	— Minimum special project research speed based on supply

MINIMUM_PROJECT_SPEED_FACTOR_FROM_SUPPLY = 0.2, —— 基于补给的最低特殊项目研究速度

NEEDED_SUPPLY_FOR_FULL_SPEED_PROJECT = 3.0,	— Supply needed in province to get full research speed for special project

需要供应以全速推进特殊项目 = 3.0, — 省份中获取特殊项目全研究速度所需的供应量

MINIMUM_PROJECT_SPEED_FACTOR_FROM_RESOURCE_SHORTAGE = 0.2, — Minimum special project research speed factor based on resource shortage^M

MINIMUM_PROJECT_SPEED_FACTOR_FROM_RESOURCE_SHORTAGE = 0.2, — 基于资源短缺的特殊项目研究速度最小系数^M

ITERATION_REWARD_DEFAULT_WEIGHT = 1.0,			— If no weight is specified, set it to 1.0

ITERATION_REWARD_DEFAULT_WEIGHT = 1.0, —— 若未指定权重，则设为1.0

DEFAULT_PROJECT_COMPLETION_SCIENTIST_EXPERIENCE_GAIN = 192.0,	— Default experience gain for assigned scientist when a project is completed

DEFAULT_PROJECT_COMPLETION_SCIENTIST_EXPERIENCE_GAIN = 192.0, —— 项目完成时分配给科学家的默认经验值增益

SCIENTIST_INJURED_FACTOR = 0.0, — A factor to reduce the amount of progress gained in a program with attached injured scientist. E.g. 0.5 reduces the progress by 50%

SCIENTIST_INJURED_FACTOR = 0.0, —— 一个用于减少附有受伤科学家的项目进度获取量的系数。例如，0.5表示进度减少50%

RECRUIT_SCIENTIST_ONE_TRAIT_CHANCE = 0.35,		— Chance to get one trait when creating a scientist. E.g. 0.35 = 35% chance to get a trait

RECRUIT_SCIENTIST_ONE_TRAIT_CHANCE = 0.35, —— 创建科学家时获得一个特质的几率。例如0.35表示有35%的几率获得一个特质。

SCIENTIST_BASIC_RESEARCH_DAILY_XP_GAIN = 0.28,	— Daily experience gain for doing basic research

SCIENTIST_BASIC_RESEARCH_DAILY_XP_GAIN = 0.28, —— 进行基础研究的每日经验值获取

RECRUIT_SCIENTIST_COST = {						— Amount of pp to hire a scientist based on available scientist

RECRUIT_SCIENTIST_COST = { — 根据可用科学家数量计算雇佣科学家所需的政治点数

25,			— pp cost if no available scientist

25，——若无可用科学家时的花费

50,			— pp cost if 1 available scientist

50，——如果有一名可用科学家的pp成本

75,			— pp cost if 2 available scientist

75，——若有两名可用科学家时的pp消耗

100			— pp cost if more than 2 available scientist

100 — 若可用科学家超过2名时的pp消耗

},

SCIENTIST_SKILL_LEVEL_THRESHOLDS = {			— Threshold for scientist to level up

科学家技能等级阈值 = { — 科学家升级所需阈值

100,		— to go from level 0 to level 1

100，——从0级升至1级

100,		— to go from level 1 to level 2

100，——从1级升到2级

300,		— to go from level 2 to level 3

300，——从2级升至3级

700,		— …

1500,		— Max level = Array size

1500，— 最大等级 = 数组大小

},

SCIENTIST_SKILL_LEVEL_SPEED_MODIFIER = {		— Bonus to apply to daily phase progress according to the skill level of the scientist

SCIENTIST_SKILL_LEVEL_SPEED_MODIFIER = { — 根据科学家技能等级应用于每日阶段进度的加成

-1.0, — -1.0 means -100% also name loc key is SCIENTIST_SKILL_LEVEL_NAME_0

-1.0，——-1.0表示-100%，且名称本地化键为SCIENTIST_SKILL_LEVEL_NAME_0

-0.05, — -0.05 means -5%			also name loc key is SCIENTIST_SKILL_LEVEL_NAME_1

-0.05，—— -0.05 表示 -5%，同时名称定位键为SCIENTIST_SKILL_LEVEL_NAME_1

0.05,	— 0 means no change		also name loc key is SCIENTIST_SKILL_LEVEL_NAME_2

0.05，—— 0表示无变化，同时命名loc键为SCIENTIST_SKILL_LEVEL_NAME_2

0.1, — 0.15 means +15%			…

0.1，—0.15 意味着上涨15%……





0.15,


0.25,	— Size MUST be SCIENTIST_SKILL_LEVEL_THRESHOLDS’s size + 1

0.25，——数组大小必须为SCIENTIST_SKILL_LEVEL_THRESHOLDS的长度加1

},

PROJECT_LOSS_FACTOR_ON_CAPTURE = 0.2, — Factor of lost progress on project when facility is captured

项目被占领时的进度损失系数 = 0.2, —— 设施被占领时项目进度的损失比例

PROJECT_CAPTURE_GAIN_RATIO = 0.2, — Ratio of difference from captured facilities ongoing project to receive to the captors’ progress

PROJECT_CAPTURE_GAIN_RATIO = 0.2, —— 从被占领设施的在建项目中，占领方所获进度与原始进度差异的比例

PROJECT_CAPTURE_BREAKTHROUGH_PROGRESS = 0.1, — Ratio of breakthrough progress on capture to the captor for the facilities specialization

PROJECT_CAPTURE_BREAKTHROUGH_PROGRESS = 0.1, —— 设施专精中捕获者对突破进展的贡献比例

PROJECT_CAPTURE_DIMINISHING_RETURN = 0.6, — Reduced amount of gain when capturing a facility with a project you already gained. Will apply the factor each time a capture occurs. 0.6 means a reduction of 60% on next project capture.

PROJECT_CAPTURE_DIMINISHING_RETURN = 0.6, — 当占领一个已获得项目的设施时，收益的递减量。每次占领发生时都会应用此系数。0.6 表示下一次项目占领的收益减少60%。

BASIC_RESEARCH_TECHNOLOGY_BONUS_FACTOR = 0.02, — Bonus research factor applied to technologies per scientist skill level when performing basic research in a matching facility.

BASIC_RESEARCH_TECHNOLOGY_BONUS_FACTOR = 0.02, —— 科学家在匹配设施中进行基础研究时，每点技能等级对技术应用的额外研究系数加成。

BASIC_RESEARCH_TECHNOLOGY_BONUS_DIMINISHING_RETURN_FACTOR = 0.5, — Diminishing return on BASIC_RESEARCH_TECHNOLOGY_BONUS_FACTOR for each extra scientist performing basic research for multiple facilities.

BASIC_RESEARCH_TECHNOLOGY_BONUS_DIMINISHING_RETURN_FACTOR = 0.5, — 每增加一名科学家在多个设施进行基础研究时，BASIC_RESEARCH_TECHNOLOGY_BONUS_FACTOR的收益递减系数。

BREAKTHROUGH_DAILY_TECHNOLOGY_GAIN = 12, — Amount in 1/100th percentage. E.g. 25 = 0.25%

每日突破性科技增益 = 12，——以百分之一的百分数表示。例如：25 = 0.25%

BREAKTHROUGH_DAILY_SCIENTIST_SKILL_GAIN = 5, — Amount in 1/100th percentage gained per skill when doing basic research. E.g. 5 = 0.05% per skill level.

BREAKTHROUGH_DAILY_SCIENTIST_SKILL_GAIN = 5, — 进行基础研究时，每项技能每日增加的百分比基数（以1/100为单位）。例如：5 = 每技能等级0.05%。

BREAKTHROUGH_DAILY_ROCKET_SITE_GAIN = 1,		 — Amount in 1/100th percentage gained per rocket site level. E.g. 1 = 0.01% per rocket site level.

每日火箭基地突破增益 = 1, — 每级火箭基地所获得的百分比增益量（以百分之一为单位）。例如：1 = 每级火箭基地0.01%。

BREAKTHROUGH_DAILY_NUCLEAR_REACTOR_GAIN = 1, — Amount in 1/100th percentage gained per nuclear reactor. E.g. 2 = 0.02% per nuclear reactor.

每日核反应堆突破增益 = 1, — 每个核反应堆增加的百分比基数（以1/100为单位）。例如：2 = 每个核反应堆增加0.02%。

BREAKTHROUGH_GAIN_ANIMATION_SPEED_MAX = 1.0,	 — The animation for gaining breakthrough progress is a ratio of this value and current daily gain.

BREAKTHROUGH_GAIN_ANIMATION_SPEED_MAX = 1.0，——突破进度获取动画的速度是此值与当前日增益的比值。

},

NRaids = {

NRaids = {

BASE_DAYS_TO_PREPARE = 7,						 — Base number of days required to complete raid preparation phase

BASE_DAYS_TO_PREPARE = 7, —— 完成突袭准备阶段所需的基础天数

MAX_STATE_TARGETS_TO_EVALUATE_PER_HOUR = 50,	 — PERFORMANCE (HOURLY TICK) : higher number = faster state target re-evaulation + lower performance

MAX_STATE_TARGETS_TO_EVALUATE_PER_HOUR = 50, — 性能（每小时周期）：数值越高=状态目标重新评估越快+性能越低

RAID_TARGET_ITEM_POOL_SIZE = 512,				 — PERFORMANCE (UI) : number of entries to reserve in the raid target item pool

RAID_TARGET_ITEM_POOL_SIZE = 512, — 性能（UI）：在突袭目标物品池中预留的条目数量

RAID_TYPE_ICON_ITEM_POOL_SIZE = 512,			 — PERFORMANCE (UI) : number of entries to reserve in the raid type icon item pool

RAID_TYPE_ICON_ITEM_POOL_SIZE = 512, — 性能（UI）: 为副本类型图标项池预留的条目数量

RAID_LOW_RISK_SETTING_DISASTER_MODIFIER = 0, — How much the disaster risk is modified when the dial is set to “low”

RAID_LOW_RISK_SETTING_DISASTER_MODIFIER = 0, — 当拨盘设置为“低”时，灾难风险的调整幅度

RAID_MEDIUM_RISK_SETTING_DISASTER_MODIFIER = 0.1, — How much the disaster risk is modified when the dial is set to “medium”

RAID_MEDIUM_RISK_SETTING_DISASTER_MODIFIER = 0.1, —— 当风险调节设为“中等”时，对灾害风险的影响系数

RAID_HIGH_RISK_SETTING_DISASTER_MODIFIER = 0.25, — How much the disaster risk is modified when the dial is set to “high”

RAID_HIGH_RISK_SETTING_DISASTER_MODIFIER = 0.25，——当拨盘设置为“高”时，灾难风险的调整幅度

RAID_SUCCESS_MODIFIER_THRESHOLD_BAD = -10.0, — If a success chance modifier is below this value, it will be displayed in red

RAID_SUCCESS_MODIFIER_THRESHOLD_BAD = -10.0, — 如果成功几率修正值低于此数值，将以红色显示

RAID_SUCCESS_MODIFIER_THRESHOLD_NEUTRAL = 0.0, — If a success chance modifier is below this value, it will be displayed in yellow

RAID_SUCCESS_MODIFIER_THRESHOLD_NEUTRAL = 0.0, — 若成功几率修正值低于此数值，将以黄色显示

MAX_DETECTED_TARGETS_PER_HOUR = 1, — PERFORMANCE (HOURLY TICK) : max number of targets to be detected per hour, NOTE : keep this low because detection is checked against every country!

MAX_DETECTED_TARGETS_PER_HOUR = 1, — 性能（每小时检测）：每小时最多可检测的目标数量，注意：请保持此数值较低，因为检测会针对每个国家进行检查！

RAID_DEFAULT_TARGET_COOLDOWN_DAYS = 365, — The default cooldown (in days) for raiding the same target, can be overriden for specific raid types through script

RAID_DEFAULT_TARGET_COOLDOWN_DAYS = 365, —— 默认对同一目标发起突袭的冷却时间（以天为单位），可通过脚本针对特定突袭类型进行覆盖

RAID_UNIT_SPEED_MULTIPLIER = 0.1, — Global speed control

RAID_UNIT_SPEED_MULTIPLIER = 0.1, — 全局速度控制

BASE_NAVAL_COMMANDO_RAID_DISTANCE = 1500, — Max distance in kilometers

BASE_NAVAL_COMMANDO_RAID_DISTANCE = 1500, —— 最大距离（单位：公里）



RAID_LOW_RISK_SETTING_SUCCESS_MODIFIER = 0.0, — How much the success chance is modified when the dial is set to “low”

RAID_LOW_RISK_SETTING_SUCCESS_MODIFIER = 0.0, — 当拨盘设置为“低”时，成功几率被修改的幅度

RAID_MEDIUM_RISK_SETTING_SUCCESS_MODIFIER = 0.1, — How much the success chance is modified when the dial is set to “low”

RAID_MEDIUM_RISK_SETTING_SUCCESS_MODIFIER = 0.1, —— 当拨盘设置为“低”时，成功几率被修改的幅度

RAID_HIGH_RISK_SETTING_SUCCESS_MODIFIER = 0.25, — How much the success chance is modified when the dial is set to “low”

RAID_HIGH_RISK_SETTING_SUCCESS_MODIFIER = 0.25, —— 当拨盘设置为“低”时，成功几率被调整的幅度



TARGET_DETECTION_INTEL_TRESHOLD = 20.0, — How much intel is needed for a target to be detected?

TARGET_DETECTION_INTEL_TRESHOLD = 20.0, —— 检测目标需要多少情报？



TARGET_INTEL_PER_CIVILIAN_INTEL_OVER_COUNTRY = 0.5,		— Intel level over target country is scaled by this value

TARGET_INTEL_PER_CIVILIAN_INTEL_OVER_COUNTRY = 0.5, — 目标国家的情报等级按此值进行比例调整

TARGET_INTEL_PER_ARMY_INTEL_OVER_COUNTRY = 0.5,			— Intel level over target country is scaled by this value

TARGET_INTEL_PER_ARMY_INTEL_OVER_COUNTRY = 0.5, —— 对目标国家的情报级别按此值进行缩放

TARGET_INTEL_PER_NAVY_INTEL_OVER_COUNTRY = 0.5,			— Intel level over target country is scaled by this value

TARGET_INTEL_PER_NAVY_INTEL_OVER_COUNTRY = 0.5, — 针对目标国家的海军情报等级将乘以该系数

TARGET_INTEL_PER_AIRFORCE_INTEL_OVER_COUNTRY = 0.5,		— Intel level over target country is scaled by this value

TARGET_INTEL_PER_AIRFORCE_INTEL_OVER_COUNTRY = 0.5, — 对目标国家的情报等级将按此值进行缩放



TARGET_INTEL_PER_NETWORK_STRENGTH = 0.5,				— Intel network strength in target state is scaled by this value

TARGET_INTEL_PER_NETWORK_STRENGTH = 0.5, —— 目标状态下的情报网络强度将按此值进行比例调整

TARGET_INTEL_FROM_CONTROLLED_NEIGHBOUR_STATES = 15.0,	— Flat bonus for having control over at least one neighbour state

TARGET_INTEL_FROM_CONTROLLED_NEIGHBOUR_STATES = 15.0, — 对至少控制一个邻国时获得的固定加成

TARGET_INTEL_PER_AIR_SUPERIORITY = 0.5,					— Air superiority over target region is scaled by this value

TARGET_INTEL_PER_AIR_SUPERIORITY = 0.5, —— 目标区域的空中优势按此值进行比例调整

TARGET_INTEL_FROM_DECRYPTION = 25.0,					— Flat bonus for having fully decrypted their ciphers

TARGET_INTEL_FROM_DECRYPTION = 25.0, ——完全解密对方密码后的固定加成

TARGET_INTEL_PENALTY_PER_ENEMY_COUNTER_INTEL = 5.0,		— Enemy counter intel is scaled by this value

TARGET_INTEL_PENALTY_PER_ENEMY_COUNTER_INTEL = 5.0, — 敌方反情报数值将按此比例进行缩放



RAID_OUTCOME_REPORT_DAYS_TO_LIVE = 30, — How many days after a raid has ended will the raid outcome report be visible on the map before being automatically dismissed

RAID_OUTCOME_REPORT_DAYS_TO_LIVE = 30, — 突袭结束后，突袭结果报告将在地图上显示多少天后自动消失



NUCLEAR_BOMB_PRODUCTION_SCALE = 2555.0,					— +1 nuclear_production gives 1 nuke per 7 years

核弹生产规模 = 2555.0, — 每增加1点核生产量，7年内可多生产1枚核弹

THERMONUCLEAR_BOMB_PRODUCTION_SCALE = 2555.0,			— +1 nuclear_production gives 1 nuke per 7 years

热核炸弹生产规模=2555.0，——每增加1点核生产能力，每7年可生产1枚核弹



NUCLEAR_BOMB_MIN_DAMAGE_PERCENT = 0.1,					— Minimum damage from nukes as a percentage of current strength/organisation

NUCLEAR_BOMB_MIN_DAMAGE_PERCENT = 0.1, —— 核弹最小伤害百分比，基于当前强度/组织的比例

NUCLEAR_BOMB_MAX_DAMAGE_PERCENT = 0.9,					— Minimum damage from nukes as a percentage of current strength/organisation

NUCLEAR_BOMB_MAX_DAMAGE_PERCENT = 0.9, — 核弹造成的最小伤害，以当前力量/组织的百分比表示

THERMONUCLEAR_BOMB_MIN_DAMAGE_PERCENT = 0.6,			— Minimum damage from nukes as a percentage of current strength/organisation

THERMONUCLEAR_BOMB_MIN_DAMAGE_PERCENT = 0.6, —— 核弹造成的最小伤害，以当前强度/组织的百分比表示

THERMONUCLEAR_BOMB_MAX_DAMAGE_PERCENT = 0.9,			— Minimum damage from nukes as a percentage of current strength/organisation

THERMONUCLEAR_BOMB_MAX_DAMAGE_PERCENT = 0.9, —— 核武器造成的最小伤害，以当前力量/组织度的百分比表示

NUCLEAR_RAID_CATEGORY_NAME = “nuclear_raids”, — The raid category to activate when clicking on the “nuclear” mission button for a rocket

NUCLEAR_RAID_CATEGORY_NAME = "核打击", —— 点击火箭的“核打击”任务按钮时激活的突袭类别



ARMY_TRANSFER_MOVE_SAFELY = true,						— Whether to move safely when transferring divisions to the raid source

ARMY_TRANSFER_MOVE_SAFELY = true, — 在向突袭源转移部队时是否采取安全移动方式

ARMY_TRANSFER_AVOID_ENEMY = true,						— Whether to avoid enemy when transferring divisions to the raid source

ARMY_TRANSFER_AVOID_ENEMY = true, —— 在向突袭源转移部队时是否避开敌军



MAX_TARGETS_TO_UPDATE_PER_FRAME = 100,					— PERFORMANCE (FRAME) : max raid targets to evaluate per frame (affects raid map icon refresh rate)

每帧最大更新目标数 = 100，——性能（帧）：每帧评估的最大团队目标数量（影响团队地图图标刷新频率）

},

}





